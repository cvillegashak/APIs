{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Zoom API",
    "description" : "The Zoom API allows developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials).\nAll endpoints are available via `https` and are located at `api.zoom.us/v2/`.\n\nFor instance you can list all users on an account via `https://api.zoom.us/v2/users/`.\n\nContact Support:\n Name: Zoom Developers\n Email: developersupport@zoom.us",
    "contact" : { },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://api.zoom.us/v2"
  } ],
  "tags" : [ {
    "name" : "accounts"
  }, {
    "name" : "{account Id}"
  }, {
    "name" : "phone"
  }, {
    "name" : "sip trunk/trunks"
  }, {
    "name" : "settings"
  }, {
    "name" : "virtual backgrounds"
  }, {
    "name" : "billing"
  }, {
    "name" : "invoices"
  }, {
    "name" : "plans"
  }, {
    "name" : "base"
  }, {
    "name" : "addons"
  }, {
    "name" : "lock settings"
  }, {
    "name" : "sip trunk"
  }, {
    "name" : "numbers"
  }, {
    "name" : "trunks"
  }, {
    "name" : "callout countries"
  }, {
    "name" : "internal numbers"
  }, {
    "name" : "tracking fields"
  }, {
    "name" : "{field Id}"
  }, {
    "name" : "users"
  }, {
    "name" : "{user Id}"
  }, {
    "name" : "meetings"
  }, {
    "name" : "assistants"
  }, {
    "name" : "schedulers"
  }, {
    "name" : "settings1"
  }, {
    "name" : "virtual backgrounds1"
  }, {
    "name" : "tsp"
  }, {
    "name" : "{tsp Id}"
  }, {
    "name" : "token"
  }, {
    "name" : "webinars"
  }, {
    "name" : "meetings/{meeting Id}"
  }, {
    "name" : "registrants"
  }, {
    "name" : "questions"
  }, {
    "name" : "past meetings"
  }, {
    "name" : "{meeting UUID}"
  }, {
    "name" : "{meeting Id}"
  }, {
    "name" : "metrics"
  }, {
    "name" : "meetings1"
  }, {
    "name" : "{meeting Id}1"
  }, {
    "name" : "participants"
  }, {
    "name" : "webinars1"
  }, {
    "name" : "{webinar Id}"
  }, {
    "name" : "participants1"
  }, {
    "name" : "client"
  }, {
    "name" : "feedback"
  }, {
    "name" : "report"
  }, {
    "name" : "users1"
  }, {
    "name" : "meetings/{meeting Id}1"
  }, {
    "name" : "webinars/{webinar Id}"
  }, {
    "name" : "webinars/{webinar Id}1"
  }, {
    "name" : "panelists"
  }, {
    "name" : "registrants1"
  }, {
    "name" : "questions1"
  }, {
    "name" : "{registrant Id}"
  }, {
    "name" : "polls"
  }, {
    "name" : "{poll Id}"
  }, {
    "name" : "past webinars"
  }, {
    "name" : "{webinar Id}1"
  } ],
  "paths" : {
    "/accounts" : {
      "get" : {
        "tags" : [ "accounts" ],
        "summary" : "List sub accounts",
        "description" : "List all the sub accounts that have been created by a master account.<br><br>Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts. Email the partner programs team at **partner-success@zoom.us** for more details.\n\n<br>**Prerequisites:**<br>\n* Pro or a higher paid account with master account option enabled. <br>\n\n**Scope**: `account:read:admin`\n<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n\n",
        "operationId" : "listSubAccounts",
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "page_number",
          "in" : "query",
          "description" : "\n**Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use \"next_page_token\" for pagination instead of this field.\n\nThe page number of the current page in the returned records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "1"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Account list returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                },
                "examples" : {
                  "Account list returned." : {
                    "value" : {
                      "accounts" : [ {
                        "account_name" : "string",
                        "account_type" : "string",
                        "created_at" : "string [date-time]",
                        "id" : "string [uuid]",
                        "owner_email" : "string",
                        "seats" : "integer",
                        "subscription_end_time" : "string [date-time]",
                        "subscription_start_time" : "string [date-time]"
                      } ],
                      "page_count" : "integer",
                      "page_number" : "integer",
                      "page_size" : "integer",
                      "total_records" : "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "accounts" ],
        "summary" : "Create a sub account",
        "description" : "Create a sub account under a master account. Your account must be a master account in order to create sub accounts. \n<br><br>Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts. Email the partner programs team at partner-success@zoom.us. for more details. Please note that the created account user will receive a confirmation email.<br><br>\n<br>\n**Prerequisites:**<br>\n* Pro or a higher paid account with master account option enabled. <br>\n\n**Scope**: `account:write:admin`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n\n ",
        "operationId" : "createASubAccount",
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Account created.",
            "headers" : {
              "Content-Location" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "ipsum officia"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201"
                },
                "examples" : {
                  "Account created." : {
                    "value" : {
                      "created_at" : "string",
                      "id" : "string",
                      "owner_email" : "string",
                      "owner_id" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:**`300`<br> Your request could not be completed because the name contains an invalid word: {name}\n**Error Code:** `1107`<br>\nEmail domain is blocked.<br>\n**Error Code:** `1111`<br>\nPassword should not contain r",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:**`300`<br> Your request could not be completed because the name contains an invalid word: {name}\n**Error Code:** `1107`<br>\nEmail domain is blocked.<br>\n**Error Code:** `1111`<br>\nPassword should not contain r" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "**HTTP Status Code:** `409`<br>\n**Error Code:** `1005`<br>\nEmail $email has already been used.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `409`<br>\n**Error Code:** `1005`<br>\nEmail $email has already been used." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}" : {
      "get" : {
        "tags" : [ "accounts", "{account Id}" ],
        "summary" : "Get sub account details",
        "description" : "Get details of a sub account that is listed under a master account. Your account must be a master account in order to retrieve sub accounts' details. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and create sub accounts. Email the partner programs team at **partner-success@zoom.us** for more details.\n\n**Prerequisites:**\n* Pro or a higher paid account with master account option enabled. <br>\n\n**Scope**: `account:write:admin`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n\n \n",
        "operationId" : "getSubAccountDetails",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) The account ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code**: `200`<br>\nAccount object returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                },
                "examples" : {
                  "**HTTP Status Code**: `200`<br>\nAccount object returned." : {
                    "value" : {
                      "created_at" : "string [date-time]",
                      "id" : "string",
                      "options" : {
                        "meeting_connectors" : "string",
                        "pay_mode" : "string",
                        "room_connectors" : "string",
                        "share_mc" : "boolean",
                        "share_rc" : "boolean"
                      },
                      "owner_email" : "string",
                      "owner_id" : "string"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code**: `404`<br>\n**Error Code:** `2001`<br> Account does not exist: $subAccountId.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code**: `404`<br>\n**Error Code:** `2001`<br> Account does not exist: $subAccountId." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "accounts", "{account Id}" ],
        "summary" : "Disassociate a sub account",
        "description" : "Disassociate a sub account from its master account. This will leave the sub account intact but it will no longer be associated with the master account.<br>  \n\n**Prerequisites:**\n* Pro or a higher paid account with master account option enabled. <br>\n* The account making this API request must be a [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis).<br><br>\n\n\n**Scope**: `account:write:admin`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n\n ",
        "operationId" : "disassociateASubAccount",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) The account ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code**: `204`<br>Account deleted.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code**: `204`<br>Account deleted." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code**: `404` <br> \n**Error Code:** `2000`<br> You cannot disassociate a paid account. <br>\n**Error Code:** `2001`<br> Account does not exist: $subAccountId.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code**: `404` <br> \n**Error Code:** `2000`<br> You cannot disassociate a paid account. <br>\n**Error Code:** `2001`<br> Account does not exist: $subAccountId." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/billing" : {
      "get" : {
        "tags" : [ "accounts", "{account Id}", "billing" ],
        "summary" : "Get billing information",
        "description" : "Get [billing information](https://support.zoom.us/hc/en-us/articles/201363263-About-Billing) of a sub account.<br><br>Only master accounts can use this API. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts' billing information. Email the partner programs team at **partner-success@zoom.us** for more details.<br>\n\n**Prerequisites:**\n* Pro or a higher paid account with master account option enabled. <br>\n\n**Scope**:`billing:master`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n\n",
        "operationId" : "getBillingInformation",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) The account ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nAccount billing contact information returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nAccount billing contact information returned." : {
                    "value" : {
                      "address" : "string",
                      "apt" : "string",
                      "city" : "string",
                      "country" : "string",
                      "email" : "string",
                      "first_name" : "string",
                      "last_name" : "string",
                      "phone_number" : "string",
                      "state" : "string",
                      "zip" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> \nThis sub account is on self pay mode.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> \nThis sub account is on self pay mode." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.\n\n\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.\n\n\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "accounts", "{account Id}", "billing" ],
        "summary" : "Update billing information",
        "description" : "Update [billing information](https://support.zoom.us/hc/en-us/articles/201363263-About-Billing) of a sub account.<br><br>\nThis API can only be used by master accounts that pay all billiing charges of their associated sub accounts. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts' billing information. Email the partner programs team at **partner-success@zoom.us** for more details.<br><br>\n\n**Prerequisites:**\n* Pro or a higher paid account with master account option enabled. <br>\n\n**Scope**:`billing:master`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n\n",
        "operationId" : "updateBillingInformation",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) The account ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "200" : {
            "description" : "**Error Code:** `200`<br>\nPlease subscribe a plan for this sub account first.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `200`<br>\nPlease subscribe a plan for this sub account first." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nAccount billing contact information updated.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nAccount billing contact information updated." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br>\nThis sub account is on self pay mode.<br>\nInvalid country parameter: {country}.<br>\nInvalid state parameter: {state}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br>\nThis sub account is on self pay mode.<br>\nInvalid country parameter: {country}.<br>\nInvalid state parameter: {state}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.\n\n\n\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.\n\n\n\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/billing/invoices" : {
      "get" : {
        "tags" : [ "accounts", "{account Id}", "billing", "invoices" ],
        "summary" : "List billing invoices",
        "description" : "List [invoices](https://support.zoom.us/hc/en-us/articles/207276556-Viewing-your-invoice-history#h_6710542f-23cc-4059-9cc7-ff02bec7314e) of a Zoom account.\n\nTo list a regular Zoom account's invoices or a master account's invoices, provide `me` as the value of the `accountId` path parameter. To list a sub account's invoices, provide the account ID of the sub account in the `accountId` path parameter. \n\n**Prerequisites:**\n* Account must be enrolled in Pro or a higher plan.<br>\n\n**Scope**:`billing:master`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Additional Rate Limit:** You can make **one** API request per account(`accountId`) every **five** minutes until the daily limit is reached. This API has a daily limit of **6** requests per account(`accountId`).",
        "operationId" : "listBillingInvoices",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) The account ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "Start date for the invoice query in `yyyy-mm-dd` format. The date range defined by the “from” and “to” parameters should not exceed one year. The range defined should fall within the past three years.\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "End date for the invoice query in `yyyy-mm-dd` format",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nAccount billing invoice information returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_3"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nAccount billing invoice information returned." : {
                    "value" : {
                      "currency" : "USD",
                      "invoices" : [ {
                        "balance" : 2039,
                        "due_date" : { },
                        "id" : "2c92c12348d07e0580",
                        "invoice_date" : { },
                        "invoice_number" : "S8INsdf4534000001",
                        "status" : "Draft",
                        "target_date" : { },
                        "tax_amount" : 0,
                        "total_amount" : 2039
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `200`<br>\nOnly available for Paid account: {subAccountId}.\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `200`<br>\nOnly available for Paid account: {subAccountId}.\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/billing/invoices/{invoiceId}" : {
      "get" : {
        "tags" : [ "accounts", "{account Id}", "billing", "invoices" ],
        "summary" : "Get invoice details",
        "description" : "Get detailed information about a specific [invoice](https://support.zoom.us/hc/en-us/articles/207276556-Viewing-your-invoice-history#h_6710542f-23cc-4059-9cc7-ff02bec7314e). <br>To retrieve a regular Zoom account's invoice details or a master account's invoice details, provide `me` as the value of `accountId` path parameter. To list a sub account's invoice details, provide the account ID of the sub account in the `accountId` path parameter. \n\n**Prerequisites:**\n* Account must be enrolled in Pro or a higher plan. <br>\n\n**Scope**:`billing:master`<br>\n<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Additional Rate Limit:** You can make **one** API request every **thirty** minutes until the daily limit is reached. This API has a daily limit of **100** requests per **account**.",
        "operationId" : "getInvoiceDetails",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) The account ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "invoiceId",
          "in" : "path",
          "description" : "(Required) The invoice ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nAccount billing invoice information returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nAccount billing invoice information returned." : {
                    "value" : {
                      "balance" : 2039,
                      "currency" : "USD",
                      "due_date" : { },
                      "id" : "2c92fghvb0580",
                      "invoice_date" : { },
                      "invoice_items" : [ {
                        "charge_name" : "Standard Biz Annual",
                        "charge_number" : "C-00000004",
                        "charge_type" : "Recurring",
                        "end_date" : { },
                        "quantity" : 10,
                        "start_date" : { },
                        "tax_amount" : 0,
                        "total_amount" : 1999
                      }, {
                        "charge_name" : "Cloud Recording 100 GB",
                        "charge_number" : "C-00000005",
                        "charge_type" : "Recurring",
                        "end_date" : { },
                        "quantity" : 1,
                        "start_date" : { },
                        "tax_amount" : 0,
                        "total_amount" : 40
                      } ],
                      "invoice_number" : "Shjmr5INV00000001",
                      "status" : "Draft",
                      "target_date" : { },
                      "tax_amount" : 0,
                      "total_amount" : 2039
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.<br>\nInvoiceId does not exist: {invoiceId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.<br>\nInvoiceId does not exist: {invoiceId}." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/lock_settings" : {
      "get" : {
        "tags" : [ "accounts", "{account Id}", "lock settings" ],
        "summary" : "Get locked settings",
        "description" : "[Account Locked Settings](https://support.zoom.us/hc/en-us/articles/115005269866) allow you turn settings on or off for all users in your account. No user except the account admin or account owner can change these settings. With lock settings, you force the settings on for all users.\nUse this API to retrieve an account's locked settings. \n\n**Note:** This API can be used by Zoom Accounts that are on a Pro or a higher plan as well accounts that have master and sub accounts options enabled. <br><br>\n**Prerequisites:**\n* Pro or a higher paid account. <br>\n\n**Scope**: `account:read:admin`.\n<br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n\n\n\n\n\n**Scope:** account:read:admin",
        "operationId" : "getLockedSettings",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Unique Identifier of the account. To retrieve locked settings of the master account or a regular account, provide \"me\" as the value of this field. <br> To retrieve locked settings of a sub account, provide the Account ID of the sub account in this field.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "option",
          "in" : "query",
          "description" : "`meeting_security`: Use this query parameter to view meeting security settings applied on the account.<br>",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "custom_query_fields",
          "in" : "query",
          "description" : "Provide the name of the field by which you would like to filter the response. For example, if you provide \"host_video\" as the value of this field, you will get a response similar to the following:<br>\n{\n    \"schedule_meeting\": {\n        \"host_video\": false\n    }\n}\n<br>You can provide multiple values by separating them with commas(example: \"host_video,participant_video”).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**Error Code:** `200`<br>\nOnly available for paid account:$accountId.\n\n**HTTP Status Code:** `200`<br>\nLocked settings for the Account returned.\n\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_5"
                },
                "examples" : {
                  "**Error Code:** `200`<br>\nOnly available for paid account:$accountId.\n\n**HTTP Status Code:** `200`<br>\nLocked settings for the Account returned.\n\n" : {
                    "value" : {
                      "email_notification" : {
                        "alternative_host_reminder" : true,
                        "cancel_meeting_reminder" : false,
                        "cloud_recording_available_reminder" : false,
                        "jbh_reminder" : false,
                        "schedule_for_host_reminder" : true
                      },
                      "in_meeting" : {
                        "alert_guest_join" : true,
                        "allow_show_zoom_windows" : true,
                        "annotation" : true,
                        "anonymous_question_answer" : true,
                        "attendee_on_hold" : false,
                        "auto_answer" : true,
                        "auto_saving_chat" : false,
                        "breakout_room" : true,
                        "chat" : false,
                        "closed_caption" : false,
                        "co_host" : false,
                        "custom_data_center_regions" : false,
                        "dscp_marking" : false,
                        "e2e_encryption" : false,
                        "entry_exit_chime" : "ut",
                        "far_end_camera_control" : false,
                        "feedback" : false,
                        "file_transfer" : false,
                        "group_hd" : false,
                        "original_audio" : false,
                        "polling" : true,
                        "post_meeting_feedback" : true,
                        "private_chat" : true,
                        "remote_control" : true,
                        "request_permission_to_unmute" : false,
                        "screen_sharing" : true,
                        "sending_default_email_invites" : false,
                        "show_meeting_control_toolbar" : false,
                        "stereo_audio" : true,
                        "use_html_format_email" : false,
                        "virtual_background" : true,
                        "webinar_question_answer" : false,
                        "whiteboard" : false
                      },
                      "recording" : {
                        "account_user_access_recording" : true,
                        "auto_delete_cmr" : false,
                        "auto_recording" : "voluptate",
                        "cloud_recording" : true,
                        "cloud_recording_download" : true,
                        "host_delete_cloud_recording" : true,
                        "ip_address_access_control" : {
                          "enable" : true,
                          "ip_addresses_or_ranges" : ""
                        },
                        "local_recording" : false,
                        "prevent_host_access_recording" : true,
                        "recording_authentication" : "ut sint"
                      },
                      "schedule_meeting" : {
                        "audio_type" : true,
                        "embed_password_in_join_link" : true,
                        "enforce_login" : false,
                        "enforce_login_domains" : "id tempor deserunt dolore nulla",
                        "enforce_login_with_domains" : false,
                        "host_video" : true,
                        "join_before_host" : false,
                        "meeting_authentication" : true,
                        "not_store_meeting_topic" : true,
                        "participant_video" : false,
                        "require_password_for_instant_meetings" : false,
                        "require_password_for_pmi_meetings" : false,
                        "require_password_for_scheduling_new_meetings" : true
                      },
                      "telephony" : {
                        "telephony_regions" : false,
                        "third_party_audio" : false
                      },
                      "tsp" : {
                        "call_out" : true,
                        "show_international_numbers_link" : true
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: $subAccountId.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: $subAccountId." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "accounts", "{account Id}", "lock settings" ],
        "summary" : "Update locked settings",
        "description" : "[Account Locked Settings](https://support.zoom.us/hc/en-us/articles/115005269866) allow you turn settings on or off for all users in your account. No user except the account admin or account owner can change these settings. With lock settings, you force the settings on for all users. Use this API to update an account's locked settings.\n\n**Note:** This API can be used by Zoom Accounts that are on a Pro or a higher plan as well accounts that have master and sub accounts options enabled.<br><br>\n**Prerequisites:**<br>\n* Pro or a higher paid account. <br>\n\n**Scope:** `account:write:admin`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n\n\n ",
        "operationId" : "updateLockedSettings",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Unique Identifier of the account. To retrieve locked settings of the master account or a regular account, provide \"me\" as the value of this field. <br> To retrieve locked settings of a sub account, provide the Account ID of the sub account in this field.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "200" : {
            "description" : "**Error Code:** `200`<br>\nOnly available for Paid account: $accountId.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : { }
                },
                "examples" : {
                  "**Error Code:** `200`<br>\nOnly available for Paid account: $accountId.\n" : {
                    "value" : { }
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nAccount lock settings updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : { }
                },
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nAccount lock settings updated." : {
                    "value" : { }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nTAccount does not exist: $subAccountId.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nTAccount does not exist: $subAccountId.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/managed_domains" : {
      "get" : {
        "tags" : [ "accounts", "{account Id}" ],
        "summary" : "Get managed domains",
        "description" : "Get a sub account's [managed domains](https://support.zoom.us/hc/en-us/articles/203395207-What-is-Managed-Domain-).<br><br>\n\n**Note:** This API can be used by Zoom Accounts that are on a Pro or a higher plan as well accounts that have master and sub accounts options enabled. <br><br>\nTo get managed domains of the master account, provide `me` as the value for accountId in the path parameter. Provide the sub account's Account ID as the value of accountId path parameter to get managed domains of the sub account.<br><br>\n**Prerequisites:**<br>\n* Pro or a higher paid account with master account option enabled. <br>\n\n**Scope:** `account:read:admin`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n\n\n",
        "operationId" : "getManagedDomains",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Unique Identifier of the account. To retrieve locked settings of the master account or a regular account, provide \"me\" as the value of this field. <br> To retrieve locked settings of a sub account, provide the Account ID of the sub account in this field.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nAccount managed domains returned.\n**Error Code:** `200`<br>\nOnly available for paid account.\n\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_6"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nAccount managed domains returned.\n**Error Code:** `200`<br>\nOnly available for paid account.\n\n" : {
                    "value" : {
                      "domains" : [ {
                        "domain" : "Ut",
                        "status" : "in occaecat ut id"
                      }, {
                        "domain" : "commodo consequat culpa",
                        "status" : "labore id nulla"
                      } ],
                      "total_records" : -36095302
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code**: `2001`<br>\nAccount does not exist: $subAccountId.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code**: `2001`<br>\nAccount does not exist: $subAccountId.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/options" : {
      "patch" : {
        "tags" : [ "accounts", "{account Id}" ],
        "summary" : "Update options",
        "description" : "Update a sub account's options under the master account.<br> <aside>Your account must be a master account in order to update the options for sub accounts. Zoom only assigns this privilege to trusted partners. </aside>\n\n**Prerequisites:**\n* Pro or a higher paid account with master account option enabled.\n* The account making this API request must be a [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis).<br><br>\n\n**Scope**: `account:write:admin`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n\n ",
        "operationId" : "updateOptions",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) The account ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "200" : {
            "description" : "**Error Code:** `200`<br>\nThe pay mode cannot be updated for a sub account which already has an existing plan.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `200`<br>\nThe pay mode cannot be updated for a sub account which already has an existing plan." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nAccount options updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_204"
                },
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nAccount options updated." : {
                    "value" : {
                      "meeting_connectors" : "string",
                      "pay_mode" : "string",
                      "room_connectors" : "string",
                      "share_mc" : "boolean",
                      "share_rc" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> The collection method cannot be changed after the purchase is complete.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> The collection method cannot be changed after the purchase is complete." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: $subAccountId.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: $subAccountId." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/owner" : {
      "put" : {
        "tags" : [ "accounts", "{account Id}" ],
        "summary" : "Update the account owner",
        "description" : "The current account owner can [change the owner of an account](https://support.zoom.us/hc/en-us/articles/115005686983-Change-Account-Owner) to another user on the same account.<br> Use this API to change the owner of a sub account.\n \n**Prerequisites**: <br>\n* Account owner or admin permissions of an account.\n* The account making this API request must be on a pro or a hiigher plan with [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis) privilege.<br><br>\n\n**Scopes:**  `account:write:admin` or `account:master`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n\n\n<br> ",
        "operationId" : "updateTheAccountOwner",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Account Id of the account.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nAccount owner updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : { }
                },
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nAccount owner updated." : {
                    "value" : { }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n\n**Error Code:** `200`<br>\nUser is not an admin or is an API user or doesn’t belong to this account: {accountId}.<br>\nCannot make a user outside of your account an owner.<br>\nCannot update the role of an account owner.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n\n**Error Code:** `200`<br>\nUser is not an admin or is an API user or doesn’t belong to this account: {accountId}.<br>\nCannot make a user outside of your account an owner.<br>\nCannot update the role of an account owner." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: $subAccountId.<br>\n**Error Code:** `3201`<br>\nCannot find a billing account for this: $accountId.<br>\n**Error Code:** `3211`<br>\nCannot find a billing contact for this: $ac",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: $subAccountId.<br>\n**Error Code:** `3201`<br>\nCannot find a billing account for this: $accountId.<br>\n**Error Code:** `3211`<br>\nCannot find a billing contact for this: $ac" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/phone/settings" : {
      "patch" : {
        "tags" : [ "accounts", "{account Id}", "phone" ],
        "summary" : "Update BYOC settings",
        "description" : "Only [master account owners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) can use this API to enable BYOC(Bring your own carrier) option for a sub account.<br>\n\n**Scope**:<br>\n* `phone:master` <br>\n\n**Prerequisites**: <br>\n* Business or enterprise Account.<br>",
        "operationId" : "updateByocSettings",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Unique identifier of the sub account.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**Response HTTP code**: `204` **No Content.**<br>\nUpdated successfully.\n\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : { }
                },
                "examples" : {
                  "**Response HTTP code**: `204` **No Content.**<br>\nUpdated successfully.\n\n" : {
                    "value" : { }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401`<br>\n\n**Error Code:** `124`<br>\nAccount does not exist: {accountId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `401`<br>\n\n**Error Code:** `124`<br>\nAccount does not exist: {accountId}." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/phone/setup" : {
      "post" : {
        "tags" : [ "accounts", "{account Id}", "phone" ],
        "summary" : "Set up a Zoom Phone account",
        "description" : "After assigning a Zoom phone license to an account, an admin or account owner can proceed with the [initial Zoom phone set up](https://support.zoom.us/hc/en-us/articles/360001297663-Getting-started-with-Zoom-Phone-admin-#h_5ae26a3a-290c-4a8d-b3b0-6384ed267b13) using this API.\n\n**Scope**:<br>\n* `phone:write:admin` `phone:write`\n\n**Prerequisites**: <br>\n* Pro or a higher paid account with master account option enabled.\n\n<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId" : "setUpAZoomPhoneAccount",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Unique identifier of the account.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Codes** `201`<br>\nCreated.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Codes** `201`<br>\nCreated." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Response Code:** `400`<br>\n\n**Error Codes:** `300`<br>\nThe extension number {0} that you entered is a reserved number and can not be used. Provide a different number and try again.<br>\nThis account is not enrolled in a Zoom Phone plan. Subscribe to",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Response Code:** `400`<br>\n\n**Error Codes:** `300`<br>\nThe extension number {0} that you entered is a reserved number and can not be used. Provide a different number and try again.<br>\nThis account is not enrolled in a Zoom Phone plan. Subscribe to" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401`<br>\nUnauthorized.<br>\n\n**Error Code:** <br>\n`124` Account does not exist: {accountId}.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `401`<br>\nUnauthorized.<br>\n\n**Error Code:** <br>\n`124` Account does not exist: {accountId}.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/phone/sip_trunk/trunks" : {
      "post" : {
        "tags" : [ "accounts", "{account Id}", "phone", "sip trunk/trunks" ],
        "summary" : "Assign SIP trunks",
        "description" : "Using this API, a [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis) owner can assign SIP trunk(s) to a sub account.<br>\n\n**Scope**:<br>\n* `phone:master` <br>\n\n**Prerequisites**:<br>\n* Business or enterprise Account.<br>\n<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId" : "assignSipTrunks",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Unique identifier of the account.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Code:** `201` **Created** <br>\n\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_1"
                },
                "examples" : {
                  "**HTTP Status Code:** `201` **Created** <br>\n\n" : {
                    "value" : {
                      "sip_trunks" : [ {
                        "carrier_account" : "9866",
                        "id" : "123111",
                        "name" : "test1"
                      }, {
                        "carrier_account" : "986677",
                        "id" : "123444",
                        "name" : "test2"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` <br>\nSIP Trunk does not exist: {sipTruniId}",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` <br>\nSIP Trunk does not exist: {sipTruniId}" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/phone/sip_trunk/trunks/{sipTrunkId}" : {
      "patch" : {
        "tags" : [ "accounts", "{account Id}", "phone", "sip trunk/trunks" ],
        "summary" : "Update SIP trunk details",
        "description" : "Update details of a SIP trunk that is assigned to a sub account.<br>\n\n**Scope**:<br>\n* `phone:master` <br>\n\n**Prerequisites**:<br>\nBusiness or Enterprise Account.<br>\n<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId" : "updateSipTrunkDetails",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Unique identifier of the sub account.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "sipTrunkId",
          "in" : "path",
          "description" : "(Required) Unique identifier of the SIP trunk.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**HTTP Response Code**: `204` **No Content**<br>\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : { }
                },
                "examples" : {
                  "**HTTP Response Code**: `204` **No Content**<br>\n" : {
                    "value" : { }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` <br>\nSip trunk does not exist: {0}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` <br>\nSip trunk does not exist: {0}." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/plans" : {
      "get" : {
        "tags" : [ "accounts", "{account Id}", "plans" ],
        "summary" : "Get plan Information",
        "description" : "Get plan information of a sub account that is managed by a master account. <br><br>This API can only be used by master accounts that pay all billiing charges of their associated Pro or higher sub accounts. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts' billing information. Email the partner programs team at **partner-success@zoom.us** for more details.<br><br>\n**Scopes:** `billing:master`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n\n\n ",
        "operationId" : "getPlanInformation",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) The account ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:**`200`<br>\nAccount's plans returned.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                },
                "examples" : {
                  "**HTTP Status Code:**`200`<br>\nAccount's plans returned.\n" : {
                    "value" : {
                      "plan_audio" : {
                        "callout_countries" : "string",
                        "ddi_numbers" : "integer",
                        "premium_countries" : "string",
                        "tollfree_countries" : "string",
                        "type" : "string"
                      },
                      "plan_base" : {
                        "hosts" : "integer",
                        "type" : "string"
                      },
                      "plan_large_meeting" : [ {
                        "hosts" : "integer",
                        "type" : "string"
                      } ],
                      "plan_phone" : {
                        "plan_base" : {
                          "callout_countries" : "string",
                          "type" : "string"
                        },
                        "plan_calling" : [ {
                          "hosts" : "integer",
                          "type" : "string"
                        } ],
                        "plan_number" : [ {
                          "hosts" : "integer",
                          "type" : "string"
                        } ]
                      },
                      "plan_recording" : "string",
                      "plan_room_connector" : {
                        "hosts" : "integer",
                        "type" : "string"
                      },
                      "plan_webinar" : [ {
                        "hosts" : "integer",
                        "type" : "string"
                      } ],
                      "plan_zoom_rooms" : {
                        "hosts" : "integer",
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> \nThis sub account is on self pay mode.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> \nThis sub account is on self pay mode." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:**`404`<br>\nAccount does not exist: {subAccountId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:**`404`<br>\nAccount does not exist: {subAccountId}." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "accounts", "{account Id}", "plans" ],
        "summary" : "Subscribe plans",
        "description" : "Subscribe a sub account to a Zoom plan using your master account. This API can only be used by master accounts that pay all billiing charges of their associated Pro or higher sub accounts. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts' subscriptions. Email the partner programs team at **partner-success@zoom.us** for more details.<br><br>\n**Scopes**: `billing:master`<br>\n ",
        "operationId" : "subscribePlans",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) The account ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "200" : {
            "description" : "**Error Code:** `200`<br>\nOne zuora account only can have one active billing subscription.<br>\nCan’t subscribe 25-participants pro plan for this sub-account.<br>\nCan’t subscribe 50-participants pro plan for this sub-account.<br>\nIn order to take advantage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : { }
                },
                "examples" : {
                  "**Error Code:** `200`<br>\nOne zuora account only can have one active billing subscription.<br>\nCan’t subscribe 25-participants pro plan for this sub-account.<br>\nCan’t subscribe 50-participants pro plan for this sub-account.<br>\nIn order to take advantage" : {
                    "value" : { }
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "**HTTP Status Code:**`201`<br>\nAccount plans updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_2"
                },
                "examples" : {
                  "**HTTP Status Code:**`201`<br>\nAccount plans updated." : {
                    "value" : {
                      "plan_audio" : {
                        "callout_countries" : "string",
                        "ddi_numbers" : "integer",
                        "premium_countries" : "string",
                        "tollfree_countries" : "string",
                        "type" : "string"
                      },
                      "plan_base" : {
                        "hosts" : "integer",
                        "type" : "string"
                      },
                      "plan_large_meeting" : [ {
                        "hosts" : "integer",
                        "type" : "string"
                      } ],
                      "plan_recording" : "string",
                      "plan_room_connector" : {
                        "hosts" : "integer",
                        "type" : "string"
                      },
                      "plan_webinar" : [ {
                        "hosts" : "integer",
                        "type" : "string"
                      } ],
                      "plan_zoom_rooms" : {
                        "hosts" : "integer",
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code**: `300`<br>Account can’t buy this plan.<br>\nBuy hosts must equal or larger than {minBuyHost}.<br>\nBuy hosts must equal or smaller than {maxBuyHost}.<br>\nBuy hosts must equal or smaller than 9999.<br>\nActive hosts must be equal or larger than",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code**: `300`<br>Account can’t buy this plan.<br>\nBuy hosts must equal or larger than {minBuyHost}.<br>\nBuy hosts must equal or smaller than {maxBuyHost}.<br>\nBuy hosts must equal or smaller than 9999.<br>\nActive hosts must be equal or larger than" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br> **Error Code:** `2100`<br> Invalid parameter: first_name<br>\nInvalid parameter: last_name<br>Invalid parameter: email<br>Invalid parameter: country<br>Invalid parameter: address\nInvalid parameter: city<br>Invalid parameter:",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br> **Error Code:** `2100`<br> Invalid parameter: first_name<br>\nInvalid parameter: last_name<br>Invalid parameter: email<br>Invalid parameter: country<br>Invalid parameter: address\nInvalid parameter: city<br>Invalid parameter:" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br> **Error Code:** `1001`<br> User does not exist.<br> \n**Error Code:** `2001`<br> Account does not exist: {subAccountId}.<br>\n\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br> **Error Code:** `1001`<br> User does not exist.<br> \n**Error Code:** `2001`<br> Account does not exist: {subAccountId}.<br>\n\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/plans/addons" : {
      "put" : {
        "tags" : [ "accounts", "{account Id}", "plans", "addons" ],
        "summary" : "Update an additional plan",
        "description" : "Update an additional plan for a sub account.\n\nThis API can only be used by master accounts that pay all billiing charges of their associated Pro or higher sub accounts. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts' subscriptions. Email the partner programs team at **partner-success@zoom.us** for more details.<br><br>\n<br>**Prerequisites:**<br>\n* Pro or a higher plan with master account enabled.\n* The sub account must be a paid account. The billing charges for the sub account must be paid by the master account.<br><br>\n\n**Scopes**: `billing:master`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n\n\n ",
        "operationId" : "updateAnAdditionalPlan",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) The account ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "200" : {
            "description" : "**Error Code:** `200`<br>\nFree trial and VIP accounts can't update sub plans.<br>\nYou don’t have subscription for ({oldPlanCode}) yet.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `200`<br>\nFree trial and VIP accounts can't update sub plans.<br>\nYou don’t have subscription for ({oldPlanCode}) yet.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nAdditional plan updated for the account.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nAdditional plan updated for the account." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300`<br>\nPlan types do not match, oldPlanType: {oldPlanType} newPlanType: {newPlanType}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300`<br>\nPlan types do not match, oldPlanType: {oldPlanType} newPlanType: {newPlanType}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`\n<br>This sub account is on self pay mode.\n<br>Invalid Additional Plan Type: {newPlanCode}.\n<br>Cannot update Additional plan for a sub account under free plan.\n<br>Invalid plan type.\n<br>Account can’t",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`\n<br>This sub account is on self pay mode.\n<br>Invalid Additional Plan Type: {newPlanCode}.\n<br>Cannot update Additional plan for a sub account under free plan.\n<br>Invalid plan type.\n<br>Account can’t" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.<br>\n**Error Code:** `3200`<br>\nCannot find Zuora subscription for account:{subAccountId}.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.<br>\n**Error Code:** `3200`<br>\nCannot find Zuora subscription for account:{subAccountId}.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "accounts", "{account Id}", "plans", "addons" ],
        "summary" : "Subscribe additional plan",
        "description" : "Subscribe a sub account to a Zoom addon plan. This API can only be used by master accounts that pay all billiing charges of their associated Pro or higher sub accounts. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts' subscriptions. Email the partner programs team at **partner-success@zoom.us** for more details.<br><br>\n<br>**Prerequisites:**<br>\n* Pro or a higher plan with master account option enabled.\n* The sub account must be a paid account. The billing charges for the sub account must be paid by its master account.<br><br>\n\n**Scopes**: `billing:master`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n\n",
        "operationId" : "subscribeAdditionalPlan",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) The account ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Account plans updated.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "Account plans updated." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> \nThis sub account is on self pay mode.<br>\nCannot update Additional plan for a sub account under free plan.<br>\nAdditional Zoom Rooms plan cannot be added to a sub account that already has a Zoom ",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> \nThis sub account is on self pay mode.<br>\nCannot update Additional plan for a sub account under free plan.<br>\nAdditional Zoom Rooms plan cannot be added to a sub account that already has a Zoom " : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br> \nUser does not exist.<br>\n**Error Code:** `2001`<br> \nAccount does not exist: {subAccountId}.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br> \nUser does not exist.<br>\n**Error Code:** `2001`<br> \nAccount does not exist: {subAccountId}.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/plans/addons/status" : {
      "patch" : {
        "tags" : [ "accounts", "{account Id}", "plans", "addons" ],
        "summary" : "Cancel additional plans",
        "description" : "[Cancel additional plan](https://support.zoom.us/hc/en-us/articles/203634215-How-Do-I-Cancel-My-Subscription-) of a sub account. The cancellation does not provide refund for the current subscription. The service remains active for the current session.\n\nThis API can only be used by master accounts that pay all billiing charges of their associated Pro or higher sub accounts. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts' subscriptions. Email the partner programs team at **partner-success@zoom.us** for more details.<br><br>\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n\n**Prerequisites:**<br>\n* Pro or a higher plan with master account option enabled.\n* The sub account must be a paid account.<br>\n**Scope:** `billing:master`<br>\n ",
        "operationId" : "cancelAdditionalPlans",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "200" : {
            "description" : "**Error Code:** `200`<br>\nYou cannot cancel plan for a sub account that is under a free plan.<br>\nYou cannot perform this action because you do not have a Zoom Phone subscription for this account.<br>\nFree trial and VIP accounts can not cancel plans of a ",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `200`<br>\nYou cannot cancel plan for a sub account that is under a free plan.<br>\nYou cannot perform this action because you do not have a Zoom Phone subscription for this account.<br>\nFree trial and VIP accounts can not cancel plans of a " : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nPlan cancelled successfully. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : { }
                },
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nPlan cancelled successfully. " : {
                    "value" : { }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300`<br>\nPlan type is required.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300`<br>\nPlan type is required." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br> \n**Error Code:** `2100`<br>\nThis sub account is on self pay mode.<br>\nYou cannot make cancellation requests for a bundle plan. Contact the Zoom Support team for details.<br>\nMaster accounts with bulk licenses cannot provisi",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br> \n**Error Code:** `2100`<br>\nThis sub account is on self pay mode.<br>\nYou cannot make cancellation requests for a bundle plan. Contact the Zoom Support team for details.<br>\nMaster accounts with bulk licenses cannot provisi" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser does not exist.<br>\n**Error Code:** `2001`<br> \nAccount does not exist: {subAccountId}.\n\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser does not exist.<br>\n**Error Code:** `2001`<br> \nAccount does not exist: {subAccountId}.\n\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/plans/base" : {
      "put" : {
        "tags" : [ "accounts", "{account Id}", "plans", "base" ],
        "summary" : "Update a base plan",
        "description" : "Update a base plan of a sub account. \n\nThis API can only be used by master accounts that pay all billiing charges of their associated Pro or higher sub accounts. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts' subscriptions. Email the partner programs team at **partner-success@zoom.us** for more details.<br><br>\n**Scopes:** `billing:master`<br><br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* The sub account must have a Pro or a higher plan.\n ",
        "operationId" : "updateABasePlan",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) The account ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "200" : {
            "description" : "**Error Code:** `200`\nFree trial and VIP account can't update sub plan.<br>\nYou do not have a subscription yet.<br>\n\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `200`\nFree trial and VIP account can't update sub plan.<br>\nYou do not have a subscription yet.<br>\n\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "**HTTPS Status Code:** `204`<br>\nBase plan updated.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTPS Status Code:** `204`<br>\nBase plan updated." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300`<br>\nInsufficient number of hosts for business plan type.<br>\nInsufficient number of hosts for education plan type.<br>\nPlan types do not match, oldPlanType: {oldPlanType} newPlanType: {newPlanType}.<br>\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300`<br>\nInsufficient number of hosts for business plan type.<br>\nInsufficient number of hosts for education plan type.<br>\nPlan types do not match, oldPlanType: {oldPlanType} newPlanType: {newPlanType}.<br>\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> \nThis sub account is on self pay mode.<br>\nCannot makes updates when account is subscribed to a bundle plan.<br>\nThis account is not under a free trial plan.<br>\nThe account currently has {0} paid",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> \nThis sub account is on self pay mode.<br>\nCannot makes updates when account is subscribed to a bundle plan.<br>\nThis account is not under a free trial plan.<br>\nThe account currently has {0} paid" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser does not exist.\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser does not exist.\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/plans/base/status" : {
      "patch" : {
        "tags" : [ "accounts", "{account Id}", "plans", "base" ],
        "summary" : "Cancel a base plan",
        "description" : "[Cancel a base plan](https://support.zoom.us/hc/en-us/articles/203634215-How-Do-I-Cancel-My-Subscription-) for a sub account.\n\nThis API can only be used by master accounts that pay all billiing charges of their associated Pro or higher sub accounts. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts' subscriptions. Email the partner programs team at **partner-success@zoom.us** for more details.<br><br>\n\n**Scopes**: `billing:master`<br> \n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* The sub account must have a Pro or a higher plan.\n ",
        "operationId" : "cancelABasePlan",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "200" : {
            "description" : "**Error Code:** `200`<br>\nCannot cancel plan for a sub account which is under free plan.<br>\nYou don’t have a major subscription yet.<br>\nYou should first cancel all additional subscriptions.<br>\nFree trial and VIP accounts can not cancel plans of a sub a",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `200`<br>\nCannot cancel plan for a sub account which is under free plan.<br>\nYou don’t have a major subscription yet.<br>\nYou should first cancel all additional subscriptions.<br>\nFree trial and VIP accounts can not cancel plans of a sub a" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nPlan cancelled successfully. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : { }
                },
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nPlan cancelled successfully. " : {
                    "value" : { }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br>\nThis sub account is paid by self.<br>\nYou cannot make cancellation requests for a bundle plan. Contact the Zoom Support team for details.<br>\nMaster accounts with bulk licenses cannot provision, u",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br>\nThis sub account is paid by self.<br>\nYou cannot make cancellation requests for a bundle plan. Contact the Zoom Support team for details.<br>\nMaster accounts with bulk licenses cannot provision, u" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>User does not exist. <br>\n**Error Code:** `2001`<br>This account does not exist or does not belong to this master account.\n\n\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>User does not exist. <br>\n**Error Code:** `2001`<br>This account does not exist or does not belong to this master account.\n\n\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/plans/usage" : {
      "get" : {
        "tags" : [ "accounts", "{account Id}", "plans" ],
        "summary" : "Get plan usage",
        "description" : "Get information on usage of [plans](https://marketplace.zoom.us/docs/api-reference/other-references/plans) of an account. This API supports regular accounts as well as master and sub accounts. To get plan usage of a regular account, use the `account:read:admin` scope and provide “me” as the value of the  `accountId` path parameter.To get plan usage of a master account, provide the keyword \"me\" as the value of the `accountId` path parameter and use the `billing:master` scope. To get plan usage of a sub account, provide the actual account Id of the sub account as the value of the `accountId` path parameter and use the `billing:master` scope. \n\n**Prerequisite**:<br>\nAccount type: master account on a paid Pro, Business or Enterprise plan.<br>\n**Scope:** `billing:master` for master and sub accounts. `account:read:admin` for regular Zoom accounts.<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId" : "getPlanUsage",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200` <br>\nPlan Usage returned.<br>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_8"
                },
                "examples" : {
                  "**HTTP Status Code:** `200` <br>\nPlan Usage returned.<br>" : {
                    "value" : {
                      "plan_base" : {
                        "hosts" : 2,
                        "type" : "monthly",
                        "usage" : 1
                      },
                      "plan_large_meeting" : [ {
                        "hosts" : 1,
                        "type" : "large500_monthly",
                        "usage" : 1
                      } ],
                      "plan_recording" : {
                        "free_storage" : "3 GB",
                        "free_storage_usage" : "0",
                        "plan_storage" : "0",
                        "plan_storage_exceed" : "0",
                        "plan_storage_usage" : "0"
                      },
                      "plan_webinar" : [ {
                        "hosts" : 1,
                        "type" : "webinar100_monthly",
                        "usage" : 1
                      } ],
                      "plan_zoom_rooms" : {
                        "hosts" : 1,
                        "type" : "zroom_monthly",
                        "usage" : 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` <br>\n**Error Code:** `200` <br>\nOnly available for paid account.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` <br>\n**Error Code:** `200` <br>\nOnly available for paid account." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/recordings" : {
      "get" : {
        "tags" : [ "accounts", "{account Id}" ],
        "summary" : "List recordings of an account",
        "description" : "List [Cloud Recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording) available on an Account.\n\n> To access a password protected cloud recording, add an \"access_token\" parameter to the download URL and provide [JWT](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app) as the value of the \"access_token\".\n<br>\n**Prerequisites**:<br>\n* A Pro or a higher paid plan with Cloud Recording option enabled.<br>\n**Scopes**: `recording:read:admin` or `account:read:admin`\n\nIf the scope `recording:read:admin` is used, the Account ID of the Account must be provided in the `accountId` path parameter to list recordings that belong to the Account. This scope only works for sub accounts. \n\nTo list recordings of a master account, the scope must be `account:read:admin` and the value of `accountId` should be `me`.<br>  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n",
        "operationId" : "listRecordingsOfAnAccount",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Unique identifier of the account.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The start date in UTC for the monthly range for which you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. For example, if you make the API request on June 30, 2020, without providing the “from” and “to” parameters, by default the value of 'from' field will be “2020-06-30” and the value of the 'to' field will be “2020-07-01”.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "1998-02-10T02:54:42.448Z"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end date for the monthly range for which you would like to retrieve recordings. The maximum range can be a month.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "1998-02-10T02:54:42.448Z"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**Response Error Code:** `200` <br>\nOnly available for Paid account.\n\n**HTTP Status Code:** `200` <br>\nRecording(s) listed successfully.\n\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_9"
                },
                "examples" : {
                  "**Response Error Code:** `200` <br>\nOnly available for Paid account.\n\n**HTTP Status Code:** `200` <br>\nRecording(s) listed successfully.\n\n" : {
                    "value" : {
                      "from" : { },
                      "meetings" : [ {
                        "account_id" : "lq8QK_AAAAAAAAA",
                        "duration" : 2,
                        "host_email" : "thehostemail@somemail.com",
                        "host_id" : "uLoABCDEF_qQGIsQ",
                        "id" : 101010101,
                        "recording_count" : 3,
                        "recording_files" : [ {
                          "download_url" : "https://zoom.us/recording/download/abcdEFgkkkkk",
                          "file_size" : 26966,
                          "file_type" : "M4A",
                          "id" : "2f6bbbb-0fd7-4691-af13-aaaaaa",
                          "meeting_id" : "i9zq0MR8S/abcdef==",
                          "play_url" : "https://zoomdev.us/recording/play/abcdEFgkkkkk",
                          "recording_end" : "2019-08-20T00:53:16Z",
                          "recording_start" : "2019-08-20T00:51:54Z",
                          "recording_type" : "audio_only",
                          "status" : "completed"
                        }, {
                          "download_url" : "https://zoom.us/recording/download/JolGd4kUpBEo44Q31BVEXrGeCdbT4-MOAAAAA",
                          "file_size" : 37,
                          "file_type" : "CHAT",
                          "id" : "39362666-0fd7-4691-af13-aaaaaa",
                          "meeting_id" : "i9zq0MR8S/abcdef==",
                          "play_url" : "https://zoom.us/recording/play/UpBEo44Q31BVEXrGeCdbT4-MOAAAAAAA",
                          "recording_end" : "2019-08-20T00:53:16Z",
                          "recording_start" : "2019-08-20T00:51:54Z",
                          "recording_type" : "chat_file",
                          "status" : "completed"
                        }, {
                          "download_url" : "https://zoom.us/recording/download/5Y2YnU-56ZY4lEA5AAAABBBBBCCCCCDDDDD",
                          "file_size" : 101679,
                          "file_type" : "MP4",
                          "id" : "K809nk-014djkfsgf-00a98c13ec783",
                          "meeting_id" : "i9zq0MR8S/abcdef==",
                          "play_url" : "https://zoom.us/recording/play/5Y2YnU-56ZY4lEA5AAAABBBBBCCCCCDDDDD",
                          "recording_end" : "2019-08-20T00:53:16Z",
                          "recording_start" : "2019-08-20T00:51:54Z",
                          "recording_type" : "shared_screen_with_speaker_view",
                          "status" : "completed"
                        } ],
                        "share_url" : "https://zoom.us/recording/share/SBDDBJKsbjdAAAAA",
                        "start_time" : "2019-08-20T00:52:13Z",
                        "timezone" : "America/Los_Angeles",
                        "topic" : "MyTestMeeting",
                        "total_size" : 128682,
                        "type" : 2,
                        "uuid" : "i9zq0MR8S/abcdef=="
                      } ],
                      "next_page_token" : "",
                      "page_size" : 30,
                      "to" : { }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `400` <br>\nAccount not found.\n\n**Response Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {accountId}.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` <br>\nAccount not found.\n\n**Response Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {accountId}.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/settings" : {
      "get" : {
        "tags" : [ "accounts", "{account Id}", "settings" ],
        "summary" : "Get settings",
        "description" : "Get the settings of an account.<br>\nTo get the settings of a master account, use `me` as the value for the `accountId` path parameter.<br><br>\n **Prerequisites**:\n * The account must be a paid account.<br>\n**Scopes**: `account:read:admin`\n<br> \n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId" : "getSettings",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) The account ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "option",
          "in" : "query",
          "description" : "`meeting_authentication`: Use this query parameter to view [meeting authentication configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied on the account.<br>`recording_authentication`: Use this query parameter to view [recording authentication configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied on the account.<br>`security`: Use this query parameter to view security settings such as password requirements for user login, two factor authentication etc., applied on the account.<br>\n`meeting_security`: Use this query parameter to view meeting security settings applied on the account.<br>",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "meeting_authentication"
          }
        }, {
          "name" : "custom_query_fields",
          "in" : "query",
          "description" : "Provide the name of the field by which you would like to filter the response. For example, if you provide \"host_video\" as the value of this field, you will get a response similar to the following:<br>\n{\n    \"schedule_meeting\": {\n        \"host_video\": false\n    }\n}\n<br>You can provide multiple values by separating them with commas(example: \"host_video,participant_video”).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br> Account settings returned. \n**Error Code:** `200`<br>\nOnly available for Paid account.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_10"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br> Account settings returned. \n**Error Code:** `200`<br>\nOnly available for Paid account." : {
                    "value" : {
                      "email_notification" : {
                        "alternative_host_reminder" : "boolean",
                        "cancel_meeting_reminder" : "boolean",
                        "cloud_recording_avaliable_reminder" : "boolean",
                        "jbh_reminder" : "boolean",
                        "low_host_count_reminder" : "boolean",
                        "schedule_for_reminder" : "boolean"
                      },
                      "feature" : {
                        "meeting_capacity" : "integer"
                      },
                      "in_meeting" : {
                        "alert_guest_join" : "boolean",
                        "allow_show_zoom_windows" : "boolean",
                        "annotation" : "boolean",
                        "anonymous_question_answer" : "boolean",
                        "attendee_on_hold" : "boolean",
                        "auto_answer" : "boolean",
                        "auto_saving_chat" : "boolean",
                        "breakout_room" : "boolean",
                        "chat" : "boolean",
                        "closed_caption" : "boolean",
                        "co_host" : "boolean",
                        "dscp_audio" : "integer",
                        "dscp_marking" : "boolean",
                        "dscp_video" : "integer",
                        "e2e_encryption" : "boolean",
                        "entry_exit_chime" : "string",
                        "far_end_camera_control" : "boolean",
                        "feedback" : "boolean",
                        "group_hd" : "boolean",
                        "original_audio" : "boolean",
                        "p2p_connetion" : "boolean",
                        "p2p_ports" : "boolean",
                        "polling" : "boolean",
                        "ports_range" : "string",
                        "post_meeting_feedback" : "boolean",
                        "private_chat" : "boolean",
                        "record_play_own_voice" : "boolean",
                        "remote_control" : "boolean",
                        "screen_sharing" : "boolean",
                        "sending_default_email_invites" : "boolean",
                        "show_meeting_control_toolbar" : "boolean",
                        "stereo_audio" : "boolean",
                        "use_html_format_email" : "boolean",
                        "virtual_background" : "boolean",
                        "watermark" : "boolean",
                        "webinar_question_answer" : "boolean",
                        "whiteboard" : "boolean"
                      },
                      "integration" : {
                        "box" : "boolean",
                        "dropbox" : "boolean",
                        "google_calendar" : "boolean",
                        "google_drive" : "boolean",
                        "kubi" : "boolean",
                        "microsoft_one_drive" : "boolean"
                      },
                      "recording" : {
                        "account_user_access_recording" : "boolean",
                        "auto_delete_cmr" : "boolean",
                        "auto_delete_cmr_days" : "integer",
                        "auto_recording" : "string",
                        "cloud_recording" : "boolean",
                        "cloud_recording_download" : "boolean",
                        "cloud_recording_download_host" : "boolean",
                        "local_recording" : "boolean",
                        "record_audio_file" : "boolean",
                        "record_gallery_view" : "boolean",
                        "record_speaker_view" : "boolean",
                        "recording_audio_transcript" : "boolean",
                        "save_chat_text" : "boolean",
                        "show_timestamp" : "boolean"
                      },
                      "schedule_meeting" : {
                        "audio_type" : "string",
                        "enforce_login" : "boolean",
                        "enforce_login_domains" : "string",
                        "enforce_login_with_domains" : "boolean",
                        "force_pmi_jbh_password" : "boolean",
                        "host_video" : "boolean",
                        "join_before_host" : "boolean",
                        "not_store_meeting_topic" : "boolean",
                        "participant_video" : "boolean",
                        "require_password_for_instant_meetings" : "boolean",
                        "require_password_for_pmi_meetings" : "string",
                        "require_password_for_scheduled_meetings" : "boolean",
                        "require_password_for_scheduling_new_meetings" : "boolean",
                        "use_pmi_for_instant_meetings" : "boolean",
                        "use_pmi_for_scheduled_meetings" : "boolean"
                      },
                      "security" : {
                        "admin_change_name_pic" : "boolean",
                        "hide_billing_info" : "boolean",
                        "import_photos_from_devices" : "boolean"
                      },
                      "telephony" : {
                        "audio_conference_info" : "string",
                        "third_party_audio" : "boolean"
                      },
                      "tsp" : {
                        "call_out" : "boolean",
                        "call_out_countries" : [ "string" ],
                        "display_toll_free_numbers" : "boolean",
                        "show_international_numbers_link" : "boolean"
                      },
                      "zoom_rooms" : {
                        "auto_start_stop_scheduled_meetings" : "boolean",
                        "cmr_for_instant_meeting" : "boolean",
                        "force_private_meeting" : "boolean",
                        "hide_host_information" : "boolean",
                        "list_meetings_with_calendar" : "boolean",
                        "start_airplay_manually" : "boolean",
                        "ultrasonic" : "boolean",
                        "upcoming_meeting_alert" : "boolean",
                        "weekly_system_restart" : "boolean",
                        "zr_post_meeting_feedback" : "boolean"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: $subAccountId.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: $subAccountId." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "accounts", "{account Id}", "settings" ],
        "summary" : "Update settings",
        "description" : "Update the settings of a sub account that is under a master account.<br> To update the settings of the master account, use `me` as the value of the `accountId` path parameter.<br><br>\n**Prerequisites**:\n * The sub account must be a paid account.<br>\n**Scopes**: `account:write:admin`\n<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId" : "updateSettings",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) The account ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "option",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "security"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "200" : {
            "description" : "**Error Code:** `200`<br> Only available for Paid account.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `200`<br> Only available for Paid account." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "**HTTP Status Code:** `204` <br>Account settings updated.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204` <br>Account settings updated." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300` <br>The domains provided are invalid. If you are providing multiple domains, separate each domain with a comma.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300` <br>The domains provided are invalid. If you are providing multiple domains, separate each domain with a comma." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>Account does not exist: $subAccountId.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>Account does not exist: $subAccountId." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/settings/virtual_backgrounds" : {
      "post" : {
        "tags" : [ "accounts", "{account Id}", "settings", "virtual backgrounds" ],
        "summary" : "Upload virtual background files",
        "description" : "Use this API to [upload virtual background files](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_01EJF3YFEWGT8YA0ZJ079JEDQE) for all users on the account to use. \n\n\n**Prerequisites:**<br>\n* Virtual background feature must be [enabled](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7) on the account.\n<br> **Scope:** `account:write:admin`<br><br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n\n",
        "operationId" : "uploadVirtualBackgroundFiles",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Code:** `201` **Created** <br>\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_3"
                },
                "examples" : {
                  "**HTTP Status Code:** `201` **Created** <br>\n" : {
                    "value" : {
                      "id" : "_Tcj7354w6eHw",
                      "is_default" : false,
                      "name" : "u=mdbhhfg3y7&fm=2fdjs0.jpg",
                      "size" : 53434,
                      "type" : "image"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `120`<br>\nNo file uploaded, verify that a file has been uploaded.<br>\nFile size cannot exceed 15M.<br>\nA maximum of 10 files are allowed for a user.<br>\nOnly jpg/jpeg, gif or png image file ",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `120`<br>\nNo file uploaded, verify that a file has been uploaded.<br>\nFile size cannot exceed 15M.<br>\nA maximum of 10 files are allowed for a user.<br>\nOnly jpg/jpeg, gif or png image file " : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {accountId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {accountId}." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "accounts", "{account Id}", "settings", "virtual backgrounds" ],
        "summary" : "Delete virtual background files",
        "description" : "Delete existing virtual background file(s) from an account. \n\n**Prerequisites:**<br>\n* Virtual background feature must be [enabled](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7) on the account.\n<br> **Scope:** `account:write:admin`<br> <br> \n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId" : "deleteVirtualBackgroundFiles",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "file_ids",
          "in" : "query",
          "description" : "Provide the id of the file that is to be deleted. To delete multiple files, provide comma separated values for this field.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204` **No Content** <br>\nDeleted.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204` **No Content** <br>\nDeleted.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad request** <br>\n**Error Code:** `300`<br>\nInvalid parameter: file_ids.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad request** <br>\n**Error Code:** `300`<br>\nInvalid parameter: file_ids." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {accountId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {accountId}." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sip_trunk/callout_countries" : {
      "get" : {
        "tags" : [ "accounts", "{account Id}", "sip trunk", "callout countries" ],
        "summary" : "List internal call-out countries",
        "description" : "Retrieve the list of internal [call-out](https://support.zoom.us/hc/en-us/articles/200942859-How-To-Use-Telephone-Call-Out-) countries of a master account or a sub account. To list call-out enabled countries of a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list call-out enabled countries of a master account, provide `me` as the value of the `accountId` path parameter.\n<br><b>Prerequisites:</b><br>\n* The account making this API request must be a [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis) with SIP Connected Audio Plan.<br><br>\n**Scope:** `sip_trunk:master`",
        "operationId" : "listInternalCallOutCountries",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Unique identifier of the account. To list Call-out enabled countries to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list Call-out enabled countries of a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list Call-out enabled countries of a master account, provide `me` as the value of the `accountId` path parameter.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200` **OK** <br>\nList of Internal Callout Countries returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_11"
                },
                "examples" : {
                  "**HTTP Status Code:** `200` **OK** <br>\nList of Internal Callout Countries returned." : {
                    "value" : {
                      "callout_countries" : [ {
                        "code" : "1",
                        "id" : "US",
                        "name" : "United States"
                      }, {
                        "code" : "1",
                        "id" : "CA",
                        "name" : "Canada"
                      } ],
                      "total_records" : 2
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n*  Request failed because this account ",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n*  Request failed because this account " : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "accounts", "{account Id}", "sip trunk", "callout countries" ],
        "summary" : "Add internal call-out countries",
        "description" : "Specify the list of [call-out](https://support.zoom.us/hc/en-us/articles/200942859-How-To-Use-Telephone-Call-Out-) countries for a master account or a sub account. To add call-out enabled countries to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To add call-out enabled countries to a master account, provide `me` as the value of the `accountId` path parameter.\n<br><b>Prerequisites:</b><br>\n* The account making this API request must be a [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis) with SIP Connected Audio Plan.<br><br>\n**Scope:** `sip_trunk:master`",
        "operationId" : "addInternalCallOutCountries",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Unique identifier of the account. To list Call-out enabled countries to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list Call-out enabled countries of a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list Call-out enabled countries of a master account, provide `me` as the value of the `accountId` path parameter.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Code:** `201` **Created** <br>\nCall-out countries created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_4"
                },
                "examples" : {
                  "**HTTP Status Code:** `201` **Created** <br>\nCall-out countries created." : {
                    "value" : {
                      "callout_countries" : [ {
                        "code" : "1",
                        "id" : "US",
                        "name" : "United States"
                      }, {
                        "code" : "1",
                        "id" : "CA",
                        "name" : "Canada"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n*  Request failed because this account ",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n*  Request failed because this account " : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sip_trunk/callout_countries/{countryId}" : {
      "delete" : {
        "tags" : [ "accounts", "{account Id}", "sip trunk", "callout countries" ],
        "summary" : "Delete internal call-out country",
        "description" : "Delete a previously assigned [call-out](https://support.zoom.us/hc/en-us/articles/200942859-How-To-Use-Telephone-Call-Out-) country from a master account or a sub account. To remove call-out country from a sub account, provide the account ID of the sub account in the `accountId` path parameter. To remove call-out country from a master account, provide `me` as the value of the `accountId` path parameter.\n<br><b>Prerequisites:</b><br>\n* The account making this API request must be a [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis) with SIP Connected Audio Plan.<br><br>\n**Scope:** `sip_trunk:master`",
        "operationId" : "deleteInternalCallOutCountry",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Unique Identifier of the Account.<br>\nTo remove Call-out country from a sub account, provide the account ID of the sub account in the `accountId` path parameter. To remove Call-out country from a master account, provide `me` as the value of the `accountId` path parameter.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "countryId",
          "in" : "path",
          "description" : "(Required) Two lettered Id of the country.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204` **No Content** <br>\nCountry deleted. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : { }
                },
                "examples" : {
                  "**HTTP Status Code:** `204` **No Content** <br>\nCountry deleted. " : {
                    "value" : { }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n*  Request failed because this account ",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n*  Request failed because this account " : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sip_trunk/internal_numbers" : {
      "get" : {
        "tags" : [ "accounts", "{account Id}", "sip trunk", "internal numbers" ],
        "summary" : "List internal numbers",
        "description" : "This API allows a master account with SIP Connected Audio plan to list internal phone numbers (i.e., numbers that are not provided by Zoom but are owned by the organization consuming the API) assigned to a master account or a sub account.<br><br>To list internal numbers of a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list internal numbers of a  master account, provide `me` as the value of the `accountId` path parameter.\n<br><b>Prerequisites:</b><br>\n* The account making this API request must be a [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis) with SIP Connected Audio Plan.<br><br>\n**Scope:** `sip_trunk:master`\n\n\n",
        "operationId" : "listInternalNumbers",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Unique identifier of the account. To list internal numbers of a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list internal numbers of a  master account, provide `me` as the value of the `accountId` path parameter.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200` **OK**<br>\nList of internal numbers returned.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_12"
                },
                "examples" : {
                  "**HTTP Status Code:** `200` **OK**<br>\nList of internal numbers returned.\n" : {
                    "value" : {
                      "internal_numbers" : [ {
                        "allow_for_external_meetings" : false,
                        "allow_join" : true,
                        "country" : "pariatur ex",
                        "display_number" : "commodo nulla dolore",
                        "labels" : "adipisicing dolore esse",
                        "languages" : "en-GB",
                        "number" : "enim consectetur",
                        "type" : 1,
                        "visible" : true
                      }, {
                        "allow_for_external_meetings" : false,
                        "allow_join" : true,
                        "country" : "tempor ex Duis in aute",
                        "display_number" : "ullamco in",
                        "labels" : "exercitation laboris",
                        "languages" : "en-GB",
                        "number" : "consectetur laboris m",
                        "type" : 1,
                        "visible" : true
                      } ],
                      "next_page_token" : "eu ad ex enim eiusmod",
                      "page_size" : 30,
                      "total_records" : -30798311
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n* Request failed because this account i",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n* Request failed because this account i" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "accounts", "{account Id}", "sip trunk", "internal numbers" ],
        "summary" : "Add internal numbers",
        "description" : "This API allows a master account with SIP Connected Audio plan to assign internal phone numbers (i.e., numbers that are not provided by Zoom but are owned by the organization consuming the API) to a master account or a sub account.<br><br>To add internal numbers to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To add internal numbers to a master account, provide `me` as the value of the `accountId` path parameter.\n<br><b>Prerequisites:</b><br>\n* The account making this API request must be a [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis) with SIP Connected Audio Plan.<br><br>\n**Scope:** `sip_trunk:master`\n\n",
        "operationId" : "addInternalNumbers",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Unique identifier of the account. To list internal numbers of a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list internal numbers of a  master account, provide `me` as the value of the `accountId` path parameter.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Code:** `201` **Created** <br>\nInternal numbers added successfully. \n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_5"
                },
                "examples" : {
                  "**HTTP Status Code:** `201` **Created** <br>\nInternal numbers added successfully. \n" : {
                    "value" : {
                      "internal_numbers" : [ {
                        "allow_join" : true,
                        "country" : "US",
                        "display_number" : "+1 646 666 1110",
                        "id" : "A26fhgdfg63",
                        "labels" : "SIP-Internal",
                        "languages" : "en-GB",
                        "number" : "+16466661110",
                        "type" : 0,
                        "visible" : true
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n* Request failed because this account i",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n* Request failed because this account i" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n\n\n\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n\n\n\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sip_trunk/internal_numbers/{numberId}" : {
      "delete" : {
        "tags" : [ "accounts", "{account Id}", "sip trunk", "internal numbers" ],
        "summary" : "Delete an internal number",
        "description" : "This API allows a master account with SIP Connected Audio plan to delete a previously assigned internal phone number from a master account or a sub account.<br><br>To delete an internal number from a sub account, provide the account ID of the sub account in the `accountId` path parameter. To delete an internal number from a master account, provide `me` as the value of the `accountId` path parameter.\n<br><b>Prerequisites:</b><br>\n* The account making this API request must be a [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis) with SIP Connected Audio Plan.<br><br>\n**Scope:** `sip_trunk:master`\n\n\n",
        "operationId" : "deleteAnInternalNumber",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Unique Identifier of the account. To delete an internal number from a sub account, provide the account ID of the sub account in the `accountId` path parameter. To delete an internal number from a master account, provide `me` as the value of the `accountId` path parameter.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "numberId",
          "in" : "path",
          "description" : "(Required) Unique identifier of the phone number. This value can be retrieved by calling the List Internal Numbers API.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204` **No Content** <br>\nNumber deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : { }
                },
                "examples" : {
                  "**HTTP Status Code:** `204` **No Content** <br>\nNumber deleted." : {
                    "value" : { }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n* Request failed because this account i",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n* Request failed because this account i" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sip_trunk/numbers" : {
      "post" : {
        "tags" : [ "accounts", "{account Id}", "sip trunk", "numbers" ],
        "summary" : "Assign numbers",
        "description" : "With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers' IP telephony network, will be connected over this trunk rather than over the PSTN. <br><br>Use this API to assign internal numbers to a sub account.\n\n**Prerequisites:**<br>\n* Pro or a higher account with SIP Connected Audio plan enabled.\n* The account must be a master account<br>\n**Scopes:** `sip_trunk:master`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n",
        "operationId" : "assignNumbers",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Account ID of the sub account from which the numbers are to be deleted. This can be retrieved from [List sub accounts](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/account) API.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Code:** `201` **Created**<br>\nNumbers assigned successfully.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : { }
                },
                "examples" : {
                  "**HTTP Status Code:** `201` **Created**<br>\nNumbers assigned successfully.\n" : {
                    "value" : { }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan.<br><br>\n**Error Code:** `400`<br>\nThis number does not belong to master account.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan.<br><br>\n**Error Code:** `400`<br>\nThis number does not belong to master account.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to this master account.<br>\nThis account does not exist or does not belong to you.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to this master account.<br>\nThis account does not exist or does not belong to you.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "accounts", "{account Id}", "sip trunk", "numbers" ],
        "summary" : "Delete all numbers",
        "description" : "With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers' IP telephony network, will be connected over this trunk rather than over the PSTN. <br><br>Use this API to delete all internal numbers assigned to a sub account.\n**Prerequisites:**<br>\n\n* Pro or a higher account with SIP Connected Audio plan enabled.\n* The account must be a master account<br>\n**Scopes:** `sip_trunk:master`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId" : "deleteAllNumbers",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Account ID of the sub account from which the numbers are to be deleted. This can be retrieved from [List sub accounts](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/account) API.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204` **No Content**<br>\nNumbers deleted successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : { }
                },
                "examples" : {
                  "**HTTP Status Code:** `204` **No Content**<br>\nNumbers deleted successfully." : {
                    "value" : { }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to this master account.<br>\nThis account does not exist or does not belong to you.<br><br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to this master account.<br>\nThis account does not exist or does not belong to you.<br><br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sip_trunk/settings" : {
      "patch" : {
        "tags" : [ "accounts", "{account Id}", "sip trunk" ],
        "summary" : "Assign SIP trunk configuration",
        "description" : "With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers' IP telephony network, will be connected over this trunk rather than over the PSTN. <br><br> Using this API, a master account owner can copy the SIP Connected Audio configurations applied on the master account and enable those configurations on a sub account. The owner can also disable the configuration in the sub account where it was previously enabled. \n**Prerequisites:**<br>\n* Pro or a higher account with SIP Connected Audio plan enabled.\n* master account Owner<br>\n**Scopes:** `sip_trunk:master`<br> \n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId" : "assignSipTrunkConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204` **No Content**<br>\nConfiguration assigned successfully.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : { }
                },
                "examples" : {
                  "**HTTP Status Code:** `204` **No Content**<br>\nConfiguration assigned successfully.\n" : {
                    "value" : { }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to this master account.<br>\nThis account does not exist or does not belong to you.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to this master account.<br>\nThis account does not exist or does not belong to you." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sip_trunk/trunks" : {
      "get" : {
        "tags" : [ "accounts", "{account Id}", "sip trunk", "trunks" ],
        "summary" : "List SIP trunks",
        "description" : "With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers’ IP telephony network, will be connected over this trunk rather than over the PSTN.<br><br>\nUse this API to list all the SIP trunks assigned to a master account or a sub account of the master account. To retrieve SIP trunks assigned to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To retrieve SIP trunks of a master account, provide `me` as the value of the `accountId` path parameter. <br><br> **Scope:** `sip_trunk:read:admin`\n<br><b>Prerequisites:</b><br>\n* The account must either be a master account or a sub account with [API Partner Plan](https://zoom.us/plan/api) and SIP Connected Audio Plan.",
        "operationId" : "listSipTrunks",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Unique Identifier of the sub account.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200` **OK**<br>\nList of SIP Trunks returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_13"
                },
                "examples" : {
                  "**HTTP Status Code:** `200` **OK**<br>\nList of SIP Trunks returned." : {
                    "value" : {
                      "sip_trunks" : [ {
                        "dnis" : "90001258",
                        "id" : "268",
                        "name" : "test1",
                        "number_prefix" : "0",
                        "sip_server_address" : "111.111.1.1"
                      }, {
                        "dnis" : "80001748",
                        "id" : "281",
                        "name" : "test2",
                        "number_prefix" : "0",
                        "sip_server_address" : "111.111.1.34"
                      } ],
                      "total_records" : 1
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> Request failed because this account is not enrolled in SIP Connected Audio plan.\n\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> Request failed because this account is not enrolled in SIP Connected Audio plan.\n\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "accounts", "{account Id}", "sip trunk", "trunks" ],
        "summary" : "Assign SIP trunks",
        "description" : "With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers’ IP telephony network, will be connected over this trunk rather than over the PSTN.<br><br>Use this API to assign SIP trunk(s) that are available on a master account to a sub account. <br><b>Prerequisites:</b><br>\n* The account making this API request must be a master account with [API Partner Plan](https://zoom.us/plan/api) and SIP Connected Audio Plan.<br><br>\n**Scope:** `sip_trunk:master`",
        "operationId" : "assignSipTrunks1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Unique Identifier of the sub account.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Code:** `204` **No Content**<br>\nSIP Trunk assigned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_6"
                },
                "examples" : {
                  "**HTTP Status Code:** `204` **No Content**<br>\nSIP Trunk assigned successfully." : {
                    "value" : {
                      "sip_trunks" : [ {
                        "dnis" : "dolore43tr4u",
                        "id" : "represdf324fe",
                        "name" : "HQ-trunk",
                        "number_prefix" : "0",
                        "sip_server_address" : "1.11.123.123"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Request failed because this account is not enrolled in SIP Connected Audio plan.<br>\n* The master account has no sip trunk configs.<br>\n* Invalid parameter: sip_trunks.\n\n\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Request failed because this account is not enrolled in SIP Connected Audio plan.<br>\n* The master account has no sip trunk configs.<br>\n* Invalid parameter: sip_trunks.\n\n\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sip_trunk/trunks/{trunkId}" : {
      "delete" : {
        "tags" : [ "accounts", "{account Id}", "sip trunk", "trunks" ],
        "summary" : "Delete a SIP trunk",
        "description" : "Use this API to remove existing SIP trunk of a sub account.<br>\n<br><b>Prerequisites:</b><br>\n* The account making this API request must be a master account with [API Partner Plan](https://zoom.us/plan/api) and SIP Connected Audio Plan.<br><br>\n**Scope:** `sip_trunk:master`",
        "operationId" : "deleteASipTrunk",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) Unique identifier of the sub account.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "trunkId",
          "in" : "path",
          "description" : "(Required) Unique identifier of the SIP Trunk that was previously assigned to a sub account. To retrieve the value of this field, use the List SIP Trunks API.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204` **No Content**<br>\nSIP Trunk deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : { }
                },
                "examples" : {
                  "**HTTP Status Code:** `204` **No Content**<br>\nSIP Trunk deleted." : {
                    "value" : { }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Request failed because this account is not enrolled in SIP Connected Audio plan.<br>\n* Your account does not have the permission to make updates on this account. Only a master ac",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Request failed because this account is not enrolled in SIP Connected Audio plan.<br>\n* Your account does not have the permission to make updates on this account. Only a master ac" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n\n\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n\n\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/trusted_domains" : {
      "get" : {
        "tags" : [ "accounts", "{account Id}" ],
        "summary" : "Get trusted domains",
        "description" : "Get trusted domains of a sub account. To get the trusted domains of a master account, use `me` as the value for the `accountId` path parameter.\n\n**Prerequisites:**<br>\n* The sub account must be a paid account.<br>\n**Scope:** `account:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId" : "getTrustedDomains",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) The account ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nAccount trusted domains returned<br>\n**Error Code:** `2001`<br> Account does not exist: $subAccountId.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_14"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nAccount trusted domains returned<br>\n**Error Code:** `2001`<br> Account does not exist: $subAccountId." : {
                    "value" : {
                      "trusted_domains" : [ "adipisicing dolor dolore", "culpa" ]
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br> Account does not exist: $subAccountId.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br> Account does not exist: $subAccountId." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/users/{userId}/account" : {
      "put" : {
        "tags" : [ "accounts", "{account Id}" ],
        "summary" : "Switch a user's account",
        "description" : "Disassociate a user from one Account and move the user to another Account under the same master account. \n\nWith this API, a user under a master account or a sub account can be moved to another sub account within the same master account. To move a user from a master account to a sub account, use `me` as the value for `accountId`. In this scenario, \"me\" refers to the Account ID of the master account. \n\nTo move a user from one sub account to another sub account, provide the sub account's Account ID as the value for `accountId`. \n\n**Prerequisites**:\n* The account should have Pro or a higher plan with master account option enabled.\n* The user whose account needs to be switched should not be an admin or an owner of that account.\n* The user should not have the same [managed domain](https://support.zoom.us/hc/en-us/articles/203395207-What-is-Managed-Domain-) as the account owner.\n\n**Scope:** `user:master`<br> \n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId" : "switchAUserSAccount",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "(Required) ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code**: `204`<br>\nUser's account switched successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : { }
                },
                "examples" : {
                  "**HTTP Status Code**: `204`<br>\nUser's account switched successfully." : {
                    "value" : { }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code**: `400` **Bad Request**<br>\n**Error Code:** `1117`<br> Can not disassociate Admin user",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code**: `400` **Bad Request**<br>\n**Error Code:** `1117`<br> Can not disassociate Admin user" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code**: `404` **Not Found**<br>\n\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br><br>\n\n**Error Code:** `1010`<br>\nUser not found on this account.<br>\n\n**Error Code:** `1120`<br> Invite not exist",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code**: `404` **Not Found**<br>\n\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br><br>\n\n**Error Code:** `1010`<br>\nUser not found on this account.<br>\n\n**Error Code:** `1120`<br> Invite not exist" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/archive_files" : {
      "get" : {
        "summary" : "List archived files",
        "description" : "Zoom’s [archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) allows account administrators to set up an automated mechanism to record, collect and archive meeting data to a 3rd party platform of their choice and hence, satisfy FINRA and/ or other compliance requirements.<br><br>\nUse this API to retrieve archived meeting or webinar files of an account.\n\n**Scope:** `recording:read:admin`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br><br>\n**Prerequisites:** <br>\n* Enable cloud recording.\n* Follow the [enablement process](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data#h_01ENPBD3WR68D7FAKTBY92SG45) to access the archiving feature.",
        "operationId" : "listArchivedFiles",
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "Start date for the query in \"yyyy-MM-dd'T'HH:mm:ss'Z'\" format. The duration for the query defined using the \"from\" and \"to\" parameters should not exceed 7 days as this API only provides a week's data at once.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "End date for the query in \"yyyy-MM-dd'T'HH:mm:ss'Z'\" format. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "query_data_type",
          "in" : "query",
          "description" : "Query data type for `from` and `to`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "meeting_start_time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200` **OK**\nArchived files returned.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_15"
                },
                "examples" : {
                  "**HTTP Status Code:** `200` **OK**\nArchived files returned.\n" : {
                    "value" : {
                      "from" : "2021-03-11T05:41:36Z",
                      "meetings" : [ {
                        "archive_files" : [ {
                          "download_url" : "https://zoom.us/rec/archive/download/snGardfsw3435SKIsXAMhJ6wh",
                          "file_extension" : "M4A",
                          "file_size" : 165743,
                          "file_type" : "M4A",
                          "id" : "55hfgsd-sd8e2bd7255",
                          "recording_type" : "audio_only",
                          "status" : "completed"
                        }, {
                          "download_url" : "https://zoom.us/rec/archive/download/eXy782Ua9dghjhPvao.bUFwLAgQrFOjfOjr",
                          "file_extension" : "MP4",
                          "file_size" : 198720,
                          "file_type" : "MP4",
                          "id" : "9c5daa5b-34a1-40e8-8947-a11be5e373a7",
                          "recording_type" : "shared_screen_with_speaker_view",
                          "status" : "completed"
                        } ],
                        "duration" : 3,
                        "host_id" : "Dhjdfgdkg8w",
                        "id" : 553068284,
                        "recording_count" : 2,
                        "start_time" : "2021-03-12T01:57:27Z",
                        "timezone" : "",
                        "topic" : "Zoom Meeting",
                        "total_size" : 364463,
                        "type" : 1,
                        "uuid" : "yO3dfhh3t467UkQ=="
                      } ],
                      "next_page_token" : "",
                      "page_size" : 30,
                      "to" : "2021-03-18T05:41:36Z"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad request**<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {accountId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad request**<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {accountId}." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts" : {
      "get" : {
        "summary" : "Search company contacts",
        "description" : "A user under an organization's Zoom account has internal users listed under Company Contacts in the Zoom Client. Use this API to search users that are in the company contacts of a Zoom account. Using the `search_key` query parameter, provide either first name, last name or the email address of the user that you would like to search for. Optionally, set `query_presence_status` to `true` in order to include the presence status of a contact. <br><br>\n\n**Scopes:** `contact:read:admin`, `contact:read`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` ",
        "operationId" : "searchCompanyContacts",
        "parameters" : [ {
          "name" : "search_key",
          "in" : "query",
          "description" : "(Required) Provide the keyword - either first name, last name or email of the contact whom you have to search for.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "query_presence_status",
          "in" : "query",
          "description" : "Set `query_presence_status` to `true` in order to include the presence status of a contact in the response.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records to be returned with a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "1"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nContact returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_16"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nContact returned successfully." : {
                    "value" : {
                      "contacts" : [ {
                        "direct_numbers" : [ 111111, 222222 ],
                        "email" : "qui@djfsd.sdfjhdf",
                        "extension_number" : "010",
                        "first_name" : "John",
                        "id" : "isds324bdfsf",
                        "im_group_id" : "fhksdhfew34hjds",
                        "im_group_name" : "Engineering",
                        "last_name" : "Doe",
                        "phone_number" : "00000000",
                        "presence_status" : "Offline",
                        "sip_phone_number" : "11111111"
                      } ],
                      "next_page_token" : " ",
                      "page_size" : 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}" : {
      "get" : {
        "tags" : [ "meetings/{meeting Id}" ],
        "summary" : "Get a meeting",
        "description" : "Retrieve the details of a meeting.<br><br>\n**Scopes:** `meeting:read:admin` `meeting:read`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n",
        "operationId" : "getAMeeting",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "occurrence_id",
          "in" : "query",
          "description" : "Meeting Occurrence ID. Provide this field to view meeting details of a particular occurrence of the [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "show_previous_occurrences",
          "in" : "query",
          "description" : "Set the value of this field to `true` if you would like to view meeting details of all previous occurrences of a [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings). ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "true"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nMeeting object returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_17"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nMeeting object returned." : {
                    "value" : {
                      "agenda" : "API overview",
                      "created_at" : "2019-09-09T15:54:24Z",
                      "duration" : 60,
                      "host_id" : "ABcdofjdogh11111",
                      "id" : 1234555466,
                      "join_url" : "https://zoom.us/j/1234555466",
                      "settings" : {
                        "alternative_hosts" : "kjxckfjxgfgjdfk@dkjfhdskhf.com",
                        "approval_type" : 2,
                        "audio" : "both",
                        "auto_recording" : "local",
                        "close_registration" : false,
                        "cn_meeting" : false,
                        "enforce_login" : false,
                        "enforce_login_domains" : "mycompanydomain.com",
                        "global_dial_in_countries" : [ "US" ],
                        "global_dial_in_numbers" : [ {
                          "city" : "New York",
                          "country" : "US",
                          "country_name" : "US",
                          "number" : "+1 000011100",
                          "type" : "toll"
                        }, {
                          "city" : "San Jose",
                          "country" : "US",
                          "country_name" : "US",
                          "number" : "+1 6699006833",
                          "type" : "toll"
                        }, {
                          "city" : "San Jose",
                          "country" : "US",
                          "country_name" : "US",
                          "number" : "+1 221122112211",
                          "type" : "toll"
                        } ],
                        "host_video" : false,
                        "in_meeting" : false,
                        "join_before_host" : true,
                        "mute_upon_entry" : false,
                        "participant_video" : false,
                        "registrants_confirmation_email" : true,
                        "registrants_email_notification" : true,
                        "use_pmi" : false,
                        "waiting_room" : false,
                        "watermark" : false
                      },
                      "start_time" : "2019-08-30T22:00:00Z",
                      "start_url" : "https://zoom.us/1234555466/cdknfdffgggdfg4MDUxNjY0LCJpYXQiOjE1NjgwNDQ0NjQsImFpZCI6IjRBOWR2QkRqVHphd2J0amxoejNQZ1EiLCJjaWQiOiIifQ.Pz_msGuQwtylTtYQ",
                      "status" : "waiting",
                      "timezone" : "America/New_York",
                      "topic" : "My API Test",
                      "type" : 2,
                      "uuid" : "iAABBBcccdddd7A=="
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser not found on this account: {accountId}.<br>**Error Code:** `3000`<br>\nCannot access webinar info.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser not found on this account: {accountId}.<br>**Error Code:** `3000`<br>\nCannot access webinar info." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nUser not exist: {userId}.<br>**Error Code:** `3001`<br>\nMeeting {meetingId} is not found or has expired.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nUser not exist: {userId}.<br>**Error Code:** `3001`<br>\nMeeting {meetingId} is not found or has expired." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "meetings/{meeting Id}" ],
        "summary" : "Delete a meeting",
        "description" : "Delete a meeting.<br><br>\n**Scopes:** `meeting:write:admin` `meeting:write`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n",
        "operationId" : "deleteAMeeting",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "occurrence_id",
          "in" : "query",
          "description" : "The meeting occurrence ID.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "schedule_for_reminder",
          "in" : "query",
          "description" : "`true`: Notify host and alternative host about the meeting cancellation via email.\n`false`: Do not send any email notification.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "true"
          }
        }, {
          "name" : "cancel_meeting_reminder",
          "in" : "query",
          "description" : "`true`: Notify registrants about the meeting cancellation via email. \n\n`false`: Do not send any email notification to meeting registrants. \n\nThe default value of this field is `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code**: `204` <br>\nMeeting deleted.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code**: `204` <br>\nMeeting deleted." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code**: `400` <br>\n**Error Code**: `1010` <br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code**: `3000` <br>Cannot access meeting information.<br>Invalid occurrence_id.<br>\n**Error Code**: `3002` <br>\nSorry, you cannot d",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code**: `400` <br>\n**Error Code**: `1010` <br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code**: `3000` <br>Cannot access meeting information.<br>Invalid occurrence_id.<br>\n**Error Code**: `3002` <br>\nSorry, you cannot d" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code**: `404` <br>\nMeeting not found.\n**Error Code**: `1001` <br>\nUser does not exist: {userId}.<br>\n**Error Code**: `3001` <br>\nMeeting with this {meetingId} is not found or has expired.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code**: `404` <br>\nMeeting not found.\n**Error Code**: `1001` <br>\nUser does not exist: {userId}.<br>\n**Error Code**: `3001` <br>\nMeeting with this {meetingId} is not found or has expired." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "meetings/{meeting Id}" ],
        "summary" : "Update a meeting",
        "description" : "Update the details of a meeting.<br>This API has a rate limit of 100 requests per day. Therefore, a meeting can only be updated for a maximum of 100 times within a 24 hour window.<br>\n**Scopes:** `meeting:write:admin` `meeting:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId" : "updateAMeeting",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "occurrence_id",
          "in" : "query",
          "description" : "Meeting occurrence id. Support change of agenda, start_time, duration, settings: {host_video, participant_video, join_before_host, mute_upon_entry, waiting_room, watermark, auto_recording}",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nMeeting updated.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nMeeting updated." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300`<br>\nInvalid enforce_login_domains, separate multiple domains by semicolon.<br>\nA maximum of {rateLimitNumber} meetings can be created/updated for a single user in one day.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300`<br>\nInvalid enforce_login_domains, separate multiple domains by semicolon.<br>\nA maximum of {rateLimitNumber} meetings can be created/updated for a single user in one day.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser not found on this account: {accountId}.<br>\n**Error Code:** `3000`<br>\nCannot access meeting information.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser not found on this account: {accountId}.<br>\n**Error Code:** `3000`<br>\nCannot access meeting information.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.<br>\n**Error Code:** `3001`<br>\nA meeting with this {meetingId} is not found or has expired.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.<br>\n**Error Code:** `3001`<br>\nA meeting with this {meetingId} is not found or has expired." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/batch_polls" : {
      "post" : {
        "tags" : [ "meetings/{meeting Id}" ],
        "summary" : "Perform batch poll creation",
        "description" : "Polls allow the meeting host to survey attendees. Use this API to create batch [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) for a meeting.<br><br>\n\n**Scopes**: `meeting:write:admin` `meeting:write`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites**:<br>\n* Host user type must be **Pro** or higher plan.\n* Polling feature must be enabled in the host's account.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.",
        "operationId" : "performBatchPollCreation",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Code:** `201` <br>\nMeeting Poll Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_7"
                },
                "examples" : {
                  "**HTTP Status Code:** `201` <br>\nMeeting Poll Created" : {
                    "value" : {
                      "polls" : [ {
                        "id" : "ex eiusmod",
                        "questions" : [ {
                          "answers" : [ "est officia", "dolor amet consectetur ad", "irure consectetur enim commodo" ],
                          "name" : "in mollit cillum adipisicing ullamco",
                          "type" : "consectetur magna et"
                        }, {
                          "answers" : [ "ut ut", "non pariatur dolore eiusmod consectetur", "pariatur deserunt in dolore et", "deserunt exercitation incididunt nostrud dolore", "dolor sit in laboris eiusmod" ],
                          "name" : "non proident dolor eiusmod consectetur",
                          "type" : "et deserunt nisi "
                        }, {
                          "answers" : [ "dolor mollit", "dolore Lorem voluptate" ],
                          "name" : "minim",
                          "type" : "velit labore"
                        } ],
                        "status" : "Excepteur Lorem dolor exercitation",
                        "title" : "in dolore culpa ad qui"
                      }, {
                        "id" : "mollit do",
                        "questions" : [ {
                          "answers" : [ "culpa ", "aliquip dolore" ],
                          "name" : "exercitation consectetur officia do",
                          "type" : "id ex consequat culpa"
                        }, {
                          "answers" : [ "ullamco consequat ut id esse", "veniam eiusmod anim laborum" ],
                          "name" : "proident ad",
                          "type" : "Lorem nostrud nulla"
                        }, {
                          "answers" : [ "nostrud voluptate eu velit", "non labore dolor ad eiusmod", "vo" ],
                          "name" : "sint cillum ut",
                          "type" : "in enim"
                        }, {
                          "answers" : [ "sunt voluptate", "reprehenderit ea", "sunt aute", "elit" ],
                          "name" : "eu ullamco",
                          "type" : "anim dolor sunt"
                        }, {
                          "answers" : [ "nulla Duis" ],
                          "name" : "sit enim consequat cupidatat",
                          "type" : "cillum adipisicing"
                        } ],
                        "status" : "deserunt id occaecat nisi qui",
                        "title" : "est incididunt in dolore tempor"
                      }, {
                        "id" : "qui ",
                        "questions" : [ {
                          "answers" : [ "laboris laborum", "nostrud sit dolore veniam", "sunt commodo amet dolor ex" ],
                          "name" : "ullamco et pariatur",
                          "type" : "proident"
                        }, {
                          "answers" : [ "anim magna ut Lorem" ],
                          "name" : "adipisicing dolor culpa commodo",
                          "type" : "aliquip veniam"
                        }, {
                          "answers" : [ "sunt dolor Excepteur amet ", "qui pariatur esse id fugiat", "aliquip" ],
                          "name" : "laborum nisi",
                          "type" : "in Duis qui Excepteur aute"
                        } ],
                        "status" : "ut Ut esse",
                        "title" : "ullamco dolore"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `300` <br>\nInvalid Meeting ID.\n**Error Code:** `300` <br>\nMeeting id does not exist.\n**Error Code:** `3000` <br>\nCannot access meeting information.\n**Error Code:** `3001`<br>\nMeeting does not ",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `300` <br>\nInvalid Meeting ID.\n**Error Code:** `300` <br>\nMeeting id does not exist.\n**Error Code:** `3000` <br>\nCannot access meeting information.\n**Error Code:** `3001`<br>\nMeeting does not " : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/invitation" : {
      "get" : {
        "tags" : [ "meetings/{meeting Id}" ],
        "summary" : "Get meeting invitation",
        "description" : "Retrieve the meeting invite note that was sent for a specific meeting.<br><br>\n**Scopes:** `meeting:read:admin` `meeting:read`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId" : "getMeetingInvitation",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nMeeting invitation returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_18"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nMeeting invitation returned." : {
                    "value" : {
                      "invitation" : "Shrijana G is inviting you to a scheduled Zoom meeting.\r\n\r\nTopic: MyTestMeeting\r\nTime: Jul 31, 2019 04:00 PM Pacific Time (US and Canada)\r\n\r\nJoin Zoom Meeting\r\nhttps://zoom.us/j/000000\r\n\r\nOne tap mobile\r\n+000000"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/registrants" : {
      "get" : {
        "tags" : [ "meetings/{meeting Id}", "registrants" ],
        "summary" : "List meeting registrants",
        "description" : "A host or a user with admin permission can require [registration for a Zoom meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings). Use this API to list users that have registered for a meeting.<br><br>\n**Scopes**: `meeting:read:admin` `meeting:read`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId" : "listMeetingRegistrants",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "occurrence_id",
          "in" : "query",
          "description" : "The meeting occurrence ID.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "The registrant status:<br>`pending` - Registrant's status is pending.<br>`approved` - Registrant's status is approved.<br>`denied` - Registrant's status is denied.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "approved"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "page_number",
          "in" : "query",
          "description" : "\n**Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use \"next_page_token\" for pagination instead of this field.\n\nThe page number of the current page in the returned records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "1"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nSuccessfully listedd meeting registrants.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_19"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nSuccessfully listedd meeting registrants." : {
                    "value" : {
                      "page_count" : 1,
                      "page_number" : 1,
                      "page_size" : 1,
                      "registrants" : [ {
                        "address" : "11111 Awesome St",
                        "city" : "Paris",
                        "comments" : "Love using Zoom APIs",
                        "country" : "France",
                        "create_time" : "2012-04-14T16:55:30.231Z",
                        "custom_questions" : [ {
                          "title" : "Did you enjoy the registration process?",
                          "value" : "Yes, alot."
                        }, {
                          "title" : "Would you like to register for our next meeting?",
                          "value" : "Absolutely."
                        } ],
                        "email" : "somemeail@emailprovider.com",
                        "first_name" : "Tim",
                        "id" : "zjkfsdfjdfhg",
                        "industry" : "Tech",
                        "job_title" : "Developer",
                        "join_url" : "https://success.zoom.us/j/0000000000000",
                        "last_name" : "S.",
                        "no_of_employees" : "1-20",
                        "org" : "Growth",
                        "phone" : "00000",
                        "purchasing_time_frame" : "Within a month",
                        "role_in_purchase_process" : "Not involved",
                        "state" : "Ile-de-France",
                        "status" : "approved",
                        "zip" : "11000"
                      } ],
                      "total_records" : 1
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300`<br>\nMeeting {meetingId} is not found or has expired.<br>\nThis meeting has not set registration as required: {meetingId}.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300`<br>\nMeeting {meetingId} is not found or has expired.<br>\nThis meeting has not set registration as required: {meetingId}.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n**Error Code:** `3000`<br>\nCannot access meeting info.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n**Error Code:** `3000`<br>\nCannot access meeting info." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nMeeting host does not exist: {userId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nMeeting host does not exist: {userId}." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "meetings/{meeting Id}", "registrants" ],
        "summary" : "Add meeting registrant",
        "description" : "Register a participant for a meeting.<br><br> Note that there is a maximum limit of 4999 registrants per meeting and users will see an error if the capacity has reached.\n\n**Prerequisite:**<br>\n* Host user type must be \"Licensed\".\n\n**Scopes:** `meeting:write:admin` `meeting:write`\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId" : "addMeetingRegistrant",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "occurrence_ids",
          "in" : "query",
          "description" : "Occurrence IDs. You can find these with the meeting get API. Multiple values separated by comma.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Code:** `201`<br>\nRegistration created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_8"
                },
                "examples" : {
                  "**HTTP Status Code:** `201`<br>\nRegistration created." : {
                    "value" : {
                      "id" : 85746065,
                      "join_url" : "amet",
                      "registrant_id" : "a",
                      "start_time" : "culpa mollit",
                      "topic" : "reprehenderit ea ut ex Excepteur"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300`<br>\nMeeting {meetingId} is not found or has expired.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300`<br>\nMeeting {meetingId} is not found or has expired." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n**Error Code:** `3043`<br>\nMeeting has reached maximum attendee capacity.<br>\n**",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n**Error Code:** `3043`<br>\nMeeting has reached maximum attendee capacity.<br>\n**" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nMeeting host does not exist: {userId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nMeeting host does not exist: {userId}." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/registrants/questions" : {
      "get" : {
        "tags" : [ "meetings/{meeting Id}", "registrants", "questions" ],
        "summary" : "List registration questions ",
        "description" : "List registration questions that will be displayed to users while [registering for a meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).<br>\n\n**Scopes:** `meeting:read`, `meeting:read:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId" : "listRegistrationQuestions",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nMeeting Registrant Question object returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_20"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nMeeting Registrant Question object returned" : {
                    "value" : {
                      "custom_questions" : [ {
                        "required" : false,
                        "title" : "How long have you been working?",
                        "type" : "short"
                      } ],
                      "questions" : [ {
                        "field_name" : "address",
                        "required" : true
                      } ]
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nMeeting not found",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nMeeting not found" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "meetings/{meeting Id}", "registrants", "questions" ],
        "summary" : "Update registration questions",
        "description" : "Update registration questions that will be displayed to users while [registering for a meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).<br><br>\n**Scopes:** `meeting:write`, `meeting:write:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n \n\n",
        "operationId" : "updateRegistrationQuestions",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nMeeting Registrant Questions Updated",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nMeeting Registrant Questions Updated" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nMeeting not found.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nMeeting not found." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/registrants/status" : {
      "put" : {
        "tags" : [ "meetings/{meeting Id}", "registrants" ],
        "summary" : "Update registrant's status",
        "description" : "Update a meeting registrant's status by either approving, cancelling or denying a registrant from joining the meeting.<br><br>\n**Scopes:** `meeting:write:admin` `meeting:write`\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId" : "updateRegistrantSStatus",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "occurrence_id",
          "in" : "query",
          "description" : "The meeting occurrence ID.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nRegistrant status updated.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nRegistrant status updated." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300`<br>\nThis meeting has not set registration as required:{meetingId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300`<br>\nThis meeting has not set registration as required:{meetingId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code:** `3000`<br>\nCannot access meeting information.<br>\n**Error Code:** `3003`<br>\nYou're not the meeting host.\n\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code:** `3000`<br>\nCannot access meeting information.<br>\n**Error Code:** `3003`<br>\nYou're not the meeting host.\n\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nMeeting or registrant not found.\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.<br>\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nMeeting or registrant not found.\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.<br>\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/registrants/{registrantId}" : {
      "delete" : {
        "tags" : [ "meetings/{meeting Id}", "registrants" ],
        "summary" : "Delete a meeting registrant",
        "description" : "Delete a meeting registrant.<br><br>\n**Scopes**: `meeting:write:admin` `meeting:write`<br>\n <br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId" : "deleteAMeetingRegistrant",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "registrantId",
          "in" : "path",
          "description" : "(Required) The meeting registrant ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "occurrence_id",
          "in" : "query",
          "description" : "The meeting occurence ID.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP status code:** `204` <br>\nOK",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP status code:** `204` <br>\nOK" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP status code:** `400` <br>\nBad Request<br>\n\n**Error code:** `200`<br>\nOnly available for paid users: {0}.<br>\n\n**Error code:** `300`<br>\nThe value that you entered for the Registrant ID field is invalid. Enter a valid value and try again.<br>\n\n**Err",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP status code:** `400` <br>\nBad Request<br>\n\n**Error code:** `200`<br>\nOnly available for paid users: {0}.<br>\n\n**Error code:** `300`<br>\nThe value that you entered for the Registrant ID field is invalid. Enter a valid value and try again.<br>\n\n**Err" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/status" : {
      "put" : {
        "tags" : [ "meetings/{meeting Id}" ],
        "summary" : "Update meeting status",
        "description" : "Update the status of a meeting.<br><br>\n**Scopes:** `meeting:write:admin` `meeting:write`\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId" : "updateMeetingStatus",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nMeeting updated.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nMeeting updated." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.\n**Error Code:** `3000`<br>\nCannot access meeting info.\n**Error Code:** `3003`<br>\nYou're not the meeting host.\n**Error Code:** `3063`<br>\nCan not",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.\n**Error Code:** `3000`<br>\nCannot access meeting info.\n**Error Code:** `3003`<br>\nYou're not the meeting host.\n**Error Code:** `3063`<br>\nCan not" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nMeeting host does not exist: {userId}.\n\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nMeeting host does not exist: {userId}.\n\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/client/feedback" : {
      "get" : {
        "tags" : [ "metrics", "client", "feedback" ],
        "summary" : "List Zoom meetings client feedback",
        "description" : "Retrieve survey results from [Zoom meetings client feedback](https://support.zoom.us/hc/en-us/articles/115005855266-End-of-Meeting-Feedback-Survey#h_e30d552b-6d8e-4e0a-a588-9ca8180c4dbf). <br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.\n\n**Prerequisites:**\n* Business or higher account\n* [Feedback to Zoom](https://support.zoom.us/hc/en-us/articles/115005838023) enabled.\n\n**Scope:** `account:read:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId" : "listZoomMeetingsClientFeedback",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "(Required) End date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nClient Feedback details returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_21"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nClient Feedback details returned." : {
                    "value" : {
                      "client_feedbacks" : [ {
                        "feedback_id" : "53532100000",
                        "feedback_name" : "Poor audio quality.",
                        "participants_count" : 1
                      }, {
                        "feedback_id" : "53532100000",
                        "feedback_name" : "They could not hear us.",
                        "participants_count" : 2
                      } ],
                      "from" : { },
                      "to" : { },
                      "total_records" : 2
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/client/feedback/{feedbackId}" : {
      "get" : {
        "tags" : [ "metrics", "client", "feedback" ],
        "summary" : "Get zoom meetings client feedback",
        "description" : "Retrieve detailed information on a [Zoom meetings client feedback](https://support.zoom.us/hc/en-us/articles/115005855266-End-of-Meeting-Feedback-Survey#h_e30d552b-6d8e-4e0a-a588-9ca8180c4dbf). <br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.\n\n**Prerequisites:**\n* Business or higher account\n* [Feedback to Zoom](https://support.zoom.us/hc/en-us/articles/115005838023) enabled.\n\n**Scope:** `dashboard_home:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`\n\n`",
        "operationId" : "getZoomMeetingsClientFeedback",
        "parameters" : [ {
          "name" : "feedbackId",
          "in" : "path",
          "description" : "(Required) Feedback Detail Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nClient Feedback details returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_22"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nClient Feedback details returned" : {
                    "value" : {
                      "client_feedback_details" : [ {
                        "email" : "hdfgjsfhdfbs@someemail.sdfkhjdf",
                        "meeting_id" : "3789500000000",
                        "participant_name" : "Meghan Styles",
                        "time" : "2017-10-21T11:35:33.480Z"
                      } ],
                      "from" : { },
                      "next_page_token" : "w7587w4eiyfsudgf",
                      "page_size" : 30,
                      "to" : { }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/client/satisfaction" : {
      "get" : {
        "tags" : [ "metrics", "client" ],
        "summary" : "List client meeting satisfaction",
        "description" : "If the [End of Meeting Feedback Survey](https://support.zoom.us/hc/en-us/articles/115005855266) option is enabled, attendees will be prompted with a survey window where they can tap either the **Thumbs Up** or **Thumbs Down** button that indicates their Zoom meeting experience. With this API, you can get information on the attendees' meeting satisfaction. Specify a monthly date range for the query using the from and to query parameters. The month should fall within the last six months.\n\nTo get information on the survey results with negative experiences (indicated by **Thumbs Down**), use the [Get Zoom Meetings Client Feedback API](https://marketplace.zoom.us/docs/api-reference/zoom-api/dashboards/dashboardclientfeedbackdetail).<br>\n**Scopes:** `dashboard:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId" : "listClientMeetingSatisfaction",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "The start date for the query in “yyyy-mm-dd” format. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end date for the query in “yyyy-mm-dd” format. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nClient satisfaction data returned. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_23"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nClient satisfaction data returned. " : {
                    "value" : {
                      "client_satisfaction" : [ {
                        "date" : { },
                        "good_count" : 5,
                        "none_count" : 0,
                        "not_good_count" : 1,
                        "satisfaction_percent" : 100
                      }, {
                        "date" : { },
                        "good_count" : 0,
                        "none_count" : 0,
                        "not_good_count" : 0,
                        "satisfaction_percent" : 100
                      } ],
                      "from" : { },
                      "to" : { },
                      "total_records" : 30
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/meetings" : {
      "get" : {
        "tags" : [ "metrics", "meetings1" ],
        "summary" : "List meetings",
        "description" : "List total live or past meetings that occurred during a specified period of time. This overview will show if features such as audio, video, screen sharing, and recording were being used in the meeting. You can also see the license types of each user on your account.<br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.<br>\n**Scopes:** `dashboard_meetings:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Resource-intensive`<br><br>\n**Prerequisites:** <br>\n* Business or a higher plan.<br><br>",
        "operationId" : "listMeetings1",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "Specify a value to get the response for the corresponding meeting type. The value of this field can be one of the following:<br> <br>`past` - Meeting that already occurred in the specified date range.<br>`pastOne` - Past meetings that were attended by only one user. <br>`live` - Live meetings.<br><br>\n\nIf you do not provide this field, the default value will be `live` and thus, the API will only query responses for live meetings.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "live"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "(Required) End date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "include_fields",
          "in" : "query",
          "description" : "Set the value of this field to \"tracking_fields\" if you would like to include tracking fields of each meeting in the response.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "tracking_fields"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nMeetings returned.<br>\nOnly available for paid accounts that have dashboard feature enabled.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_24"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nMeetings returned.<br>\nOnly available for paid accounts that have dashboard feature enabled." : {
                    "value" : {
                      "from" : "string [date]",
                      "meetings" : [ {
                        "duration" : "string",
                        "email" : "string",
                        "end_time" : "string [date-time]",
                        "has_3rd_party_audio" : "boolean",
                        "has_pstn" : "boolean",
                        "has_recording" : "boolean",
                        "has_screen_share" : "boolean",
                        "has_sip" : "boolean",
                        "has_video" : "boolean",
                        "has_voip" : "boolean",
                        "host" : "string",
                        "id" : "integer",
                        "participants" : "integer",
                        "start_time" : "string [date-time]",
                        "topic" : "string",
                        "user_type" : "string",
                        "uuid" : "string [uuid]"
                      } ],
                      "next_page_token" : "string",
                      "page_count" : "integer",
                      "page_size" : "integer",
                      "to" : "string [date]",
                      "total_records" : "integer"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300`<br>\nThe next page token is invalid or expired.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300`<br>\nThe next page token is invalid or expired." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/meetings/{meetingId}" : {
      "get" : {
        "tags" : [ "metrics", "meetings1", "{meeting Id}1" ],
        "summary" : "Get meeting details",
        "description" : "Get details on live or past meetings. This overview will show if features such as audio, video, screen sharing, and recording were being used in the meeting. You can also see the license types of each user on your account.<br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.  <br>\n**Scopes:** `dashboard_meetings:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:** <br>\n* Business or a higher plan.",
        "operationId" : "getMeetingDetails",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past one user meetings.<br>`live` - Live meetings.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "live"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nMeeting returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_25"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nMeeting returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature." : {
                    "value" : {
                      "duration" : "30:00",
                      "email" : "so@djkfsfj.gh",
                      "end_time" : "2007-06-16T16:59:42.078Z",
                      "has_3rd_party_audio" : false,
                      "has_pstn" : false,
                      "has_recording" : false,
                      "has_screen_share" : false,
                      "has_sip" : false,
                      "has_video" : false,
                      "has_voip" : false,
                      "host" : "cool host",
                      "id" : 33281536,
                      "in_room_participants" : 3,
                      "participants" : 4874645,
                      "start_time" : "2007-06-16T16:55:42.078Z",
                      "topic" : "My meeting",
                      "user_type" : "Pro|Webinar100",
                      "uuid" : "carreter@-2c9b447f3"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or the meeting has not ended yet.<br>\nThis meeting's details are not available.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or the meeting has not ended yet.<br>\nThis meeting's details are not available.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/meetings/{meetingId}/participants" : {
      "get" : {
        "tags" : [ "metrics", "meetings1", "{meeting Id}1", "participants" ],
        "summary" : "List meeting participants",
        "description" : "Get a list of participants from live or past meetings.<br><br>\nIf you do not provide the `type` query parameter, the default value will be set to `live` and thus, you will only see metrics for participants in a live meeting, if any meeting is currently being conducted. To view metrics on past meeting participants, provide the appropriate value for `type`. <br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.\n\n**Scopes:** `dashboard_meetings:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:** Business or a higher plan.",
        "operationId" : "listMeetingParticipants",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past one user meetings.<br>`live` - Live meetings.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "live"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "include_fields",
          "in" : "query",
          "description" : "Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingregistrants). This is not supported for `live` meeting types.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "registrant_id"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nMeeting participants returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_26"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nMeeting participants returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature." : {
                    "value" : {
                      "next_page_token" : "",
                      "page_count" : 1,
                      "page_size" : 30,
                      "participants" : [ {
                        "camera" : "FaceTime HD Camera",
                        "connection_type" : "P2P",
                        "data_center" : "SC",
                        "device" : "WIN",
                        "domain" : "Dojo-workspace",
                        "harddisk_id" : "sed proident in",
                        "id" : "d52f19c548b88490b5d16fcbd38",
                        "ip_address" : "127.0.0.1",
                        "join_time" : "2019-09-07T13:15:02.837Z",
                        "leave_reason" : "Dojo left the meeting.<br>Reason: Host ended the meeting.",
                        "leave_time" : "2019-09-07T13:15:09.837Z",
                        "location" : "New York",
                        "mac_addr" : " 00:0a:95:9d:68:16",
                        "microphone" : "Plantronics BT600",
                        "network_type" : "Wired",
                        "pc_name" : "dojo's pc",
                        "recording" : false,
                        "share_application" : false,
                        "share_desktop" : true,
                        "share_whiteboard" : true,
                        "speaker" : "Plantronics BT600",
                        "status" : "in_waiting_room",
                        "user_id" : "32dsfsd4g5gd",
                        "user_name" : "dojo",
                        "version" : "4.4.55383.0716"
                      }, {
                        "connection_type" : "UDP",
                        "data_center" : "SC",
                        "device" : "Android",
                        "domain" : "Rea-workspace",
                        "harddisk_id" : "",
                        "id" : "z8aaaaaaCfp8uQ",
                        "ip_address" : "120.000.000",
                        "join_time" : "2019-08-02T15:31:48Z",
                        "leave_reason" : "Rea left the meeting.<br>Reason: Host closed the meeting.",
                        "leave_time" : "2019-08-02T16:04:12Z",
                        "location" : "San Jose (US)",
                        "mac_addr" : "",
                        "network_type" : "Wifi",
                        "pc_name" : "Rea's PC",
                        "recording" : false,
                        "share_application" : false,
                        "share_desktop" : false,
                        "share_whiteboard" : false,
                        "user_id" : "1670000000",
                        "user_name" : "Rea",
                        "version" : "4.4.55383.0716"
                      } ],
                      "total_records" : 2
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300`<br>\nCan not access webinar info.<br>\n{meetingId} or the next page token is either invalid or expired.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300`<br>\nCan not access webinar info.<br>\n{meetingId} or the next page token is either invalid or expired." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or has not ended.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or has not ended." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/meetings/{meetingId}/participants/qos" : {
      "get" : {
        "tags" : [ "metrics", "meetings1", "{meeting Id}1", "participants" ],
        "summary" : "List meeting participants QoS",
        "description" : "Get a list of meeting participants from live or past meetings along with the quality of service they recieve during the meeting such as connection quality for sending/receiving video, audio, and shared content.<br>If you do not provide the `type` query parameter, the default value will be set to `live` and thus, you will only see metrics for participants in a live meeting, if any meeting is currently being conducted. To view metrics on past meeting participants, provide the appropriate value for `type`.<br> <br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.<br><br>\n**Scopes:** `dashboard_meetings:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:** <br>\n* Business or a higher plan.",
        "operationId" : "listMeetingParticipantsQoS",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The meeting types: <br>`past` - Past meetings.<br>`live` - Live Meetings.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "live"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of items returned per page.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "1"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nMeeting participants returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_27"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nMeeting participants returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature." : {
                    "value" : {
                      "next_page_token" : "string",
                      "page_count" : "integer [int64]",
                      "page_size" : "integer",
                      "participants" : [ {
                        "device" : "string",
                        "domain" : "string",
                        "harddisk_id" : "string",
                        "ip_address" : "string",
                        "join_time" : "string [date-time]",
                        "leave_time" : "string [date-time]",
                        "location" : "string",
                        "mac_addr" : "string",
                        "pc_name" : "string",
                        "user_id" : "string [uuid]",
                        "user_name" : "string",
                        "user_qos" : [ {
                          "as_input" : {
                            "avg_loss" : "string",
                            "bitrate" : "string",
                            "frame_rate" : "string",
                            "jitter" : "string",
                            "latency" : "string",
                            "max_loss" : "string",
                            "resolution" : "string"
                          },
                          "as_output" : {
                            "avg_loss" : "string",
                            "bitrate" : "string",
                            "frame_rate" : "string",
                            "jitter" : "string",
                            "latency" : "string",
                            "max_loss" : "string",
                            "resolution" : "string"
                          },
                          "audio_input" : {
                            "avg_loss" : "string",
                            "bitrate" : "string",
                            "jitter" : "string",
                            "latency" : "string",
                            "max_loss" : "string"
                          },
                          "audio_output" : {
                            "avg_loss" : "string",
                            "bitrate" : "string",
                            "jitter" : "string",
                            "latency" : "string",
                            "max_loss" : "string"
                          },
                          "cpu_usage" : {
                            "system_max_cpu_usage" : "string",
                            "zoom_avg_cpu_usage" : "string",
                            "zoom_max_cpu_usage" : "string",
                            "zoom_min_cpu_usage" : "string"
                          },
                          "date_time" : "string [date-time]",
                          "video_input" : {
                            "avg_loss" : "string",
                            "bitrate" : "string",
                            "frame_rate" : "string",
                            "jitter" : "string",
                            "latency" : "string",
                            "max_loss" : "string",
                            "resolution" : "string"
                          },
                          "video_output" : {
                            "avg_loss" : "string",
                            "bitrate" : "string",
                            "frame_rate" : "string",
                            "jitter" : "string",
                            "latency" : "string",
                            "max_loss" : "string",
                            "resolution" : "string"
                          }
                        } ],
                        "version" : "string"
                      } ],
                      "total_records" : "integer [int64]"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}.<br>\nThe next page token is either invalid or expired.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}.<br>\nThe next page token is either invalid or expired." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis meeting's detail info is not available.<br>\nThe Meeting ID is not valid or the meeting has not ended yet.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis meeting's detail info is not available.<br>\nThe Meeting ID is not valid or the meeting has not ended yet.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/meetings/{meetingId}/participants/satisfaction" : {
      "get" : {
        "tags" : [ "metrics", "meetings1", "{meeting Id}1", "participants" ],
        "summary" : "Get post meeting feedback",
        "description" : "When a meeting ends, each attendee will be prompted to share their meeting experience by clicking either thumbs up or thumbs down. Use this API to retrieve the feedback submitted for a specific meeting. Note that this API only works for meetings scheduled after December 20, 2020.\n\n**Prerequisites:**\n* [Feedback to Zoom](https://support.zoom.us/hc/en-us/articles/115005838023) setting must be enabled by the participant prior to the meeting.\n* The user making the API request must be enrolled in a Business or a higher plan.\n\n<br> **Scope:** `dashboard_meetings:read:admiin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>",
        "operationId" : "getPostMeetingFeedback",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Specify a value to get the response for the corresponding meeting type. The value of this field can be one of the following:<br> <br>`past` - Meeting that already occurred in the specified date range.<br>`pastOne` - Past meetings that were attended by only one user. <br>`live` - Live meetings.<br><br>\n\nIf you do not provide this field, the default value will be `live` and thus, the API will only query responses for live meetings.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "live"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\n\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_28"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\n\n" : {
                    "value" : {
                      "next_page_token" : "",
                      "page_size" : 1,
                      "participants" : [ {
                        "date_time" : "2021-02-21T18:48:06.423Z",
                        "email" : "RB6iBb@aWlMmuZFPVjptyOCzNgpi.mx",
                        "quality" : "GOOD",
                        "user_id" : "aegr46312rum"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `200`<br>\nOnly available for paid accounts that have dashboard feature enabled.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `200`<br>\nOnly available for paid accounts that have dashboard feature enabled.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or not end.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or not end." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/meetings/{meetingId}/participants/sharing" : {
      "get" : {
        "tags" : [ "metrics", "meetings1", "{meeting Id}1", "participants" ],
        "summary" : "Get sharing/recording details",
        "description" : "Retrieve the sharing and recording details of participants from live or past meetings.<br>\n**Scopes:** `dashboard_meetings:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:** <br>\n* Business or a higher plan.",
        "operationId" : "getSharingRecordingDetails",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The meeting types: <br>`past` - Past meetings.<br>`live` - Live Meetings.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "live"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nMeeting participants returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_29"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nMeeting participants returned." : {
                    "value" : {
                      "next_page_token" : "string",
                      "page_count" : "integer",
                      "page_size" : "integer",
                      "participants" : [ {
                        "details" : [ {
                          "content" : "string",
                          "end_time" : "string",
                          "start_time" : "string"
                        } ],
                        "id" : "string",
                        "user_id" : "string",
                        "user_name" : "string"
                      } ],
                      "total_records" : "integer"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis meeting's detail info is not available or ID is not valid.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis meeting's detail info is not available or ID is not valid." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/meetings/{meetingId}/participants/{participantId}/qos" : {
      "get" : {
        "tags" : [ "metrics", "meetings1", "{meeting Id}1", "participants" ],
        "summary" : "Get meeting participant QoS",
        "description" : "Retrieve the quality of service for participants from live or past meetings. This data indicates the connection quality for sending/receiving video, audio, and shared content. If nothing is being sent or received at that time, no information will be shown in the fields. <br><br>\n**Scopes:** `dashboard_meetings:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId" : "getMeetingParticipantQoS",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "participantId",
          "in" : "path",
          "description" : "(Required) Participant ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The meeting types: <br>`past` - Past meetings.<br>`live` - Live Meetings.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "live"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nMeeting participant QOS returned.<br>\nOnly available for paid account that have enabled the dashboard feature.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_30"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nMeeting participant QOS returned.<br>\nOnly available for paid account that have enabled the dashboard feature." : {
                    "value" : {
                      "device" : "string",
                      "domain" : "string",
                      "harddisk_id" : "string",
                      "ip_address" : "string",
                      "join_time" : "string [date-time]",
                      "leave_time" : "string [date-time]",
                      "location" : "string",
                      "mac_addr" : "string",
                      "pc_name" : "string",
                      "user_id" : "string [uuid]",
                      "user_name" : "string",
                      "user_qos" : [ {
                        "as_input" : {
                          "avg_loss" : "string",
                          "bitrate" : "string",
                          "frame_rate" : "string",
                          "jitter" : "string",
                          "latency" : "string",
                          "max_loss" : "string",
                          "resolution" : "string"
                        },
                        "as_output" : {
                          "avg_loss" : "string",
                          "bitrate" : "string",
                          "frame_rate" : "string",
                          "jitter" : "string",
                          "latency" : "string",
                          "max_loss" : "string",
                          "resolution" : "string"
                        },
                        "audio_input" : {
                          "avg_loss" : "string",
                          "bitrate" : "string",
                          "jitter" : "string",
                          "latency" : "string",
                          "max_loss" : "string"
                        },
                        "audio_output" : {
                          "avg_loss" : "string",
                          "bitrate" : "string",
                          "jitter" : "string",
                          "latency" : "string",
                          "max_loss" : "string"
                        },
                        "cpu_usage" : {
                          "system_max_cpu_usage" : "string",
                          "zoom_avg_cpu_usage" : "string",
                          "zoom_max_cpu_usage" : "string",
                          "zoom_min_cpu_usage" : "string"
                        },
                        "date_time" : "string [date-time]",
                        "video_input" : {
                          "avg_loss" : "string",
                          "bitrate" : "string",
                          "frame_rate" : "string",
                          "jitter" : "string",
                          "latency" : "string",
                          "max_loss" : "string",
                          "resolution" : "string"
                        },
                        "video_output" : {
                          "avg_loss" : "string",
                          "bitrate" : "string",
                          "frame_rate" : "string",
                          "jitter" : "string",
                          "latency" : "string",
                          "max_loss" : "string",
                          "resolution" : "string"
                        }
                      } ],
                      "version" : "string"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis meeting's detail info is not available.<br>\nThis meeting has not ended yet or the Meeting ID is invalid.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis meeting's detail info is not available.<br>\nThis meeting has not ended yet or the Meeting ID is invalid." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/webinars" : {
      "get" : {
        "tags" : [ "metrics", "webinars1" ],
        "summary" : "List webinars",
        "description" : "List all the live or past webinars from a specified period of time. <br><br>\n**Scopes:** `dashboard_webinars:read:admin`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Resource-intensive`<br>\n**Prerequisites:**<br>\n* Business, Education or API Plan with Webinar add-on.\n\n\n",
        "operationId" : "listWebinars1",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "The webinar type.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "live"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "(Required) End date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nMeetings returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_31"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nMeetings returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature." : {
                    "value" : {
                      "from" : "string [date]",
                      "next_page_token" : "string",
                      "page_count" : "integer",
                      "page_size" : "integer",
                      "to" : "string [date]",
                      "total_records" : "integer",
                      "webinars" : [ {
                        "duration" : "string",
                        "email" : "string",
                        "end_time" : "string [date-time]",
                        "has_3rd_party_audio" : "boolean",
                        "has_pstn" : "boolean",
                        "has_recording" : "boolean",
                        "has_screen_share" : "boolean",
                        "has_sip" : "boolean",
                        "has_video" : "boolean",
                        "has_voip" : "boolean",
                        "host" : "string",
                        "id" : "integer",
                        "participants" : "integer",
                        "start_time" : "string [date-time]",
                        "topic" : "string",
                        "user_type" : "string",
                        "uuid" : "string [uuid]"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `200`<br>\nThe next page token is invalid or has expired.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `200`<br>\nThe next page token is invalid or has expired." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/webinars/{webinarId}" : {
      "get" : {
        "tags" : [ "metrics", "webinars1", "{webinar Id}" ],
        "summary" : "Get webinar details",
        "description" : "Retrieve details from live or past webinars.<br><br>\n**Scopes:** `dashboard_webinars:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Business, Education or API Plan with Webinar add-on.\n\n",
        "operationId" : "getWebinarDetails",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The webinar type.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "live"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nWebinar details returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
            "content" : {
              "application/octet-stream" : {
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nWebinar details returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature." : {
                    "value" : "\"{\\n    \\\"uuid\\\": \\\"CJaaaaaaaEV6A==\\\",\\n    \\\"id\\\": 00001,\\n    \\\"topic\\\": \\\"MyTestWebinar\\\",\\n    \\\"host\\\": \\\"Henry Chao\\\",\\n    \\\"email\\\": \\\"hc@sdfdfdsfdfsdf.com\\\",\\n    \\\"user_type\\\": \\\"Pro|Webinar1000\\\",\\n    \\\"start_time\\\": \\\"2019-07-16T17:14:39Z\\\",\\n    \\\"end_time\\\": \\\"2019-07-16T17:26:20Z\\\",\\n    \\\"duration\\\": 12,\\n    \\\"participants\\\": 1,\\n    \\\"has_pstn\\\": false,\\n    \\\"has_voip\\\": false,\\n    \\\"has_3rd_party_audio\\\": false,\\n    \\\"has_video\\\": false,\\n    \\\"has_screen_share\\\": false,\\n    \\\"has_recording\\\": false,\\n    \\\"has_sip\\\": false\\n}\""
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `200`<br>\nCan not access webinar info, {webinarId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `200`<br>\nCan not access webinar info, {webinarId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThe webinar has not ended yet or the Webinar ID is not valid.<br>\nThis webinar's detail is not available.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThe webinar has not ended yet or the Webinar ID is not valid.<br>\nThis webinar's detail is not available." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/webinars/{webinarId}/participants" : {
      "get" : {
        "tags" : [ "metrics", "webinars1", "{webinar Id}", "participants1" ],
        "summary" : "Get webinar participants",
        "description" : "Retrieve details on participants from live or past webinars.<br><br>\n**Scopes:** `dashboard_webinars:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Business, Education or API Plan with Webinar add-on.\n\n",
        "operationId" : "getWebinarParticipants",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The webinar type.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "live"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "include_fields",
          "in" : "query",
          "description" : "Provide 'registrant_id' as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [webinar registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarregistrants).<br>\n\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "registrant_id"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nWebinar participants returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_32"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nWebinar participants returned." : {
                    "value" : {
                      "next_page_token" : "string",
                      "page_count" : "integer",
                      "page_size" : "integer",
                      "participants" : [ {
                        "connection_type" : "string",
                        "data_center" : "string",
                        "device" : "string",
                        "domain" : "string",
                        "harddisk_id" : "string",
                        "id" : "string [uuid]",
                        "ip_address" : "string",
                        "join_time" : "string [date-time]",
                        "leave_reason" : "string",
                        "leave_time" : "string [date-time]",
                        "location" : "string",
                        "mac_addr" : "string",
                        "microphone" : "string",
                        "network_type" : "string",
                        "pc_name" : "string",
                        "recording" : "boolean",
                        "share_application" : "boolean",
                        "share_desktop" : "boolean",
                        "share_whiteboard" : "boolean",
                        "speaker" : "string",
                        "user_id" : "string",
                        "user_name" : "string",
                        "version" : "string"
                      } ],
                      "total_records" : "integer"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail info is not available or ID is not valid.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail info is not available or ID is not valid." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/webinars/{webinarId}/participants/qos" : {
      "get" : {
        "tags" : [ "metrics", "webinars1", "{webinar Id}", "participants1" ],
        "summary" : "List webinar participant QoS",
        "description" : "Retrieve a list of participants from live or past webinars and the quality of service they received.<br>This data indicates the connection quality for sending/receiving video, audio, and shared content. If nothing is being sent or received at that time, no information will be shown in the fields.<br>\n**Scopes:** `dashboard_webinars:read:admin`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**\n* Business, Education or API Plan with Webinar add-on.\n\n",
        "operationId" : "listWebinarParticipantQoS",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The webinar type.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "live"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of items returned per page.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "1"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nWebinar participants returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_27"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nWebinar participants returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature." : {
                    "value" : {
                      "next_page_token" : "string",
                      "page_count" : "integer [int64]",
                      "page_size" : "integer",
                      "participants" : [ {
                        "device" : "string",
                        "domain" : "string",
                        "harddisk_id" : "string",
                        "ip_address" : "string",
                        "join_time" : "string [date-time]",
                        "leave_time" : "string [date-time]",
                        "location" : "string",
                        "mac_addr" : "string",
                        "pc_name" : "string",
                        "user_id" : "string [uuid]",
                        "user_name" : "string",
                        "user_qos" : [ {
                          "as_input" : {
                            "avg_loss" : "string",
                            "bitrate" : "string",
                            "frame_rate" : "string",
                            "jitter" : "string",
                            "latency" : "string",
                            "max_loss" : "string",
                            "resolution" : "string"
                          },
                          "as_output" : {
                            "avg_loss" : "string",
                            "bitrate" : "string",
                            "frame_rate" : "string",
                            "jitter" : "string",
                            "latency" : "string",
                            "max_loss" : "string",
                            "resolution" : "string"
                          },
                          "audio_input" : {
                            "avg_loss" : "string",
                            "bitrate" : "string",
                            "jitter" : "string",
                            "latency" : "string",
                            "max_loss" : "string"
                          },
                          "audio_output" : {
                            "avg_loss" : "string",
                            "bitrate" : "string",
                            "jitter" : "string",
                            "latency" : "string",
                            "max_loss" : "string"
                          },
                          "cpu_usage" : {
                            "system_max_cpu_usage" : "string",
                            "zoom_avg_cpu_usage" : "string",
                            "zoom_max_cpu_usage" : "string",
                            "zoom_min_cpu_usage" : "string"
                          },
                          "date_time" : "string [date-time]",
                          "video_input" : {
                            "avg_loss" : "string",
                            "bitrate" : "string",
                            "frame_rate" : "string",
                            "jitter" : "string",
                            "latency" : "string",
                            "max_loss" : "string",
                            "resolution" : "string"
                          },
                          "video_output" : {
                            "avg_loss" : "string",
                            "bitrate" : "string",
                            "frame_rate" : "string",
                            "jitter" : "string",
                            "latency" : "string",
                            "max_loss" : "string",
                            "resolution" : "string"
                          }
                        } ],
                        "version" : "string"
                      } ],
                      "total_records" : "integer [int64]"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail is not available or the Webinar ID is not valid.<br>\nThis webinar has not ended yet.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail is not available or the Webinar ID is not valid.<br>\nThis webinar has not ended yet." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/webinars/{webinarId}/participants/satisfaction" : {
      "get" : {
        "tags" : [ "metrics", "webinars1", "{webinar Id}", "participants1" ],
        "summary" : "Get post webinar feedback",
        "description" : "When a Webinar ends, each attendee will be prompted to share their Webinar experience by clicking either thumbs up or thumbs down. Use this API to retrieve the feedback submitted for a specific webinar. Note that this API only works for meetings scheduled after December 20, 2020.\n\n**Prerequisites:**\n* [Feedback to Zoom](https://support.zoom.us/hc/en-us/articles/115005838023) setting must be enabled by the participant prior to the meeting.\n* The user making the API request must be enrolled in a Business or a higher plan.\n\n\n<br> **Scope:** `dashboard_webinars:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>",
        "operationId" : "getPostWebinarFeedback",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Specify a value to get the response for the corresponding meeting type. The value of this field can be one of the following:<br> <br>`past` - Meeting that already occurred in the specified date range.<br>`pastOne` - Past meetings that were attended by only one user. <br>`live` - Live meetings.<br><br>\n\nIf you do not provide this field, the default value will be `live` and thus, the API will only query responses for live meetings.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "live"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\n\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_28"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\n\n" : {
                    "value" : {
                      "next_page_token" : "",
                      "page_size" : 1,
                      "participants" : [ {
                        "date_time" : "2021-02-21T18:48:06.423Z",
                        "email" : "RB6iBb@aWlMmuZFPVjptyOCzNgpi.mx",
                        "quality" : "GOOD",
                        "user_id" : "aegr46312rum"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `200`<br>\nOnly available for paid accounts that have dashboard feature enabled.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `200`<br>\nOnly available for paid accounts that have dashboard feature enabled.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/webinars/{webinarId}/participants/sharing" : {
      "get" : {
        "tags" : [ "metrics", "webinars1", "{webinar Id}", "participants1" ],
        "summary" : "Get sharing/recording details",
        "description" : "Retrieve the sharing and recording details of participants from live or past webinars. <br><br>\n**Scopes:** `dashboard_webinars:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` <br>\n**Prerequisites:**<br>\n* Business, Education or API Plan with Webinar add-on.\n\n",
        "operationId" : "getSharingRecordingDetails1",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The webinar type.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "live"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nWebinar participants returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_29"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nWebinar participants returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature." : {
                    "value" : {
                      "next_page_token" : "string",
                      "page_count" : "integer",
                      "page_size" : "integer",
                      "participants" : [ {
                        "details" : [ {
                          "content" : "string",
                          "end_time" : "string",
                          "start_time" : "string"
                        } ],
                        "id" : "string",
                        "user_id" : "string",
                        "user_name" : "string"
                      } ],
                      "total_records" : "integer"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail info is not available or ID is not valid.<br>\nThis webinar has not ended yet.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail info is not available or ID is not valid.<br>\nThis webinar has not ended yet." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/webinars/{webinarId}/participants/{participantId}/qos" : {
      "get" : {
        "tags" : [ "metrics", "webinars1", "{webinar Id}", "participants1" ],
        "summary" : "Get webinar participant QoS",
        "description" : "Retrieve details on the quality of service that participants from live or past webinars recieved.<br>This data indicates the connection quality for sending/receiving video, audio, and shared content. If nothing is being sent or received at that time, no information will be shown in the fields.<br>\n**Scopes:** `dashboard_webinars:read:admin`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` <br>\n**Prerequisites:** <br>\n* Business, Education or API Plan with Zoom Rooms set up.\n",
        "operationId" : "getWebinarParticipantQoS",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "participantId",
          "in" : "path",
          "description" : "(Required) Participant ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The webinar type.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "live"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nWebinar participant QOS returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_30"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nWebinar participant QOS returned." : {
                    "value" : {
                      "device" : "string",
                      "domain" : "string",
                      "harddisk_id" : "string",
                      "ip_address" : "string",
                      "join_time" : "string [date-time]",
                      "leave_time" : "string [date-time]",
                      "location" : "string",
                      "mac_addr" : "string",
                      "pc_name" : "string",
                      "user_id" : "string [uuid]",
                      "user_name" : "string",
                      "user_qos" : [ {
                        "as_input" : {
                          "avg_loss" : "string",
                          "bitrate" : "string",
                          "frame_rate" : "string",
                          "jitter" : "string",
                          "latency" : "string",
                          "max_loss" : "string",
                          "resolution" : "string"
                        },
                        "as_output" : {
                          "avg_loss" : "string",
                          "bitrate" : "string",
                          "frame_rate" : "string",
                          "jitter" : "string",
                          "latency" : "string",
                          "max_loss" : "string",
                          "resolution" : "string"
                        },
                        "audio_input" : {
                          "avg_loss" : "string",
                          "bitrate" : "string",
                          "jitter" : "string",
                          "latency" : "string",
                          "max_loss" : "string"
                        },
                        "audio_output" : {
                          "avg_loss" : "string",
                          "bitrate" : "string",
                          "jitter" : "string",
                          "latency" : "string",
                          "max_loss" : "string"
                        },
                        "cpu_usage" : {
                          "system_max_cpu_usage" : "string",
                          "zoom_avg_cpu_usage" : "string",
                          "zoom_max_cpu_usage" : "string",
                          "zoom_min_cpu_usage" : "string"
                        },
                        "date_time" : "string [date-time]",
                        "video_input" : {
                          "avg_loss" : "string",
                          "bitrate" : "string",
                          "frame_rate" : "string",
                          "jitter" : "string",
                          "latency" : "string",
                          "max_loss" : "string",
                          "resolution" : "string"
                        },
                        "video_output" : {
                          "avg_loss" : "string",
                          "bitrate" : "string",
                          "frame_rate" : "string",
                          "jitter" : "string",
                          "latency" : "string",
                          "max_loss" : "string",
                          "resolution" : "string"
                        }
                      } ],
                      "version" : "string"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail info is not available or ID is not valid.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail info is not available or ID is not valid." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/past_meetings/{meetingId}/files" : {
      "get" : {
        "tags" : [ "past meetings", "{meeting Id}" ],
        "summary" : "List past meeting's files",
        "description" : "**Note: This API has been deprecated and is no longer supported due to GCM encryption updates for security purposes.** To learn about saving the in-meeting chat files via Zoom Client, refer to the [Saving in-meeting chat](https://support.zoom.us/hc/en-us/articles/115004792763-Saving-in-meeting-chat) guide.\n\nList files sent via in-meeting chat during a meeting. The in-meeting files are deleted after 24 hours of the meeting completion time. \n<br><br>\n**Scope:** `meeting:read`, `meeting:read:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` ",
        "operationId" : "listPastMeetingSFiles",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200` **OK**<br>\nFiles retrieved successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_33"
                },
                "examples" : {
                  "**HTTP Status Code:** `200` **OK**<br>\nFiles retrieved successfully." : {
                    "value" : {
                      "in_meeting_files" : [ {
                        "download_url" : "somefile.txt/randomurl",
                        "file_name" : "somefile.txt",
                        "file_size" : 300
                      } ],
                      "total_records" : 1
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or not end.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or not end." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/past_meetings/{meetingId}/instances" : {
      "get" : {
        "tags" : [ "past meetings", "{meeting Id}" ],
        "summary" : "List ended meeting instances",
        "description" : "Get a list of ended meeting instances<br><br>\n**Scopes:** `meeting:read:admin` `meeting:read`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` ",
        "operationId" : "listEndedMeetingInstances",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID in **long** format. The data type of this field is \"long\"(represented as int64 in JSON).\n\nWhile storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nList of ended meeting instances returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_34"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nList of ended meeting instances returned." : {
                    "value" : {
                      "meetings" : [ {
                        "start_time" : "2016-01-08T01:01:45.960Z",
                        "uuid" : "in"
                      }, {
                        "start_time" : "2011-03-08T15:42:56.718Z",
                        "uuid" : "minim aliquip dolore commodo in"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nMeeting not found.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nMeeting not found." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/past_meetings/{meetingId}/polls" : {
      "get" : {
        "tags" : [ "past meetings", "{meeting Id}" ],
        "summary" : "List past meeting's poll results",
        "description" : "[Polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) allow the meeting host to survey attendees. Use this API to list poll results of a meeting.<br><br>\n\n**Scopes**: `meeting:read:admin`, `meeting:read`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` <br>\n**Prerequisites**:<br>\n* Host user type must be **Pro**.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.",
        "operationId" : "listPastMeetingSPollResults",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200` **OK**<br>\nPolls returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_35"
                },
                "examples" : {
                  "**HTTP Status Code:** `200` **OK**<br>\nPolls returned successfully." : {
                    "value" : {
                      "id" : 123456,
                      "questions" : [ {
                        "email" : "myemail@jksdlfkjdf.djfk",
                        "name" : "Sam S",
                        "question_details" : [ {
                          "answer" : "I am wonderful.",
                          "question" : "How are you?"
                        } ]
                      } ],
                      "start_time" : "2019-02-01T12:34:12.660Z",
                      "title" : "Learn something new",
                      "uuid" : "gsdjfhsdfkhjdsf"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/past_meetings/{meetingUUID}" : {
      "get" : {
        "tags" : [ "past meetings", "{meeting UUID}" ],
        "summary" : "Get past meeting details",
        "description" : "Get details on a past meeting. <br><br>\n**Scopes:** `meeting:read:admin` `meeting:read`\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n> **Note**: Please double encode your UUID when using this API if the UUID begins with a '/'or contains '//' in it.",
        "operationId" : "getPastMeetingDetails",
        "parameters" : [ {
          "name" : "meetingUUID",
          "in" : "path",
          "description" : "(Required) The meeting UUID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for other API calls if the UUID begins with a '/'or contains '//' in it.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nMeeting details returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_36"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nMeeting details returned." : {
                    "value" : {
                      "duration" : "integer",
                      "end_time" : "string [date-time]",
                      "host_id" : "integer",
                      "id" : "integer",
                      "participants_count" : "integer",
                      "start_time" : "string [date-time]",
                      "topic" : "string",
                      "total_minutes" : "integer",
                      "type" : "integer",
                      "user_email" : "string",
                      "user_name" : "string",
                      "uuid" : "string [uuid]"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nMeeting not found<br><br>\n**Error Code:** `1010`<br>\nUser not exist: {userId}<br><br>\nUser {userId} not exist or not belong to this account.<br><br>\n**Error Code:** `300`<br>\nCannot access meeting info.<br><br>\n**Error Code",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nMeeting not found<br><br>\n**Error Code:** `1010`<br>\nUser not exist: {userId}<br><br>\nUser {userId} not exist or not belong to this account.<br><br>\n**Error Code:** `300`<br>\nCannot access meeting info.<br><br>\n**Error Code" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nMeeting not found<br><br>\n**Error Code:** `3001`<br>\nThis meeting is not available or ID is not valid.<br>\nMeeting ID is invalid or not end.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nMeeting not found<br><br>\n**Error Code:** `3001`<br>\nThis meeting is not available or ID is not valid.<br>\nMeeting ID is invalid or not end.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/past_meetings/{meetingUUID}/participants" : {
      "get" : {
        "tags" : [ "past meetings", "{meeting UUID}" ],
        "summary" : "Get past meeting participants",
        "description" : "Retrieve information on participants from a past meeting. <br><br>\n**Scopes:** `meeting:read:admin` `meeting:read`\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n**Prerequisites:**<br>\n* Paid account on a Pro or higher plan.\n\n<br> <br>  **Note**: Please double encode your UUID when using this API if the UUID begins with a '/'or contains '//' in it.\n",
        "operationId" : "getPastMeetingParticipants",
        "parameters" : [ {
          "name" : "meetingUUID",
          "in" : "path",
          "description" : "(Required) The meeting UUID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for other API calls if the UUID begins with a '/'or contains '//' in it.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nMeeting participants' report returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_37"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nMeeting participants' report returned." : {
                    "value" : {
                      "next_page_token" : "aliqua",
                      "page_count" : 1,
                      "page_size" : 30,
                      "participants" : [ {
                        "id" : "8b29rgg4bb",
                        "name" : "Ram Shekhar",
                        "user_email" : "ram.shekhar.123@fkdngfjg.fdghdfgj"
                      } ],
                      "total_records" : 1
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser {userId} not exist or not belong to this account.<br><br>\n**Error Code:** `300`<br>\nCannot access meeting information.<br><br>\n**Error Code:** `200`<br>\nOnly available for paid account: {acco",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser {userId} not exist or not belong to this account.<br><br>\n**Error Code:** `300`<br>\nCannot access meeting information.<br><br>\n**Error Code:** `200`<br>\nOnly available for paid account: {acco" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nMeeting not found<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>\nUser not exist: {userId}<br><br>\n**Error Code:** `3001`<br>\nThis meeting is not available or ID is not valid.<br>\nM",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nMeeting not found<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>\nUser not exist: {userId}<br><br>\n**Error Code:** `3001`<br>\nThis meeting is not available or ID is not valid.<br>\nM" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/past_webinars/{WebinarUUID}/absentees" : {
      "get" : {
        "tags" : [ "past webinars" ],
        "summary" : "Get webinar absentees",
        "description" : "List absentees of a webinar.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId" : "getWebinarAbsentees",
        "parameters" : [ {
          "name" : "WebinarUUID",
          "in" : "path",
          "description" : "(Required) The Webinar UUID. Each Webinar instance will generate its own Webinar UUID (i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "occurrence_id",
          "in" : "query",
          "description" : "The meeting occurrence ID.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nSuccess.<br>**Error Code:** `200`<br>\nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_38"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nSuccess.<br>**Error Code:** `200`<br>\nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}." : {
                    "value" : {
                      "page_count" : 1,
                      "page_number" : 1,
                      "page_size" : 30,
                      "registrants" : [ {
                        "address" : "dsfhkdjsfh st",
                        "city" : "jackson heights",
                        "comments" : "Looking forward to the Webinar",
                        "country" : "USA",
                        "create_time" : "2019-02-26T23:01:16.899Z",
                        "custom_questions" : [ {
                          "title" : "What do you hope to learn from this Webinar?",
                          "value" : "Look forward to learning how you come up with new recipes and what other services you offer."
                        } ],
                        "email" : "sjfkghdsg@someemail.dfgjd",
                        "first_name" : "Jill",
                        "id" : "24000002122",
                        "industry" : "Food",
                        "job_title" : "Chef",
                        "join_url" : "https://zoom.us/webinar/mywebinarissocooldighdghodghodg",
                        "last_name" : "Chill",
                        "no_of_employees" : "10",
                        "org" : "Cooking Org",
                        "phone" : "00000000",
                        "purchasing_time_frame" : "1-3 months",
                        "role_in_purchase_process" : "Influencer",
                        "state" : "NY",
                        "status" : "approved",
                        "zip" : "11371"
                      } ],
                      "total_records" : 1
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**Error Code:** `300`<br>Invalid webinar UUID.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Error Code:** `300`<br>Invalid webinar UUID." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `300`<br>\nThe request could not be completed because you have provided an invalid occurence ID: {occurenceId}<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `300`<br>\nThe request could not be completed because you have provided an invalid occurence ID: {occurenceId}<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>Meeting ID is invalid or not end.\n\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>Meeting ID is invalid or not end.\n\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/past_webinars/{webinarId}/files" : {
      "get" : {
        "tags" : [ "past webinars", "{webinar Id}1" ],
        "summary" : "List past webinar files",
        "description" : "**Note: This API has been deprecated and is no longer supported due to GCM encryption updates for security purposes.**\n\nList files sent via in-meeting chat during a meeting. The in-meeting files are deleted after 24 hours of the meeting completion time. \n<br><br>\n**Scope:** `webinar:read`, `webinar:read:admin`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n\n",
        "operationId" : "listPastWebinarFiles",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200` **OK**<br>\nFiles retrieved successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_33"
                },
                "examples" : {
                  "**HTTP Status Code:** `200` **OK**<br>\nFiles retrieved successfully." : {
                    "value" : {
                      "in_meeting_files" : [ {
                        "download_url" : "somefile.txt/randomurl",
                        "file_name" : "somefile.txt",
                        "file_size" : 300
                      } ],
                      "total_records" : 1
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/past_webinars/{webinarId}/instances" : {
      "get" : {
        "tags" : [ "past webinars", "{webinar Id}1" ],
        "summary" : "List past webinar instances",
        "description" : "List past webinar instances.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId" : "listPastWebinarInstances",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nList of past webinar instances returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_39"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nList of past webinar instances returned." : {
                    "value" : {
                      "webinars" : [ {
                        "start_time" : "2019-06-07T03:42:34.548Z",
                        "uuid" : "ut44544gisi"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**HTTP Status Code:** `300`<br>\nInvalid webinar ID.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `300`<br>\nInvalid webinar ID." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar not found.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar not found." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/past_webinars/{webinarId}/participants" : {
      "get" : {
        "tags" : [ "past webinars", "{webinar Id}1" ],
        "summary" : "List webinar participants",
        "description" : "Use this API to list all the participants who attended a webinar hosted in the past. <br>\n\n**Prerequisites:**\n* Pro or higher plan with a Webinar Add-on.<br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br> \n<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n\n\n\n",
        "operationId" : "listWebinarParticipants",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) Unique identifier of the webinar. You can retrieve the value of this field by calling the [list webinars](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinars) API.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200` **OK**<br>\nParticipants list returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_40"
                },
                "examples" : {
                  "**HTTP Status Code:** `200` **OK**<br>\nParticipants list returned." : {
                    "value" : {
                      "next_page_token" : "mdnf23qbsf4wr",
                      "page_count" : 1,
                      "page_size" : 1,
                      "participants" : [ {
                        "id" : "sdjhf3ui",
                        "name" : "Matt",
                        "user_email" : "matt@123.jhdyuerys"
                      } ],
                      "total_records" : 1
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad request**<br>\n\n**Error Code:** `200`<br>\nNo permission.<br>\nOnly available for paid account: {accountId}.<br><br>\n**Error Code:**  `300`<br>\nThe next page token is invalid or expired.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad request**<br>\n\n**Error Code:** `200`<br>\nNo permission.<br>\nOnly available for paid account: {accountId}.<br><br>\n**Error Code:**  `300`<br>\nThe next page token is invalid or expired.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`\n**Error Code:**`3001`<br>\nWebinar does not exist.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`\n**Error Code:**`3001`<br>\nWebinar does not exist." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/past_webinars/{webinarId}/polls" : {
      "get" : {
        "tags" : [ "past webinars", "{webinar Id}1" ],
        "summary" : "List past webinar poll results",
        "description" : "The polling feature for webinar allows you to create single choice or multiple choice polling questions for your webinars. Use this API to retrieve the results for Webinar Polls of a specific Webinar.\n\n**Prerequisites:**<br>\n* [Webinar license](https://zoom.us/webinar)<br>\n**Scopes**: `webinar:read:admin`, `webinar:read`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n",
        "operationId" : "listPastWebinarPollResults",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200` **OK**<br>\nPolls returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_35"
                },
                "examples" : {
                  "**HTTP Status Code:** `200` **OK**<br>\nPolls returned successfully." : {
                    "value" : {
                      "id" : 123456,
                      "questions" : [ {
                        "email" : "myemail@jksdlfkjdf.djfk",
                        "name" : "Sam S",
                        "question_details" : [ {
                          "answer" : "I am wonderful.",
                          "question" : "How are you?"
                        } ]
                      } ],
                      "start_time" : "2019-02-01T12:34:12.660Z",
                      "title" : "Learn something new",
                      "uuid" : "gsdjfhsdfkhjdsf"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401` **Unauthorized**<br>\n**Error Code:** `1010`<br>  User does not belong to this account:{accountId}.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `401` **Unauthorized**<br>\n**Error Code:** `1010`<br>  User does not belong to this account:{accountId}.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not found**<br>\nWebinar not found.<br>\n\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end.<br>\nThis webinar id does not belong to you:{webinarId}.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not found**<br>\nWebinar not found.<br>\n\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end.<br>\nThis webinar id does not belong to you:{webinarId}.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/past_webinars/{webinarId}/qa" : {
      "get" : {
        "tags" : [ "past webinars", "{webinar Id}1" ],
        "summary" : "List Q&A of past webinar",
        "description" : "The [Question & Answer (Q&A)](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer) feature for Webinars allows attendees to ask questions during the Webinar and for the panelists, co-hosts and host to answer their questions.<br>\nUse this API to list Q&A of a specific Webinar.\n\n**Prerequisites:**<br>\n* [Webinar license](https://zoom.us/webinar)<br>\n**Scopes**: `webinar:read:admin`, `webinar:read`<br>\n <br>\n\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId" : "listQAOfPastWebinar",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200` **OK**<br>\nQ&A returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_35"
                },
                "examples" : {
                  "**HTTP Status Code:** `200` **OK**<br>\nQ&A returned successfully." : {
                    "value" : {
                      "id" : 123456,
                      "questions" : [ {
                        "email" : "myemail@jksdlfkjdf.djfk",
                        "name" : "Sam S",
                        "question_details" : [ {
                          "answer" : "I am wonderful.",
                          "question" : "How are you?"
                        } ]
                      } ],
                      "start_time" : "2019-02-01T12:34:12.660Z",
                      "title" : "Learn something new",
                      "uuid" : "gsdjfhsdfkhjdsf"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401` **Unauthorized**<br>\n**Error Code:** `1010`<br>  User does not belong to this account:{accountId}.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `401` **Unauthorized**<br>\n**Error Code:** `1010`<br>  User does not belong to this account:{accountId}.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not found**<br>\nWebinar not found.<br>\n\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end.<br>\nThis webinar id does not belong to you:{webinarId}.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not found**<br>\nWebinar not found.<br>\n\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end.<br>\nThis webinar id does not belong to you:{webinarId}.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/report/activities" : {
      "get" : {
        "tags" : [ "report" ],
        "summary" : "Get sign In / sign out activity report",
        "description" : "Retrieve a list of sign in / sign out activity logs [report](https://support.zoom.us/hc/en-us/articles/201363213-Getting-Started-with-Reports) of users under a Zoom account.<br>\n**Prerequisites**<br>\n* Pro or higher plan.<br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId" : "getSignInSignOutActivityReport",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "Start date for which you would like to view the activity logs report. Using the `from` and `to` parameters, specify a monthly date range for the report as the API only provides one month worth of data in one request. The specified date range should fall within the last six months.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "End date up to which you would like to view the activity logs report.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records to be returned within a single API call",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "Next page token is used to paginate through large result sets",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nSuccess",
            "content" : {
              "application/octet-stream" : {
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nSuccess" : {
                    "value" : "\"{\\n            \\\"email\\\": \\\"sfkjsldfhjdsf@dskjflhdsf.com\\\",\\n            \\\"time\\\": \\\"2019-09-15T20:56:09Z\\\",\\n            \\\"type\\\": \\\"Sign in\\\",\\n            \\\"ip_address\\\": \\\"38.99.100.6\\\",\\n            \\\"client_type\\\": \\\"Browser\\\",\\n            \\\"version\\\": \\\"-\\\"\\n        },\\n        {\\n            \\\"email\\\": \\\"dfdsfdfdf@gidfdfdl.com\\\",\\n            \\\"time\\\": \\\"2019-09-15T19:13:41Z\\\",\\n            \\\"type\\\": \\\"Sign in\\\",\\n            \\\"ip_address\\\": \\\"38.99.100.6\\\",\\n            \\\"client_type\\\": \\\"Browser\\\",\\n            \\\"version\\\": \\\"-\\\"\\n        },\\n        {\\n            \\\"email\\\": \\\"fdfdfdf@gfdgfdgdsfg.com\\\",\\n            \\\"time\\\": \\\"2019-09-15T18:50:15Z\\\",\\n            \\\"type\\\": \\\"Sign out\\\",\\n            \\\"ip_address\\\": \\\"38.99.100.6\\\",\\n            \\\"client_type\\\": \\\"Browser\\\",\\n            \\\"version\\\": \\\"-\\\"\\n        }\""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/report/cloud_recording" : {
      "get" : {
        "tags" : [ "report" ],
        "summary" : "Get cloud recording usage report",
        "description" : "Retrieve cloud recording usage report for a specified period. You can only get cloud recording reports that is one day ealier than the current date and for the most recent period of 6 months. The date gap between from and to dates should be smaller or equal to 30 days. <br>\n**Prerequisites**<br>\n* Pro or higher plan.<br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId" : "getCloudRecordingUsageReport",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "(Required) End date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nCloud Recording Report Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_41"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nCloud Recording Report Returned" : {
                    "value" : {
                      "cloud_recording_storage" : [ {
                        "date" : { },
                        "free_usage" : "1 GB",
                        "plan_usage" : "0",
                        "usage" : "29 MB"
                      } ],
                      "from" : { },
                      "to" : { }
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**HTTP Status Code:** `300`<br>\nOnly provide report in recent 6 months",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `300`<br>\nOnly provide report in recent 6 months" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/report/daily" : {
      "get" : {
        "tags" : [ "report" ],
        "summary" : "Get daily usage report",
        "description" : "Retrieve daily report to access the account-wide usage of Zoom services for each day in a given month. It lists the number of new users, meetings, participants, and meeting minutes.<br>\n**Prerequisites**<br>\n* Pro or higher plan.<br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId" : "getDailyUsageReport",
        "parameters" : [ {
          "name" : "year",
          "in" : "query",
          "description" : "Year for this report",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "month",
          "in" : "query",
          "description" : "Month for this report",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nDaily report retrieved.<br>\nThis is only available for paid accounts:{accountId}.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_42"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nDaily report retrieved.<br>\nThis is only available for paid accounts:{accountId}." : {
                    "value" : {
                      "dates" : [ {
                        "date" : { },
                        "meeting_minutes" : 100,
                        "meetings" : 10,
                        "new_users" : 3,
                        "participants" : 20
                      }, {
                        "date" : { },
                        "meeting_minutes" : 200,
                        "meetings" : 20,
                        "new_users" : 0,
                        "participants" : 80
                      }, {
                        "date" : { },
                        "meeting_minutes" : 380,
                        "meetings" : 35,
                        "new_users" : 10,
                        "participants" : 100
                      } ],
                      "month" : 6,
                      "year" : 2019
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\n**Error Code:** `300`<br> \nDaily report can only be provided for a month that falls within the recent 6 months.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\n**Error Code:** `300`<br> \nDaily report can only be provided for a month that falls within the recent 6 months." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/report/meetings/{meetingId}" : {
      "get" : {
        "tags" : [ "report", "meetings/{meeting Id}1" ],
        "summary" : "Get meeting detail reports",
        "description" : "Get a detailed report for a past meeting. <br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Pro or a higher plan.<br>\n ",
        "operationId" : "getMeetingDetailReports",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nMeeting details returned.<br>\nThis is only available for paid account.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_43"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nMeeting details returned.<br>\nThis is only available for paid account." : {
                    "value" : {
                      "duration" : 11,
                      "end_time" : "2019-08-14T09:05:19.754Z",
                      "id" : 1000000,
                      "participants_count" : 4,
                      "start_time" : "2019-07-14T09:05:19.754Z",
                      "topic" : "Awesome meeting",
                      "total_minutes" : 11,
                      "tracking_fields" : [ {
                        "field" : "Meeting Purpose",
                        "value" : "Sales"
                      } ],
                      "type" : 2,
                      "user_email" : "officia@sdhgdfgh.fsdfs",
                      "user_name" : "officia",
                      "uuid" : "sfsdfsdfc6122222d"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**HTTP Status Code:** `300`<br>\nCan not access meeting information:{meetingId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `300`<br>\nCan not access meeting information:{meetingId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nMeeting ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting {meetingId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nMeeting ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting {meetingId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/report/meetings/{meetingId}/participants" : {
      "get" : {
        "tags" : [ "report", "meetings/{meeting Id}1" ],
        "summary" : "Get meeting participant reports",
        "description" : "Get participant report for a past meeting.<br><br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Pro or a higher plan.<br>\n ",
        "operationId" : "getMeetingParticipantReports",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "include_fields",
          "in" : "query",
          "description" : "Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingregistrants).<br>\n\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "registrant_id"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nMeeting participants report returned.<br>\nThis is only available for paid account.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_44"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nMeeting participants report returned.<br>\nThis is only available for paid account." : {
                    "value" : {
                      "next_page_token" : "",
                      "page_count" : "1",
                      "page_size" : "30",
                      "participants" : [ {
                        "duration" : "20:00",
                        "id" : "dskfjladjskfl",
                        "join_time" : "2019-02-01T12:34:12.660Z",
                        "leave_time" : "2019-03-01T12:34:12.660Z",
                        "name" : "Riya",
                        "user_email" : "riya@jdfghsdfgsd.fdjfhdf",
                        "user_id" : "sdfjkldsfdfgdfg"
                      } ],
                      "total_records" : "1"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**HTTP Status Code:** `300`<br>Cannot access meeting information:{meetingId}.<br>\nThe next page token is either invalid or has expired.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `300`<br>Cannot access meeting information:{meetingId}.<br>\nThe next page token is either invalid or has expired." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nMeeting ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting  {MeetingId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nMeeting ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting  {MeetingId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/report/meetings/{meetingId}/polls" : {
      "get" : {
        "tags" : [ "report", "meetings/{meeting Id}1" ],
        "summary" : "Get meeting poll reports",
        "description" : "Retrieve a report of [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) results for a past meeting. <br><br>\n**Scopes:** `report:read:admin`<br>\n \n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Pro or a higher plan.<br>\n ",
        "operationId" : "getMeetingPollReports",
        "parameters" : [ {
          "name" : "meetingId",
          "in" : "path",
          "description" : "(Required) The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nMeeting polls report returned.<br>\nThis is only available for paid account:{accountId}.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_45"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nMeeting polls report returned.<br>\nThis is only available for paid account:{accountId}." : {
                    "value" : {
                      "id" : 123456,
                      "questions" : [ {
                        "email" : "myemail@jksdlfkjdf.djfk",
                        "name" : "Sam S",
                        "question_details" : [ {
                          "answer" : "I am wonderful.",
                          "question" : "How are you?"
                        } ]
                      } ],
                      "start_time" : "2019-02-01T12:34:12.660Z",
                      "status" : "ended",
                      "title" : "Learn something new",
                      "uuid" : "gsdjfhsdfkhjdsf"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nMeeting ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting  {meetingId} not found or has expired.<br>\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nMeeting ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting  {meetingId} not found or has expired.<br>\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/report/operationlogs" : {
      "get" : {
        "tags" : [ "report" ],
        "summary" : "Get operation logs report",
        "description" : "The [Operations Logs](https://support.zoom.us/hc/en-us/articles/360032748331-Operation-Logs) report allows you to audit admin and user activity, such as adding a new user, changing account settings, and deleting recordings.<br>\nUse this API to retrieve operation logs report for a specified period of time.<br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Pro or higher plan.",
        "operationId" : "getOperationLogsReport",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "(Required) End date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "category_type",
          "in" : "query",
          "description" : "**Optional**<br>\nFilter your response by a category type to see reports for a specific category.\nThe value for this field can be one of the following:<br> `all`<br>`user`<br>`user_settings`<br>`account`<br>`billing`<br>`im`<br>`recording`<br>`phone_contacts`<br>`webinar`<br>`sub_account`<br>`role`<br>`zoom_rooms`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "phone_contacts"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nOperation Logs Report Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_46"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nOperation Logs Report Returned" : {
                    "value" : {
                      "from" : { },
                      "next_page_token" : "czxcxdvxvddc",
                      "operation_logs" : [ {
                        "action" : "Update",
                        "category_type" : "User",
                        "operation_detail" : "Activate User sjkfhdsf@jdfgkhgd.com ",
                        "operator" : "someuser@sfksfhksdfsf.com",
                        "time" : "2019-08-20T19:09:01Z"
                      }, {
                        "action" : "Update",
                        "category_type" : "User",
                        "operation_detail" : "Deactivate User mynewemail@jdfkdshfhjdsf.ffasdm ",
                        "operator" : "anotheruser@sfhidshfidshufds.com",
                        "time" : "2019-08-20T18:59:56Z"
                      } ],
                      "page_size" : 30,
                      "to" : { }
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**HTTP Status Code:** `300`<br>Only provide report in recent 6 months",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `300`<br>Only provide report in recent 6 months" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/report/telephone" : {
      "get" : {
        "tags" : [ "report" ],
        "summary" : "Get telephone reports",
        "description" : "The [telephone report](https://support.zoom.us/hc/en-us/articles/206514816-Telephone-reports) allows you to view who dialed into meetings via phone (Audio Conferencing or SIP Connected Audio) and which number they dialed into and other details. Use this API to get telephone report for a specified period of time.\n\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>**Prerequisites:**<br>\n* Pro or higher plan.",
        "operationId" : "getTelephoneReports",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "Audio types:<br>`1` - Toll-free Call-in & Call-out.<br>`2` - Toll <br>\n`3` - SIP Connected Audio",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "1"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "(Required) End date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "page_number",
          "in" : "query",
          "description" : "\n**Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use \"next_page_token\" for pagination instead of this field.\n\nThe page number of the current page in the returned records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "1"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nTelephone report returned.<br>\nThis is only available for paid account:{accountId}.<br>\nThe requested report cannot be generated for this account because this account has not subscribed to toll-free audio conference plan.<b",
            "content" : {
              "application/octet-stream" : {
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nTelephone report returned.<br>\nThis is only available for paid account:{accountId}.<br>\nThe requested report cannot be generated for this account because this account has not subscribed to toll-free audio conference plan.<b" : {
                    "value" : "\"{\\n  \\\"from\\\": \\\"2019-06-20\\\",\\n  \\\"to\\\": \\\"2019-07-20\\\",\\n  \\\"page_count\\\": 1,\\n  \\\"page_number\\\": 1,\\n  \\\"page_size\\\": 30,\\n  \\\"total_records\\\": 1,\\n  \\\"telephony_usage\\\": [\\n    {\\n      \\\"meeting_id\\\": 00000,\\n      \\\"phone_number\\\": \\\"000002001\\\",\\n      \\\"host_name\\\": \\\"minim c\\\",\\n      \\\"host_email\\\": \\\"nadhkasdg@jdskfhdsf.hjhj\\\",\\n      \\\"dept\\\": \\\"Billing\\\",\\n      \\\"start_time\\\": \\\"2019-07-15T23:24:52Z\\\",\\n      \\\"end_time\\\": \\\"2019-07-15T23:30:19Z\\\",\\n      \\\"duration\\\": 6,\\n      \\\"total\\\": 11,\\n      \\\"country_name\\\": \\\"nulla laboris cillum\\\",\\n      \\\"meeting_type\\\": \\\"voluptate\\\",\\n      \\\"call_in_number\\\": \\\"occaecat et reprehenderit\\\"\\n    }\\n  ]\\n}\""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/report/users" : {
      "get" : {
        "tags" : [ "report", "users1" ],
        "summary" : "Get active/inactive host reports",
        "description" : "A user is considered to be an active host during the month specified in the \"from\" and \"to\" range, if the user has hosted at least one meeting during this period. If the user didn't host any meetings during this period, the user is considered to be inactive.<br>The Active Hosts report displays a list of meetings, participants, and meeting minutes for a specific time range, up to one month. The month should fall within the last six months.<br>The Inactive Hosts report pulls a list of users who were not active during a specific period of time. \nUse this API to retrieve an active or inactive host report for a specified period of time. The time range for the report is limited to a month and the month should fall under the past six months. <br>You can specify the type of report and date range using the query parameters.<br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Pro or higher plan.",
        "operationId" : "getActiveInactiveHostReports",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "Active or inactive hosts.<br>`active` - Active hosts. <br>`inactive` - Inactive hosts.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "active"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "(Required) End date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "page_number",
          "in" : "query",
          "description" : "The page number of the current page in the returned records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "1"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nActive or inactive hosts report returned.<br>\nThis is only available for paid account: {accountId}.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_47"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nActive or inactive hosts report returned.<br>\nThis is only available for paid account: {accountId}." : {
                    "value" : {
                      "from" : { },
                      "page_count" : 1,
                      "page_number" : 1,
                      "page_size" : 30,
                      "to" : { },
                      "total_meeting_minutes" : 10,
                      "total_meetings" : 2,
                      "total_participants" : 10,
                      "total_records" : 3,
                      "users" : [ {
                        "create_time" : "2019-09-13T16:20:30Z",
                        "dept" : "",
                        "email" : "reag12343@gmail.com",
                        "id" : "BzBAAAAAAAfprg",
                        "last_client_version" : "4.4.1242.0623(win)",
                        "last_login_time" : "2019-09-13T16:21:40Z",
                        "meeting_minutes" : 5,
                        "meetings" : 1,
                        "participants" : 5,
                        "type" : 1,
                        "user_name" : "cbcvbvcbvbc"
                      }, {
                        "create_time" : "2019-07-23T00:27:34Z",
                        "dept" : "Business",
                        "email" : "mynewemailgoog@gmail.com",
                        "id" : "0CAAAAA6jxcA",
                        "last_client_version" : "4.4.1242.0623(win)",
                        "last_login_time" : "2019-07-23T00:28:00Z",
                        "meeting_minutes" : 0,
                        "meetings" : 0,
                        "participants" : 0,
                        "type" : 1,
                        "user_name" : "xgdzgdfg"
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/report/users/{userId}/meetings" : {
      "get" : {
        "tags" : [ "report", "users1" ],
        "summary" : "Get meeting reports",
        "description" : "Retrieve [report](https://support.zoom.us/hc/en-us/articles/216378603-Meeting-Reporting) on a past meeting for a specified period of time. The time range for the report is limited to a month and the month should fall under the past six months.\n\nMeetings will only be returned in the response if the meeting has two or more unique participants.  <br><br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Pro or higher plan.",
        "operationId" : "getMeetingReports",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the \"from\" and \"to\" parameters should only be one month as the report includes only one month worth of data at once.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "(Required) End date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past one user meetings. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "past"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nActive or inactive hosts report returned.<br>\n",
            "content" : {
              "application/octet-stream" : {
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nActive or inactive hosts report returned.<br>\n" : {
                    "value" : "\"{\\n    \\\"from\\\": \\\"2019-07-14\\\",\\n    \\\"to\\\": \\\"2019-08-14\\\",\\n    \\\"page_count\\\": 1,\\n    \\\"page_size\\\": 30,\\n    \\\"total_records\\\": 9,\\n    \\\"next_page_token\\\": \\\"\\\",\\n    \\\"meetings\\\": [\\n        {\\n            \\\"uuid\\\": \\\"/lqsAAAA5VBBBw==\\\",\\n            \\\"id\\\": 12345,\\n            \\\"host_id\\\": \\\"gdfg3434dsssfss\\\",\\n            \\\"type\\\": 2,\\n            \\\"topic\\\": \\\"MyTestMeetings\\\",\\n            \\\"user_name\\\": \\\"Prashant Bhandari\\\",\\n            \\\"user_email\\\": \\\"pb@hjdskfhds.fdskhfhds\\\",\\n            \\\"start_time\\\": \\\"2019-07-15T23:24:52Z\\\",\\n            \\\"end_time\\\": \\\"2019-07-15T23:30:19Z\\\",\\n            \\\"duration\\\": 6,\\n            \\\"total_minutes\\\": 11,\\n            \\\"participants_count\\\": 2\\n        },\\n        {\\n            \\\"uuid\\\": \\\"411bbbbbbcVyw==\\\",\\n            \\\"id\\\": 000000,\\n            \\\"host_id\\\": \\\"gdfg3434dsssfss\\\",\\n            \\\"type\\\": 2,\\n            \\\"topic\\\": \\\"My Meeting\\\",\\n            \\\"user_name\\\": \\\"Raju Khanal\\\",\\n            \\\"user_email\\\": \\\"srhkdjfh@jh.fsadghjm\\\",\\n            \\\"start_time\\\": \\\"2019-07-16T17:14:39Z\\\",\\n            \\\"end_time\\\": \\\"2019-07-16T17:26:20Z\\\",\\n            \\\"duration\\\": 12,\\n            \\\"total_minutes\\\": 17,\\n            \\\"participants_count\\\": 2\\n        }\\n    ]\\n}\""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nThis is only available for paid account:{accountId}.<br>\n\n**Error Code:** `300`<br>\nThe next page token is invalid or expired.\n\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nThis is only available for paid account:{accountId}.<br>\n\n**Error Code:** `300`<br>\nThe next page token is invalid or expired.\n\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**\n<br>**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**\n<br>**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/report/webinars/{webinarId}" : {
      "get" : {
        "tags" : [ "report", "webinars/{webinar Id}" ],
        "summary" : "Get webinar detail reports",
        "description" : "Retrieve a [report](https://support.zoom.us/hc/en-us/articles/201393719-Webinar-Reporting) containing past webinar details.  <br><br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Pro or higher plan with Webinar add-on.",
        "operationId" : "getWebinarDetailReports",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nWebinar details returned.<br>\nThis is only available for paid account:{accountId}.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_48"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nWebinar details returned.<br>\nThis is only available for paid account:{accountId}." : {
                    "value" : {
                      "duration" : 20,
                      "end_time" : "2019-11-18T03:15:20.056Z",
                      "id" : 51788617,
                      "participants_count" : 13,
                      "start_time" : "2019-11-18T03:15:00.056Z",
                      "topic" : "My Health Webinar",
                      "total_minutes" : 10,
                      "tracking_fields" : [ {
                        "field" : "Webinar Purpose",
                        "value" : "Health awareness"
                      } ],
                      "type" : 5,
                      "user_email" : "fdsjkfhhkd@hkdfhkdf.ghfjd",
                      "user_name" : "Utfdfdget",
                      "uuid" : "urn4fe6caeb98"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**HTTP Status Code:** `300`<br>\nCan not access webinar information:{webinarId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `300`<br>\nCan not access webinar information:{webinarId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting  {meetingId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting  {meetingId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/report/webinars/{webinarId}/participants" : {
      "get" : {
        "tags" : [ "report", "webinars/{webinar Id}" ],
        "summary" : "Get webinar participant reports",
        "description" : "Get detailed report on each attendee of a webinar.<br><br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Pro or a higher plan with Webinar add-on enabled.",
        "operationId" : "getWebinarParticipantReports",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "include_fields",
          "in" : "query",
          "description" : "Enter 'registrant_id' as the value for this field if you would like to see the registrant ID attribute included in the response of this API call. A registrant ID is a unique identifier of a [webinar registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarregistrants).<br>\n\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "registrant_id"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nMeeting participants report returned.<br>\nThis is only available for paid account: {accountId}.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_49"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nMeeting participants report returned.<br>\nThis is only available for paid account: {accountId}." : {
                    "value" : {
                      "next_page_token" : "",
                      "page_count" : "1",
                      "page_size" : "30",
                      "participants" : [ {
                        "duration" : "20",
                        "id" : "dskfjladjskfl",
                        "join_time" : "2019-02-01T12:34:12.660Z",
                        "leave_time" : "2019-03-01T12:34:12.660Z",
                        "name" : "Riya",
                        "user_email" : "riya@jdfghsdfgsd.fdjfhdf",
                        "user_id" : "sdfjkldsfdfgdfg"
                      } ],
                      "total_records" : "1"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**HTTP Status Code:** `300`<br>\nThe next page token is invalid or has expired.<br>\nCan not access the webinar information, {webinarId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `300`<br>\nThe next page token is invalid or has expired.<br>\nCan not access the webinar information, {webinarId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `3001`<br>\nWebinar  {webinarId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `3001`<br>\nWebinar  {webinarId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/report/webinars/{webinarId}/polls" : {
      "get" : {
        "tags" : [ "report", "webinars/{webinar Id}" ],
        "summary" : "Get webinar poll reports",
        "description" : "Retrieve a report on past [webinar polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).<br><br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Pro or a higher plan with Webinar add-on enabled.",
        "operationId" : "getWebinarPollReports",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nWebinar polls report returned.<br>\nMissing webinar subscription plan.<br>\nThis is only available for paid account:{accountId}.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_45"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nWebinar polls report returned.<br>\nMissing webinar subscription plan.<br>\nThis is only available for paid account:{accountId}." : {
                    "value" : {
                      "id" : 123456,
                      "questions" : [ {
                        "email" : "myemail@jksdlfkjdf.djfk",
                        "name" : "Sam S",
                        "question_details" : [ {
                          "answer" : "I am wonderful.",
                          "question" : "How are you?"
                        } ]
                      } ],
                      "start_time" : "2019-02-01T12:34:12.660Z",
                      "status" : "ended",
                      "title" : "Learn something new",
                      "uuid" : "gsdjfhsdfkhjdsf"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `3001`<br>\nWebinar  {webinarId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `3001`<br>\nWebinar  {webinarId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/report/webinars/{webinarId}/qa" : {
      "get" : {
        "tags" : [ "report", "webinars/{webinar Id}" ],
        "summary" : "Get webinar Q&A report",
        "description" : "The Question & Answer (Q&A) feature for webinars allows attendees to ask questions during the webinar and for the panelists, co-hosts and host to answer their questions.\n\nUse this API to retrieve a report on question and answers from past webinars. <br><br>\n**Scopes:** `report:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n**Prerequisites:**<br>\n* Pro or a higher plan with Webinar add-on enabled.",
        "operationId" : "getWebinarQAReport",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.\n\nIf a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nWebinar Q&A report returned.<br>\nThis is only available for paid account:{accountId}.<br>\nA report cannot be generated for this account because this account has not subscribed to a webinar plan.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_50"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nWebinar Q&A report returned.<br>\nThis is only available for paid account:{accountId}.<br>\nA report cannot be generated for this account because this account has not subscribed to a webinar plan." : {
                    "value" : {
                      "id" : 14321,
                      "questions" : [ {
                        "email" : "pidufshdsuf@djdfdsfd.ghk",
                        "name" : "Harry S",
                        "question_details" : [ {
                          "answer" : "Once a month.",
                          "question" : "How often will you hold this webinar?"
                        } ]
                      } ],
                      "start_time" : "2019-02-01T12:34:12.660Z",
                      "uuid" : "urgvhge945"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.<br>\n**Error Code:** `3001`<br>\nWebinar  {webinarId} not found or has expired.<br>\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.<br>\n**Error Code:** `3001`<br>\nWebinar  {webinarId} not found or has expired.<br>\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tracking_fields" : {
      "get" : {
        "tags" : [ "tracking fields" ],
        "summary" : "List tracking fields",
        "description" : "[Tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) allow you to analyze usage by various fields within an organization.<br> Use this API to list all the tracking fields on your Zoom account.<br><br>\n**Scopes:** `trackingfield:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n**Prerequisites:**\n* Business, Education, API or higher plan",
        "operationId" : "listTrackingFields",
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nList of Tracking Fields returned.",
            "content" : {
              "application/octet-stream" : {
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nList of Tracking Fields returned." : {
                    "value" : "\"{\\n  \\\"total_records\\\": 1,\\n  \\\"tracking_fields\\\": [\\n  {\\n  \\\"id\\\": \\\"3746374637\\\",\\n  \\\"field\\\": \\\"Meeting Purpose\\\",\\n  \\\"required\\\": true,\\n  \\\"visible\\\": false,\\n  \\\"recommended_values\\\": [\\n    \\\"Support\\\",\\n    \\\"Onboarding\\\",\\n    \\\"Sales\\\",\\n    \\\"Other\\\"\\n  ]\\n}\\n}\""
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "tracking fields" ],
        "summary" : "Create a tracking field",
        "description" : "[Tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) allow you to analyze usage by various fields within an organization.<br> Use this API to create a new tracking field.<br><br>\n**Scope:** `trackingfield:write:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites:**\n* Business, Education, API or higher plan",
        "operationId" : "createATrackingField",
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Code:** `201`<br>\nTracking Field created",
            "headers" : {
              "Content-Location" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "ipsum officia"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_9"
                },
                "examples" : {
                  "**HTTP Status Code:** `201`<br>\nTracking Field created" : {
                    "value" : {
                      "field" : "consectetur sunt incididunt",
                      "id" : "consectetur officia voluptate",
                      "recommended_values" : [ "eiusmod esse qui id", "consequat dolore laboris Ut culp" ],
                      "required" : false,
                      "visible" : false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tracking_fields/{fieldId}" : {
      "get" : {
        "tags" : [ "tracking fields", "{field Id}" ],
        "summary" : "Get a tracking field",
        "description" : "[Tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) allow you to analyze usage by various fields within an organization.<br><br> When scheduling a meeting, the tracking field will be included in the meeting options.<br>Use this API to get information on a tracking field.<br><br>\n**Scopes:** `trackingfield:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites:**\n* Business, Education, API or higher plan\n",
        "operationId" : "getATrackingField",
        "parameters" : [ {
          "name" : "fieldId",
          "in" : "path",
          "description" : "(Required) The Tracking Field ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nTracking Field object returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_51"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nTracking Field object returned" : {
                    "value" : {
                      "field" : "Meeting Purpose",
                      "id" : "fdfgdfgr23gr1",
                      "recommended_values" : [ "Support", "Onboarding", "Sales", "Other" ],
                      "required" : true,
                      "visible" : false
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nTracking Field not found",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nTracking Field not found" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "tracking fields", "{field Id}" ],
        "summary" : "Delete a tracking field",
        "description" : "[Tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) allow you to analyze usage by various fields within an organization.<br> Use this API to delete a tracking field.<br><br>\n**Scope:** `trackingfield:write:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites:**\n* Business, Education, API or higher plan",
        "operationId" : "deleteATrackingField",
        "parameters" : [ {
          "name" : "fieldId",
          "in" : "path",
          "description" : "(Required) The Tracking Field ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nTracking Field deleted",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nTracking Field deleted" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nTracking Field not found",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nTracking Field not found" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "tracking fields", "{field Id}" ],
        "summary" : "Update a tracking field",
        "description" : "[Tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) allow you to analyze usage by various fields within an organization.<br> Use this API to update a tracking field.<br><br>\n**Scope:** `trackingfield:write:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites:**\n* Business, Education, API or higher plan",
        "operationId" : "updateATrackingField",
        "parameters" : [ {
          "name" : "fieldId",
          "in" : "path",
          "description" : "(Required) The Tracking Field ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nTracking Field updated",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nTracking Field updated" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nTracking Field not found",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nTracking Field not found" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "List users",
        "description" : "A Zoom account can have one or more users. Use this API to list users on your account.<br><br>\n**Scopes:** `user:read:admin`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId" : "listUsers",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "User statuses:<br>`active` - Users with an active status.<br>`inactive` - Users who are deactivated.<br>`pending` - Users with a pending status.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "active"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "role_id",
          "in" : "query",
          "description" : "Unique identifier of the role. Provide this parameter if you would like to filter the response by a specific role. You can retrieve Role IDs from [List Roles](https://marketplace.zoom.us/docs/api-reference/zoom-api/roles/roles) API. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "page_number",
          "in" : "query",
          "description" : "The page number of the current page in the returned records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "include_fields",
          "in" : "query",
          "description" : "Provide a value for this field if you would like to see the following attribute in the response of this API call:<br>\n\n`custom_attributes`: Returns custom attributes that are associated with the user.<br>`host_key`: Returns [host key](https://support.zoom.us/hc/en-us/articles/205172555-Using-your-host-key) of the user.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nUser list returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_52"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nUser list returned." : {
                    "value" : {
                      "page_count" : 1,
                      "page_number" : 1,
                      "page_size" : 30,
                      "total_records" : 1,
                      "users" : [ {
                        "created_at" : "2018-11-15T01:10:08Z",
                        "dept" : "",
                        "email" : "mel@jfggdhfhdfj.djfhdsfh",
                        "first_name" : "Melina",
                        "id" : "z8yAAAAA8bbbQ",
                        "im_group_ids" : [ "Abdsjkfhdhfj" ],
                        "last_client_version" : "4.4.55383.0716(android)",
                        "last_login_time" : "2019-09-13T21:08:52Z",
                        "last_name" : "Ghimire",
                        "pic_url" : "https://lh4.googleusercontent.com/-someurl/photo.jpg",
                        "pmi" : 581111112,
                        "status" : "active",
                        "timezone" : "America/Los_Angeles",
                        "type" : 2,
                        "verified" : 1
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Create users",
        "description" : "A Zoom account can have one or more users. Use this API to add a new user to your account.<br><br>\n**Prerequisites:**<br>\n* Pro or higher plan<br><br>\n**Scopes:** `user:write:admin` `user:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId" : "createUsers",
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Code:** `201`<br>\nUser created.",
            "headers" : {
              "Content-Location" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "ipsum officia"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_10"
                },
                "examples" : {
                  "**HTTP Status Code:** `201`<br>\nUser created." : {
                    "value" : {
                      "email" : "string",
                      "first_name" : "string",
                      "id" : "string",
                      "last_name" : "string",
                      "type" : "integer"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300`<br>\nInvalid parameter: password<br><br>\n**Error Code:** `200`<br>No privilege. <br>No permission, please contact Zoom customer support.<br><br>**Error Code:** `1000`<br>The user ca",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300`<br>\nInvalid parameter: password<br><br>\n**Error Code:** `200`<br>No privilege. <br>No permission, please contact Zoom customer support.<br><br>**Error Code:** `1000`<br>The user ca" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4130`<br>\nGroup does not exist: $groupId<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4130`<br>\nGroup does not exist: $groupId<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "**HTTP Status Code:** `409`<br>User with that email already exists<br>\n**Error Code:** `1005`<br>Email $email has already been used.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `409`<br>User with that email already exists<br>\n**Error Code:** `1005`<br>Email $email has already been used." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/email" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Check a user email",
        "description" : "Verify if a user's email is registered with Zoom.<br><br>\n\n<b>Note: </b>You can successfully check if a user is a registered Zoom user only if the user **signed up for Zoom via email and is within your account.** If you provide an email address of a user who is not in your account, the value of \"existed_email\" parameter will be \"false\" irrespective of whether or not the user is registered with Zoom. The response of this API call will not include users who joined Zoom using options such as \"Sign in with SSO\", \"Sign in with Google\" or \"Sign in with Facebook\" even if they are in the same account as yours.\n\n**Scopes:** `user:read:admin` `user:read`\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n",
        "operationId" : "checkAUserEmail",
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "description" : "(Required) The email address to be verified.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nSuccess.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_53"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nSuccess." : {
                    "value" : {
                      "existed_email" : false
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code:** `300`<br> Email is required.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code:** `300`<br> Email is required." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/me/zak" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Get user's ZAK",
        "description" : "Get User’s Zoom Access Token (ZAK). You can use a ZAK to enable a non-login user to join a meeting on your app. Non-login users do not need to enter their username and password to join meetings.\n\n**Scope:** `user_zak:read`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId" : "getUserSZak",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_54"
                },
                "examples" : {
                  "OK" : {
                    "value" : {
                      "token" : "sslldd00933aaas"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `404` <br>\n\n**Error Code:** `1001`<br>\nUser not exist.<br>\nUser {userId} does not exist or does not belong to this account.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` <br>\n\n**Error Code:** `1001`<br>\nUser not exist.<br>\nUser {userId} does not exist or does not belong to this account." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/vanity_name" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Check a user's PM room",
        "description" : "A personal meeting room is a virtual meeting room that can be permanently assigned to a user.\nUse this API to check if a personal meeting room with the given name exists or not.<br><br>\n**Scopes:** `user:read:admin` `user:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` ",
        "operationId" : "checkAUserSPmRoom",
        "parameters" : [ {
          "name" : "vanity_name",
          "in" : "query",
          "description" : "(Required) Personal meeting room name.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nSuccess.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_55"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nSuccess." : {
                    "value" : {
                      "existed" : true
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>Vanity name is required.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>Vanity name is required." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}" : {
      "get" : {
        "tags" : [ "users", "{user Id}" ],
        "summary" : "Get a user",
        "description" : "A Zoom account can have one or more users. Use this API to view information of a specific user on a Zoom account.<br><br>\n**Scopes:** `user:read:admin` `user:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n<p style=\"background-color:#e1f5fe; color:#000000; padding:8px\"> <b>Note:</b> Users who have not activated their account have a status of <i>pending</i>, and the <i>created_at</i> time displays the time the API call was made.</p>",
        "operationId" : "getAUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "login_type",
          "in" : "query",
          "description" : "`0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "1"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200` **OK**<br>\nUser object returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_56"
                },
                "examples" : {
                  "**HTTP Status Code:** `200` **OK**<br>\nUser object returned." : {
                    "value" : {
                      "account_id" : "EAAAAAbbbbbCCCCHMA",
                      "created_at" : "2018-11-15T01:10:08Z",
                      "custom_attributes" : [ {
                        "key" : "cb3674544gexq",
                        "name" : "Country of Citizenship",
                        "value" : "Nepal"
                      } ],
                      "dept" : "",
                      "email" : "harryg@dfkjdslfjkdsfjkdsf.fsdfdfd",
                      "first_name" : "Harry",
                      "group_ids" : [ ],
                      "host_key" : "0000",
                      "id" : "z8dsdsdsdsdCfp8uQ",
                      "im_group_ids" : [ "CcSAAAAAAABBBVoQ" ],
                      "jid" : "hghghfghdfghdfhgh@xmpp.zoom.us",
                      "language" : "en-US",
                      "last_client_version" : "4.4.55383.0716(android)",
                      "last_login_time" : "2019-09-13T21:08:52Z",
                      "last_name" : "Grande",
                      "manager" : "name@example.com",
                      "personal_meeting_url" : "https://zoom.us/j/6352635623323434343443",
                      "phone_country" : "USA",
                      "phone_number" : "00000000",
                      "pic_url" : "https://lh4.googleusercontent.com/-hsgfhdgsfghdsfghfd-photo.jpg",
                      "pmi" : 100000000,
                      "role_id" : "hdsfwyteg3675hgfs",
                      "role_name" : "Owner",
                      "status" : "active",
                      "timezone" : "America/Los_Angeles",
                      "type" : 2,
                      "use_pmi" : false,
                      "verified" : 1
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br>\nBad request<br>\n**Error Code:** `1120`<br>\nA valid invitation to join the Zoom account was not found for this user. <br>\nThis error is thrown if you added a user in your account but the user did not accept t",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br>\nBad request<br>\n**Error Code:** `1120`<br>\nA valid invitation to join the Zoom account was not found for this user. <br>\nThis error is thrown if you added a user in your account but the user did not accept t" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "users", "{user Id}" ],
        "summary" : "Delete a user",
        "description" : "Deleting a user permanently removes the user and their data from Zoom. Users can create a new Zoom account using the same email address. An account owner or an account admin can transfer meetings, webinars and cloud recordings to another Zoom user account before deleting.<br><br>\n\nThis API disassociates (unlinks) a user from the associated Zoom account and provides the user their own basic free Zoom account, and the user can purchase their own licenses. You can transfer the user's data (meetings, webinars and cloud recordings) to another user before disassociation.<br> To permanently delete a user, specify \"delete\" as the value of the `action` query parameter.\n**Scopes:** `user:write:admin` `user:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId" : "deleteAUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "action",
          "in" : "query",
          "description" : "Delete action options:<br>`disassociate` - Disassociate a user.<br>`delete`-  Permanently delete a user.<br>Note: To delete pending user in the account, use `disassociate`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "disassociate"
          }
        }, {
          "name" : "transfer_email",
          "in" : "query",
          "description" : "Transfer email.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "transfer_meeting",
          "in" : "query",
          "description" : "Transfer meeting.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "true"
          }
        }, {
          "name" : "transfer_webinar",
          "in" : "query",
          "description" : "Transfer webinar.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "true"
          }
        }, {
          "name" : "transfer_recording",
          "in" : "query",
          "description" : "Transfer recording.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "true"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nUser deleted.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nUser deleted." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300`<br>The transfer-to email address cannot be the same as the unlinked or deleted user’s email address.<br> Unable to unlink API user(s).<br><br>\n**Error Code:** `200`<br>Cannot delet",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300`<br>The transfer-to email address cannot be the same as the unlinked or deleted user’s email address.<br> Unable to unlink API user(s).<br><br>\n**Error Code:** `200`<br>Cannot delet" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "users", "{user Id}" ],
        "summary" : "Update a user",
        "description" : "Update information on a user's Zoom [profile](https://support.zoom.us/hc/en-us/articles/201363203-My-Profile).<br><br>\n**Scopes:** `user:write:admin` `user:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId" : "updateAUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "login_type",
          "in" : "query",
          "description" : "`0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "1"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204` <br> \nUser updated.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204` <br> \nUser updated." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>A Zoom Room user cannot be updated to a free user type: $userId<br><br>\n**Error Code:**`300`<br> Your request could not be completed because the name contains an invalid word: {n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>A Zoom Room user cannot be updated to a free user type: $userId<br><br>\n**Error Code:**`300`<br> Your request could not be completed because the name contains an invalid word: {n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/assistants" : {
      "get" : {
        "tags" : [ "users", "{user Id}", "assistants" ],
        "summary" : "List user assistants",
        "description" : "List a user's assistants.\n\nAssistants are the users to whom the current user has assigned [scheduling privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege). These assistants can schedule meeting on behalf of the current user as well as manage and act as an alternative host for all meetings if the admin has enabled [Co-host option](https://zoom.us/account/setting) on the account.<br><br>\n**Prerequisites**: <br>\n* Current user as well as the assistant must have Licensed or an On-prem license.\n* Assistants must be under the current user's account.<br>\n**Scopes**: `user:read:admin` `user:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId" : "listUserAssistants",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nSuccess.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_57"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nSuccess." : {
                    "value" : {
                      "assistants" : [ {
                        "email" : "sfhdfkjdf@hjdsf.fdjf",
                        "id" : "ddgdfgfdgfgg"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "users", "{user Id}", "assistants" ],
        "summary" : "Add assistants",
        "description" : "Assistants are the users to whom the current user has assigned [scheduling privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege). These assistants can schedule meeting on behalf of the current user as well as manage and act as an alternative host for all meetings if the admin has enabled [Co-host option](https://zoom.us/account/setting) on the account.<br>Use this API to assign assistants to a user. <br> In the request body, provide either the User ID or the email address of the user.<br><br>\n**Prerequisite**: \n* The user as well as the assistant must have Licensed or an On-prem license.\n* Assistants must be under the current user's account.<br>\n**Scopes**: `user:write:admin` `user:write`\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n ",
        "operationId" : "addAssistants",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Code:** `201`<br>\nAssistant added.",
            "headers" : {
              "Content-Location" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "ipsum officia"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_11"
                },
                "examples" : {
                  "**HTTP Status Code:** `201`<br>\nAssistant added." : {
                    "value" : {
                      "add_at" : "string [date-time]",
                      "ids" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nCurrent account must be paid account: $userId <br>\nThe user must either be a Licensed user or an On-prem user : $userId. <br>\nCan't assign scheduling privilege to yourself.<br>\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nCurrent account must be paid account: $userId <br>\nThe user must either be a Licensed user or an On-prem user : $userId. <br>\nCan't assign scheduling privilege to yourself.<br>\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "users", "{user Id}", "assistants" ],
        "summary" : "Delete user assistants",
        "description" : "Delete all assistants of the current user.<br> Assistants are the users to whom the current user has assigned [scheduling privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege). These assistants can schedule meeting on behalf of the current user as well as manage and act as an alternative host for all meetings if the admin has enabled [Co-host option](https://zoom.us/account/setting) on the account.<br>\n**Prerequisite**: \n* The user as well as the assistant must have Licensed or an On-prem license.\n* Assistants must be under the current user's account.<br>\n**Scopes**: `user:write:admin` `user:write`\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId" : "deleteUserAssistants",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204` **No Content**<br>\nAssistants deleted.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204` **No Content**<br>\nAssistants deleted." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/assistants/{assistantId}" : {
      "delete" : {
        "tags" : [ "users", "{user Id}", "assistants" ],
        "summary" : "Delete a user assistant",
        "description" : "Delete a specific assistant of a user.\nAssistants are the users to whom the current user has assigned [scheduling privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege). These assistants can schedule meeting on behalf of the current user as well as manage and act as an alternative host for all meetings if the admin has enabled [Co-host option](https://zoom.us/account/setting) on the account.<br><br>\n**Prerequisites**: \n* The user as well as the assistant must have Licensed or an On-prem license.\n* Assistants must be under the current user's account.<br>\n**Scopes**: `user:write:admin` `user:write`\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId" : "deleteAUserAssistant",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "assistantId",
          "in" : "path",
          "description" : "(Required) Assistant ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204` **OK**<br>\nAssistant deleted.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204` **OK**<br>\nAssistant deleted." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/email" : {
      "put" : {
        "tags" : [ "users", "{user Id}" ],
        "summary" : "Update a user's email",
        "description" : "Change a user's [email address](https://support.zoom.us/hc/en-us/articles/201362563-How-Do-I-Change-the-Email-on-My-Account-) on a Zoom account that has managed domain set up.<br>If the Zoom Account in which the user belongs, has multiple [managed domains](https://support.zoom.us/hc/en-us/articles/203395207-What-is-Managed-Domain-), the email to be updated must match one of the managed domains.<br>\n**Scopes:** `user:write:admin` `user:write`<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n>  Note: A user's email address can only be changed for a maximum of 3 times in a day(24 hours).\n**Prerequisite:**<br>\n* Managed domain must be enabled in the account.\n* The new email address should not already exist in Zoom.",
        "operationId" : "updateAUserSEmail",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204` **No Content**<br>\nEmail updated.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204` **No Content**<br>\nEmail updated." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\n<br>**Error Code:** `1001`<br>\nUser does not exist: $email.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\n<br>**Error Code:** `1001`<br>\nUser does not exist: $email.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/meeting_templates" : {
      "get" : {
        "tags" : [ "users", "{user Id}" ],
        "summary" : "List meeting templates",
        "description" : "Use this API to list [meeting templates](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates) that are available to be used by a user.\n\n**Scope:** `meeting:read` or `meeting:read:admin`\n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n",
        "operationId" : "listMeetingTemplates",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) Unique identifier of the user. Retrieve the value of this field by calling the [List users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200` **OK** <br>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_58"
                },
                "examples" : {
                  "**HTTP Status Code:** `200` **OK** <br>" : {
                    "value" : {
                      "templates" : [ {
                        "id" : "AdxbhxCzKgSiWAw",
                        "name" : "My meeting template",
                        "type" : 1
                      }, {
                        "id" : "eYshgdftw4-5_MUSQ",
                        "name" : "Zoom meeting template for daily sync",
                        "type" : 2
                      } ],
                      "total_records" : 2
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `1001`<br> User not exist: {userId}.<br>\nUser {userId} does not exist or does not belong to this account.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `1001`<br> User not exist: {userId}.<br>\nUser {userId} does not exist or does not belong to this account." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/meetings" : {
      "get" : {
        "tags" : [ "users", "{user Id}", "meetings" ],
        "summary" : "List meetings",
        "description" : "List all the meetings that were scheduled for a user (meeting host). This API only supports scheduled meetings and thus, details on instant meetings are not returned via this API.<br><br>\n**Scopes:** `meeting:read:admin` `meeting:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId" : "listMeetings",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The meeting types: <br>`scheduled` - This includes all valid past meetings (unexpired), live meetings and upcoming scheduled meetings. It is equivalent to the combined list of \"Previous Meetings\" and \"Upcoming Meetings\" displayed in the user's [Meetings page](https://zoom.us/meeting) on the Zoom Web Portal.<br>`live` - All the ongoing meetings.<br>`upcoming` - All upcoming meetings including live meetings.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "live"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "page_number",
          "in" : "query",
          "description" : "The page number of the current page in the returned records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nList of meeting objects returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_59"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nList of meeting objects returned." : {
                    "value" : {
                      "meetings" : [ {
                        "created_at" : "2019-08-16T01:13:12Z",
                        "duration" : 30,
                        "host_id" : "abckjdfhsdkjf",
                        "id" : 11111,
                        "join_url" : "https://zoom.us/j/11111",
                        "start_time" : "2019-08-16T02:00:00Z",
                        "timezone" : "America/Los_Angeles",
                        "topic" : "Zoom Meeting",
                        "type" : 2,
                        "uuid" : "mlghmfghlBBB"
                      }, {
                        "agenda" : "RegistrationDeniedTest",
                        "created_at" : "2019-08-16T18:30:46Z",
                        "duration" : 60,
                        "host_id" : "abckjdfhsdkjf",
                        "id" : 2222,
                        "join_url" : "https://zoom.us/j/2222",
                        "start_time" : "2019-08-16T19:00:00Z",
                        "timezone" : "America/Los_Angeles",
                        "topic" : "TestMeeting",
                        "type" : 2,
                        "uuid" : "J8H8eavweUcd321=="
                      }, {
                        "created_at" : "2019-08-16T21:15:56Z",
                        "duration" : 60,
                        "host_id" : "abckjdfhsdkjf",
                        "id" : 33333,
                        "join_url" : "https://zoom.us/j/33333",
                        "start_time" : "2019-08-16T22:00:00Z",
                        "timezone" : "America/Los_Angeles",
                        "topic" : "My Meeting",
                        "type" : 2,
                        "uuid" : "SGVTAcfSfCbbbb"
                      }, {
                        "created_at" : "2019-08-29T17:32:33Z",
                        "duration" : 60,
                        "host_id" : "abckjdfhsdkjf",
                        "id" : 44444,
                        "join_url" : "https://zoom.us/j/4444",
                        "start_time" : "2019-08-29T18:00:00Z",
                        "timezone" : "America/Los_Angeles",
                        "topic" : "MyTestPollMeeting",
                        "type" : 2,
                        "uuid" : "64123avdfsMVA=="
                      } ],
                      "page_count" : 1,
                      "page_number" : 1,
                      "page_size" : 30,
                      "total_records" : 4
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nUser ID not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nUser ID not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "users", "{user Id}", "meetings" ],
        "summary" : "Create a meeting",
        "description" : "[Create a meeting](https://support.zoom.us/hc/en-us/articles/201362413-Scheduling-meetings) for a user. <br>This API has a daily rate limit of 100 requests per day. Therefore, only 100 **Create a Meeting** API requests are permitted within a 24 hour window for a user.<br>\n\n<aside>The <code>start_url</code> of a meeting is a URL using which a host or an alternative host can start a meeting. The expiration time for the <code>start_url</code> field is two hours for all regular users. \n\t\nFor custCreate meeting hosts( i.e., users created using the <code>custCreate</code> option via the [Create Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate) API), the expiration time of the <code>start_url</code> field is 90 days from the generation of the <code>start_url</code>.\n\t\nFor security reasons, the recommended way to retrieve the updated value for the <code>start_url</code> field programmatically (after expiry) is by calling the [Retrieve a Meeting API](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meeting) and referring to the value of the <code>start_url</code> field in the response.</aside><br><br>\nScopes: `meeting:write:admin` `meeting:write`\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId" : "createAMeeting",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Code:** `201`<br>\nMeeting created.",
            "headers" : {
              "Content-Location" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "ipsum officia"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_12"
                },
                "examples" : {
                  "**HTTP Status Code:** `201`<br>\nMeeting created." : {
                    "value" : {
                      "created_at" : "2019-09-05T16:54:14Z",
                      "duration" : 60,
                      "host_id" : "AbcDefGHi",
                      "id" : 1100000,
                      "join_url" : "https://zoom.us/j/1100000",
                      "settings" : {
                        "alternative_hosts" : "",
                        "approval_type" : 2,
                        "audio" : "both",
                        "auto_recording" : "local",
                        "breakout_room" : {
                          "enable" : false,
                          "host_video" : false,
                          "in_meeting" : false,
                          "join_before_host" : true,
                          "mute_upon_entry" : false,
                          "participant_video" : false,
                          "registrants_confirmation_email" : true,
                          "registrants_email_notification" : true,
                          "rooms" : [ {
                            "name" : "room1",
                            "participants" : [ "james.user01@somemail1234.com", "james.user02@somemail1234.com" ]
                          }, {
                            "name" : "room2",
                            "participants" : [ "james.user03@somemail1234.com" ]
                          } ],
                          "use_pmi" : false,
                          "waiting_room" : false,
                          "watermark" : false
                        },
                        "close_registration" : false,
                        "cn_meeting" : false,
                        "enforce_login" : false,
                        "enforce_login_domains" : "",
                        "global_dial_in_countries" : [ "US" ],
                        "global_dial_in_numbers" : [ {
                          "city" : "New York",
                          "country" : "US",
                          "country_name" : "US",
                          "number" : "+1 1000200200",
                          "type" : "toll"
                        }, {
                          "city" : "San Jose",
                          "country" : "US",
                          "country_name" : "US",
                          "number" : "+1 6699006833",
                          "type" : "toll"
                        }, {
                          "city" : "San Jose",
                          "country" : "US",
                          "country_name" : "US",
                          "number" : "+1 408000000",
                          "type" : "toll"
                        } ],
                        "start_time" : "2019-08-30T22:00:00Z",
                        "start_url" : "https://zoom.us/s/1100000?iIifQ.wfY2ldlb82SWo3TsR77lBiJjR53TNeFUiKbLyCvZZjw",
                        "status" : "waiting",
                        "timezone" : "America/New_York",
                        "topic" : "API Test",
                        "type" : 2,
                        "uuid" : "ng1MzyWNQaObxcf3+Gfm6A=="
                      }
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**HTTP Status Code:** `300`<br>\nInvalid enforce_login_domains, separate multiple domains by semicolon.<br>\nA maximum of {rateLimitNumber} meetings can be created/updated for a single user in one day.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `300`<br>\nInvalid enforce_login_domains, separate multiple domains by semicolon.<br>\nA maximum of {rateLimitNumber} meetings can be created/updated for a single user in one day.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\nUser not found.<br>\n\n**Error Code:** `1001`<br> User {userId} not exist or not belong to this account.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\nUser not found.<br>\n\n**Error Code:** `1001`<br> User {userId} not exist or not belong to this account.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/pac" : {
      "get" : {
        "tags" : [ "users", "{user Id}" ],
        "summary" : "List a user's PAC accounts",
        "description" : "[Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC) allows Pro or higher account holders to host meetings through PSTN (phone dial-in) only.<br>Use this API to list a user's PAC accounts.<br><br>\n**Scopes:** `pac:read:admin` `pac:read`<br>\n<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites:**<br>\n* A Pro or higher plan with [Premium Audio Conferencing](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) add-on.\n* Personal Audio Conference must be enabled in the user's profile.",
        "operationId" : "listAUserSPacAccounts",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200` **OK**<br>\nPAC account list returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_60"
                },
                "examples" : {
                  "**HTTP Status Code:** `200` **OK**<br>\nPAC account list returned." : {
                    "value" : {
                      "pac_accounts" : [ {
                        "conference_id" : "111111",
                        "dedicated_dial_in_number" : [ {
                          "country" : "USA",
                          "number" : "123343434"
                        } ],
                        "global_dial_in_numbers" : [ {
                          "country" : "USA",
                          "number" : "434343434"
                        } ],
                        "listen_only_password" : "hkgk",
                        "participant_password" : "ghdf"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2024`<br>\nUser does not have PAC enabled.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2024`<br>\nUser does not have PAC enabled.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/password" : {
      "put" : {
        "tags" : [ "users", "{user Id}" ],
        "summary" : "Update a user's password",
        "description" : "Update the [password](https://support.zoom.us/hc/en-us/articles/206344385-Change-a-User-s-Password) of a user using which the user can login to Zoom.<br> After this request is processed successfully, an email notification will be sent to the user stating that the password was changed.<br>\n**Scopes:** `user:write:admin` `user:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n**Prerequisites:**<br>\n* Owner or admin of the Zoom account.",
        "operationId" : "updateAUserSPassword",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204` **OK**<br>\nPassword updated.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204` **OK**<br>\nPassword updated." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300` <br>Your new password can not match the old password.<br>This password cannot be changed because it has already been changed the maximum number of times over the past 24 hours.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300` <br>Your new password can not match the old password.<br>This password cannot be changed because it has already been changed the maximum number of times over the past 24 hours.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/permissions" : {
      "get" : {
        "tags" : [ "users", "{user Id}" ],
        "summary" : "Get user permissions",
        "description" : "Users can be assigned a set of permissions that allows them to access only the pages/information that a user needs to view or edit.<br>\n\nUse this API to get permissions that have been granted to the user.<br><br>\n**Scopes:** `user:read:admin` `user:read`<br>\n \n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId" : "getUserPermissions",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nUser permissions returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_61"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nUser permissions returned." : {
                    "value" : {
                      "permissions" : [ "IMGroups:Edit", "Security:Edit", "IMGroups:Read", "BillingSubscription:Edit", "SingleSignOn:Edit", "WebinarSetting:Edit", "Branding:Read", "UsageReport:Read", "BillingSubscription:Read", "CrossHybrid:Read", "UserActivitiesReport:Read", "Branding:Edit", "SingleSignOn:Read", "Security:Read", "Dashboard:Read", "AccountProfile:Read", "MarketPlace:Edit", "ZoomRooms:Edit", "PbxAdmin:Read", "Meeting:Edit", "IMChatHistory:Read", "RoomConnector:Read", "IMChatBot:Edit", "CrossHybrid:Edit", "AccountProfile:Edit", "RoomConnector:Edit", "Group:Edit", "BillingInformation:Edit", "LyncConnector:Edit", "LyncConnector:Read", "Integration:Read", "User:Edit", "BillingInformation:Read", "AccountSetting:Edit", "SubAccount:Read", "IMSetting:Read", "MeetingConnector:Read", "ThirdPartyConference:Read", "Meeting:Join", "CallInContacts:Read", "ZoomDevelopers:Read", "Recording:Read", "Role:Edit", "Recording:Edit", "DigitalSignage:Read", "ScheduleTrackingFields:Read", "ThirdPartyConference:Edit", "Group:Read", "AccountSetting:Read", "MeetingConnector:Edit", "Integration:Edit", "CallInContacts:Edit", "DigitalSignage:Edit", "MarketPlace:Read", "PbxAdmin:Edit", "ZoomRooms:Read", "MobileDeviceManagement:Read", "RecordingContent:Read", "User:Read", "ScheduleTrackingFields:Edit", "WebinarSetting:Read" ]
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/picture" : {
      "post" : {
        "tags" : [ "users", "{user Id}" ],
        "summary" : "Upload a user's profile picture",
        "description" : "Upload a user's profile picture.<br><br>\n\nProvide `multipart/form-data` as the value of the `content-type` header for this request. This API supports JPEG and PNG file formats.\n\n**Scopes:** `user:write:admin` `user:write`<br>\n \n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId" : "uploadAUserSProfilePicture",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Code:** `201`<br>Picture uploaded.",
            "headers" : {
              "Content-Location" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "ipsum officia"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `201`<br>Picture uploaded." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `300`<br>\nYour request was not accepted because the profile picture contains invalid or explicit content.<br>\n**Error Code:** `120`<br>\nFile is empty.<br>\nFile size cannot exceed 2M.<br>\nOnly",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `300`<br>\nYour request was not accepted because the profile picture contains invalid or explicit content.<br>\n**Error Code:** `120`<br>\nFile is empty.<br>\nFile size cannot exceed 2M.<br>\nOnly" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/presence_status" : {
      "put" : {
        "tags" : [ "users", "{user Id}" ],
        "summary" : "Update a user's presence status",
        "description" : "Users in the Zoom desktop client and mobile apps are assigned with a [presence status](https://support.zoom.us/hc/en-us/articles/360032554051-Status-Icons). The presence status informs users of their contact's availability. Users can also change their own presence status to be either \"Away\", \"Do not disturb\", or \"Available\".\n\nUse this API to update a user's presence status. A user's status can not be updated more than once per minute, i.e., you can only submit a maximum of 1 update request/minute for a single user.<br>Note that a user's presence status can not be updated using this API if the user is not logged in to the Zoom client.\n\n**Scopes:** `user:write`, `user:write:admin`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n\n\n",
        "operationId" : "updateAUserSPresenceStatus",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\n\nStatus updated succesfully.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : { }
                },
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\n\nStatus updated succesfully.\n" : {
                    "value" : { }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `5301`<br>\nRequest to update the presence status of this user failed.<br>\n**Error Code:** `5411`<br>\nUnauthorized request. You do not have permission to update the presence status of this use",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `5301`<br>\nRequest to update the presence status of this user failed.<br>\n**Error Code:** `5411`<br>\nUnauthorized request. You do not have permission to update the presence status of this use" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.\n\n\n\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.\n\n\n\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "**HTTP Status Code:** `429` **Too Many Requests**<br>\nToo many requests submitted to update the presence status of this user. Please wait for the request to be processed and try again later.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `429` **Too Many Requests**<br>\nToo many requests submitted to update the presence status of this user. Please wait for the request to be processed and try again later." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/recordings" : {
      "get" : {
        "tags" : [ "users", "{user Id}" ],
        "summary" : "List all recordings",
        "description" : "When a user records a meeting or a webinar by choosing the **Record to the Cloud** option, the video, audio, and chat text are recorded in the Zoom cloud. \n\nUse this API to list all [Cloud recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording) of a user.<br>\n> To access a user's password protected cloud recording, add an \"access_token\" parameter to the download URL and provide either the [JWT](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app) or the user's OAuth access token as the value of the \"access_token\" parameter. \n<br>\n\n**Scopes:** `recording:read:admin` `recording:read`  <br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n**Prerequisites:** \n* Pro or a higher plan.\n* Cloud Recording must be enabled on the user's account.",
        "operationId" : "listAllRecordings",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "mc",
          "in" : "query",
          "description" : "Query Metadata of Recording if an On-Premise Meeting Connector was used for the meeting.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "false"
          }
        }, {
          "name" : "trash",
          "in" : "query",
          "description" : "Query trash.\n`true`: List recordings from trash.<br> `false`: Do not list recordings from the trash.<br> The default value is `false`. If you set it to `true`, you can use the `trash_type` property to indicate the type of Cloud recording that you need to retrieve. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "false"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The start date in 'yyyy-mm-dd' UTC format for the date range for which you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. For example, if you make the API request on June 30, 2020, without providing the “from” and “to” parameters, by default the value of 'from' field will be “2020-06-30” and the value of the 'to' field will be “2020-07-01”. \n\n**Note**: The \"trash\" files cannot be filtered by date range and thus, the \"from\" and \"to\" fields should not be used for trash files.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "End date in 'yyyy-mm-dd' 'yyyy-mm-dd' UTC format. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{}"
          }
        }, {
          "name" : "trash_type",
          "in" : "query",
          "description" : "The type of Cloud recording that you would like to retrieve from the trash. The value can be one of the following:<br>\n    `meeting_recordings`: List all meeting recordings from the trash.<br>\n    `recording_file`: List all individual recording files from the trash. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "meeting_recordings"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nList of recording objects returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_62"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nList of recording objects returned." : {
                    "value" : {
                      "from" : { },
                      "meetings" : [ {
                        "account_id" : "AbcjxkfhdEEE",
                        "duration" : 1,
                        "host_id" : "z8dfkgABBBBBBBfp8uQ",
                        "id" : 1000000000000,
                        "recording_count" : 1,
                        "recording_files" : [ {
                          "download_url" : "https://api.zoom.us/recording/download/pfA2AvvvvvAnAzOibbbbELxl",
                          "file_size" : 10098,
                          "file_type" : "M4A",
                          "id" : "589ABBBBB-8718e",
                          "meeting_id" : "gkABCDEnCkPuA==",
                          "play_url" : "https://api.zoom.us/recording/play/pfA2AvvvvvAnAzOibbbbELxl",
                          "recording_end" : "2019-08-29T21:55:24Z",
                          "recording_start" : "2019-08-29T21:54:55Z",
                          "recording_type" : "audio_only",
                          "status" : "completed"
                        }, {
                          "download_url" : "https://api.zoom.us/recording/download/cc33ekldfdjfhf3-aaaaa",
                          "file_type" : "TIMELINE",
                          "meeting_id" : "gkABCDEnCkPuA==",
                          "recording_end" : "2019-08-29T21:55:24Z",
                          "recording_start" : "2019-08-29T21:54:55Z"
                        }, {
                          "download_url" : "https://api.zoom.us/recording/download/abcdkjfhdhfdhfj",
                          "file_size" : 37285,
                          "file_type" : "MP4",
                          "id" : "96119b=kdfhf791",
                          "meeting_id" : "gkABCDEnCkPuA==",
                          "play_url" : "https://api.zoom.us/recording/play/abcdkjfhdhfdhfj",
                          "recording_end" : "2019-08-29T21:55:24Z",
                          "recording_start" : "2019-08-29T21:54:55Z",
                          "recording_type" : "shared_screen_with_speaker_view",
                          "status" : "completed"
                        } ],
                        "share_url" : "https://api.zoom.us/recording/share/IABCDJDKDJEEEEEk_GwfdggdgkTziMw",
                        "start_time" : "2019-08-29T21:54:49Z",
                        "timezone" : "America/Los_Angeles",
                        "topic" : "MyTestPollMeeting",
                        "total_size" : 47383,
                        "type" : 2,
                        "uuid" : "gkABCDEnCkPuA=="
                      } ],
                      "next_page_token" : "",
                      "page_count" : 1,
                      "page_size" : 30,
                      "to" : { },
                      "total_records" : 1
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/schedulers" : {
      "get" : {
        "tags" : [ "users", "{user Id}", "schedulers" ],
        "summary" : "List user schedulers",
        "description" : "List all the schedulers of a user. Schedulers in this context are the users for whom the current user can schedule meetings for.\n\nFor instance, if the current user (i.e., the user whose userId was passed in the path parameter of this API call) is user A, the response of this API will contain a list of user(s), for whom user A can schedule and manage meetings. User A is the assistant of these users and thus has scheduling privilege for these user(s). \n\n**Prerequisites**:\n* Current user must be under the same account as the scheduler.<br>\n**Scopes**: `user:read:admin` `user:read`\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId" : "listUserSchedulers",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>Successfully listed all schedulers of the user.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_63"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>Successfully listed all schedulers of the user." : {
                    "value" : {
                      "schedulers" : [ {
                        "email" : "sjfgduyfghdfg@myemail.dshdgshfd",
                        "id" : "abXXXsfsidfhjdsfhd768944"
                      }, {
                        "email" : "sdhfefghdfg@myemail.dshdgshfd",
                        "id" : "abXXbbbbioepur8944"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "users", "{user Id}", "schedulers" ],
        "summary" : "Delete user schedulers",
        "description" : "Delete all of a user's schedulers. Schedulers are users on whose behalf the current user (assistant) can schedule meetings for. By calling this API, the current user will no longer be a scheduling assistant of any user. \n\n**Prerequisite**: Current user (assistant) must be under the same account as the scheduler.<br>\n**Scopes**: `user:write:admin` `user:write`\n \n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId" : "deleteUserSchedulers",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br> All schedulers deleted.\n",
            "content" : {
              "application/octet-stream" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br> All schedulers deleted.\n" : {
                    "value" : "\"\""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/schedulers/{schedulerId}" : {
      "delete" : {
        "tags" : [ "users", "{user Id}", "schedulers" ],
        "summary" : "Delete a scheduler",
        "description" : "Delete a Scheduler.\n\nSchedulers are users on whose behalf the current user (assistant) can schedule meetings for. By calling this API, the current user will no longer be a scheduling assistant of this scheduler. \n\n**Prerequisite**: Current user must be under the same account as the scheduler.<br>\n**Scopes**: `user:write:admin` `user:write`\n \n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId" : "deleteAScheduler",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "schedulerId",
          "in" : "path",
          "description" : "(Required) Scheduler's ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nScheduler deleted.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nScheduler deleted." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/settings" : {
      "get" : {
        "tags" : [ "users", "{user Id}", "settings1" ],
        "summary" : "Get user settings",
        "description" : "Retrieve a user's settings.<br><br>\n**Scopes:** `user:read:admin` `user:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId" : "getUserSettings",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "login_type",
          "in" : "query",
          "description" : "`0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "1"
          }
        }, {
          "name" : "option",
          "in" : "query",
          "description" : "`meeting_authentication`: Use this query parameter to view [meeting authentication configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied on the user's account.<br>`recording_authentication`: Use this query parameter to view [recording authentication configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied on the user's account.<br>\n`meeting_security`: Use this query parameter to view meeting security settings applied on the user's account.<br>",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "meeting_authentication"
          }
        }, {
          "name" : "custom_query_fields",
          "in" : "query",
          "description" : "Provide the name of the field by which you would like to filter the response. For example, if you provide \"host_video\" as the value of this field, you will get a response similar to the following:<br>\n{\n    \"schedule_meeting\": {\n        \"host_video\": false\n    }\n}\n<br>You can provide multiple values by separating them with commas(example: \"host_video,participant_video”).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nUser settings returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_64"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nUser settings returned." : {
                    "value" : {
                      "email_notification" : {
                        "alternative_host_reminder" : false,
                        "cancel_meeting_reminder" : false,
                        "jbh_reminder" : false,
                        "schedule_for_reminder" : false
                      },
                      "feature" : {
                        "cn_meeting" : true,
                        "in_meeting" : false,
                        "large_meeting" : false,
                        "meeting_capacity" : 100,
                        "webinar" : false,
                        "zoom_phone" : false
                      },
                      "in_meeting" : {
                        "allow_live_streaming" : false,
                        "annotation" : true,
                        "attendee_on_hold" : false,
                        "auto_saving_chat" : false,
                        "breakout_room" : false,
                        "chat" : true,
                        "closed_caption" : true,
                        "co_host" : false,
                        "custom_data_center_regions" : true,
                        "data_center_regions" : [ "AU", "CN", "EU", "HK", "LA", "TY", "US" ],
                        "e2e_encryption" : false,
                        "entry_exit_chime" : "all",
                        "far_end_camera_control" : false,
                        "feedback" : true,
                        "group_hd" : false,
                        "non_verbal_feedback" : false,
                        "polling" : true,
                        "private_chat" : true,
                        "record_play_voice" : false,
                        "remote_control" : true,
                        "remote_support" : false,
                        "show_meeting_control_toolbar" : false,
                        "virtual_background" : true,
                        "waiting_room" : false
                      },
                      "recording" : {
                        "auto_delete_cmr" : false,
                        "auto_recording" : "none",
                        "cloud_recording" : true,
                        "local_recording" : true,
                        "record_audio_file" : true,
                        "record_gallery_view" : false,
                        "record_speaker_view" : true,
                        "recording_audio_transcript" : true,
                        "recording_password_requirement" : {
                          "have_letter" : true,
                          "have_number" : true,
                          "have_special_character" : true,
                          "length" : 8,
                          "only_allow_numeric" : false
                        },
                        "save_chat_text" : true,
                        "show_timestamp" : false
                      },
                      "schedule_meeting" : {
                        "audio_type" : "both",
                        "embed_password_in_join_link" : false,
                        "force_pmi_jbh_password" : true,
                        "host_video" : true,
                        "join_before_host" : false,
                        "meeting_password_requirement" : {
                          "have_letter" : true,
                          "have_number" : false,
                          "have_special_character" : false,
                          "length" : 6,
                          "only_allow_numeric" : false
                        },
                        "not_store_meeting_topic" : false,
                        "participants_video" : false,
                        "pmi_password" : "98654",
                        "pstn_password_protected" : false,
                        "require_password_for_pmi_meetings" : "all",
                        "require_password_for_scheduling_new_meetings" : false,
                        "use_pmi_for_instant_meetings" : true,
                        "use_pmi_for_scheduled_meetings" : false
                      },
                      "telephony" : {
                        "audio_conference_info" : "",
                        "show_international_numbers_link" : false,
                        "third_party_audio" : false
                      },
                      "tsp" : {
                        "call_out" : true,
                        "call_out_countries" : [ "USA" ],
                        "show_international_numbers_link" : false
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `1120`<br>\nA valid invitation to join the Zoom account was not found for this user. <br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation o",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `1120`<br>\nA valid invitation to join the Zoom account was not found for this user. <br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation o" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "users", "{user Id}", "settings1" ],
        "summary" : "Update user settings",
        "description" : "Update a user's settings.<br><br>\n**Scopes:** `user:write:admin` `user:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId" : "updateUserSettings",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "option",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "meeting_authentication"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `200`<br>\nUser settings updated",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nUser settings updated" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code:** `1108`<br> Only Licensed or On-prem users can enable the large meeting feature.<br><br>\n**Error Code:** `1120`<br> A valid invitation to join the Zoom account was not found for this user",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code:** `1108`<br> Only Licensed or On-prem users can enable the large meeting feature.<br><br>\n**Error Code:** `1120`<br> A valid invitation to join the Zoom account was not found for this user" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/settings/virtual_backgrounds" : {
      "post" : {
        "tags" : [ "users", "{user Id}", "settings1", "virtual backgrounds1" ],
        "summary" : "Upload virtual background files",
        "description" : "Use this API to [upload virtual background files](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background) for a user. \n\n**Prerequisites:**<br>\n* Virtual background feature must be [enabled](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7) on the account.\n<br> **Scope:** `user:write:admin`\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n\n",
        "operationId" : "uploadVirtualBackgroundFiles1",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) Unique identifier of the user. Retrieve the value of this field by calling the [List users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API. ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Code:** `201` **Created** <br>\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_3"
                },
                "examples" : {
                  "**HTTP Status Code:** `201` **Created** <br>\n" : {
                    "value" : {
                      "id" : "_Tcj7354w6eHw",
                      "is_default" : false,
                      "name" : "u=mdbhhfg3y7&fm=2fdjs0.jpg",
                      "size" : 53434,
                      "type" : "image"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `120`<br>\nNo file uploaded, verify that a file has been uploaded.<br>\nFile size cannot exceed 15M.<br>\nA maximum of 10 files are allowed for a user.<br>\nOnly jpg/jpeg, gif or png image file ",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `120`<br>\nNo file uploaded, verify that a file has been uploaded.<br>\nFile size cannot exceed 15M.<br>\nA maximum of 10 files are allowed for a user.<br>\nOnly jpg/jpeg, gif or png image file " : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found** <br>\nGroup not found.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found** <br>\nGroup not found." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "users", "{user Id}", "settings1", "virtual backgrounds1" ],
        "summary" : "Delete virtual background files",
        "description" : "Delete existing virtual background file(s) of a user. \n\n**Prerequisites:**<br>\n* Virtual background feature must be [enabled](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7) on the account.\n<br> **Scope:** `user:write:admin`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId" : "deleteVirtualBackgroundFiles1",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) Unique identifier of the user. Retrieve the value of this field by calling the [List users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API. ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "file_ids",
          "in" : "query",
          "description" : "Provide the id of the file that is to be deleted. To delete multiple files, provide comma separated values for this field.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204` **No Content** <br>\nDeleted.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204` **No Content** <br>\nDeleted.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad request** <br>\n**Error Code:** `300`<br>\nInvalid parameter: file_ids. <br>\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad request** <br>\n**Error Code:** `300`<br>\nInvalid parameter: file_ids. <br>\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `1001`<br>\nUser not exist.<br>\nUser {userId} does not exist or does not belong to this account.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `1001`<br>\nUser not exist.<br>\nUser {userId} does not exist or does not belong to this account.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/status" : {
      "put" : {
        "tags" : [ "users", "{user Id}" ],
        "summary" : "Update user status",
        "description" : "An account owner or admins can deactivate as well as activate a user in a Zoom account. Deactivating a user will remove all licenses associated with a user. It will prevent the deactivated user from logging into their Zoom account. A deactivated user can be reactivated. Reactivating a user grants the user access to login to their Zoom account.<br> Use this API to either [deactivate](https://support.zoom.us/hc/en-us/articles/115005269946-Remove-User-from-your-Account#h_6a9bc1c3-d739-4945-b1f2-00b3b88fb5cc) an active user or to [reactivate](https://support.zoom.us/hc/en-us/articles/115005269946-Remove-User-from-your-Account#h_16319724-d120-4be6-af5d-31582d134ea0) a deactivated user .<br><br>**Scopes:** `user:write:admin` `user:write`<br> \n\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId" : "updateUserStatus",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Untitled Example",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "Untitled Example" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nStatus updated.",
            "content" : {
              "application/octet-stream" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nStatus updated." : {
                    "value" : "\"\""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room and Admin users' status can not be activated or deactivated.<br><br>\n**Error Code:** `3412`<br>Your request to activate the user was not approved at this time because ",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room and Admin users' status can not be activated or deactivated.<br><br>\n**Error Code:** `3412`<br>Your request to activate the user was not approved at this time because " : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/token" : {
      "get" : {
        "tags" : [ "users", "{user Id}", "token" ],
        "summary" : "Get a user token",
        "description" : "Retrieve a user's token.<br><br> This token is used for starting meetings with the Client SDK.<br>\n**Scopes:** `user:read:admin` `user:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\nIf a user signed into Zoom using Google or Facebook, a null value will be returned for the token. To get the token with this API, ask the user to sign into Zoom using their email and password instead.",
        "operationId" : "getAUserToken",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "User token types:<br>`token` - Used for starting meetings with the client SDK. This token expires in 14 days and a new token will be returned after the expiry.<br>`zak` - Used for generating the start meeting URL. The token expiration time is two hours. For API users, the expiration time is 90 days.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "token"
          }
        }, {
          "name" : "ttl",
          "in" : "query",
          "description" : "Use this field in conjunction with the `type` field where the value of `type` field is `zak`. The value of this field denotes the expiry time of the `zak` token in seconds. For example, if you would like the zak token to be expired after one hour of the token generation, the value of this field should be `3600`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nToken returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_65"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nToken returned." : {
                    "value" : {
                      "token" : "string"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "users", "{user Id}", "token" ],
        "summary" : "Revoke a user's SSO token",
        "description" : "Revoke a user's SSO token.<br><br> After calling this API, the SSO user will be logged out of their current Zoom session.<br>\n**Scopes:** `user:write:admin` `user:write`\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId" : "revokeAUserSSsoToken",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nToken deleted.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nToken deleted." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/tsp" : {
      "get" : {
        "tags" : [ "users", "{user Id}", "tsp" ],
        "summary" : "List user's TSP accounts",
        "description" : "A user can have a maximum of two TSP accounts. Use this API to list all TSP accounts of a user.<br><br>\n**Scopes:** `tsp:read:admin` `tsp:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId" : "listUserSTspAccounts",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200` **OK**<br>\nTSP account list returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_66"
                },
                "examples" : {
                  "**HTTP Status Code:** `200` **OK**<br>\nTSP account list returned successfully." : {
                    "value" : {
                      "tsp_accounts" : [ {
                        "conference_code" : "0125",
                        "dial_in_numbers" : [ {
                          "code" : "01",
                          "number" : "000000000",
                          "type" : "toll"
                        } ],
                        "id" : 111222222,
                        "leader_pin" : "11189898",
                        "tsp_bridge" : "string"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `2024`<br>\nAccount has not enabled TSP.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `2024`<br>\nAccount has not enabled TSP.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in ",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in " : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "users", "{user Id}", "tsp" ],
        "summary" : "Add a user's TSP account",
        "description" : "Add a user's TSP account.<br><br>\n**Scopes:** `tsp:write:admin` `tsp:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n",
        "operationId" : "addAUserSTspAccount",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Code:** `201`<br>\nTSP account added.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_13"
                },
                "examples" : {
                  "**HTTP Status Code:** `201`<br>\nTSP account added." : {
                    "value" : {
                      "conference_code" : "0125",
                      "dial_in_numbers" : [ {
                        "code" : "01",
                        "number" : "000000000",
                        "type" : "toll"
                      } ],
                      "leader_pin" : "11189898",
                      "tsp_bridge" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad Request.<br>\n**Error Code:**`2024`<br>\nAccount has not enabled TSP.<br>\n**Error Code:**`300`<br>\nMedia link is required for AT&T TSP accounts.<br>\n**Error Code:** `300`<br>\nYou can add a max of two tsp configs.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad Request.<br>\n**Error Code:**`2024`<br>\nAccount has not enabled TSP.<br>\n**Error Code:**`300`<br>\nMedia link is required for AT&T TSP accounts.<br>\n**Error Code:** `300`<br>\nYou can add a max of two tsp configs.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in ",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in " : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/tsp/settings" : {
      "patch" : {
        "tags" : [ "users", "{user Id}", "tsp" ],
        "summary" : "Set global dial-in URL for a TSP user",
        "description" : "A global dial-in page can provide a list of global access numbers using which audio conferencing can be conducted. By calling this API, you can set the url for the global dial-in page of a user whose Zoom account has TSP and special TSP with third-party audio conferencing options enabled. <p></p>\n**Scopes:**`tsp:write:admin` `tsp:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n",
        "operationId" : "setGlobalDialInUrlForATspUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The userId or email address of the user.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**Status Code:** `204` **No Content** <br>\nURL set successfully.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Status Code:** `204` **No Content** <br>\nURL set successfully." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code**: `2000`<br>\nNot TSP special account.<br>\n\nThs error means that the account does not have special TSP privilege. Contact Zoom Developer Support for details.<br>\n**Error Code**: `2024`<br>\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code**: `2000`<br>\nNot TSP special account.<br>\n\nThs error means that the account does not have special TSP privilege. Contact Zoom Developer Support for details.<br>\n**Error Code**: `2024`<br>\n" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nUser ID not found.<br>\n**Error Code**: `1001`<br>\nUser {userId} not exist or not belong to this account.\n**Error Code**: `1120`<br>\nInvite not exist.\n\nThis error is thrown if you added a user in your account but the user di",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nUser ID not found.<br>\n**Error Code**: `1001`<br>\nUser {userId} not exist or not belong to this account.\n**Error Code**: `1120`<br>\nInvite not exist.\n\nThis error is thrown if you added a user in your account but the user di" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/tsp/{tspId}" : {
      "get" : {
        "tags" : [ "users", "{user Id}", "tsp", "{tsp Id}" ],
        "summary" : "Get a user's TSP account",
        "description" : "Each user can have a maximum of two TSP accounts. Use this API to retrieve details of a specific TSP account enabled for a specific user.<br><br>\n**Scopes:** `tsp:read:admin` `tsp:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n",
        "operationId" : "getAUserSTspAccount",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "tspId",
          "in" : "path",
          "description" : "(Required) TSP account ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "1"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nTSP account retrieved successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_67"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nTSP account retrieved successfully." : {
                    "value" : {
                      "conference_code" : "1275454",
                      "dial_in_numbers" : [ {
                        "code" : "675",
                        "number" : "00000000",
                        "type" : "toll"
                      } ],
                      "id" : "0123444444",
                      "leader_pin" : "111",
                      "tsp_bridge" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `300`<br>\nThe TSP id provided does not exist.<br>\n**Error Code:** `300`<br>\nTSP Config does not exist.<br>\n**Error Code:**`2024`<br>\nAccount has not enabled TSP.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `300`<br>\nThe TSP id provided does not exist.<br>\n**Error Code:** `300`<br>\nTSP Config does not exist.<br>\n**Error Code:**`2024`<br>\nAccount has not enabled TSP." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in ",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in " : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "users", "{user Id}", "tsp", "{tsp Id}" ],
        "summary" : "Delete a user's TSP account",
        "description" : "Delete a user's TSP account.<br><br>\n**Scopes:** `tsp:write:admin` `tsp:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n",
        "operationId" : "deleteAUserSTspAccount",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "tspId",
          "in" : "path",
          "description" : "(Required) TSP account ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "1"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**Status Code:** `204` **No Content**<br>\nTSP account deleted.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**Status Code:** `204` **No Content**<br>\nTSP account deleted." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:**`2024`<br>\nAccount not enable TSP.<br>\n**Error Code:** `300`<br>\nThe TSP id provided does not exist.<br>\n**Error Code:** `300`<br>\nTSP Config does not exist.<br>\n**Error Code:** `300`<br>\nAt ",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:**`2024`<br>\nAccount not enable TSP.<br>\n**Error Code:** `300`<br>\nThe TSP id provided does not exist.<br>\n**Error Code:** `300`<br>\nTSP Config does not exist.<br>\n**Error Code:** `300`<br>\nAt " : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in ",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in " : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "users", "{user Id}", "tsp", "{tsp Id}" ],
        "summary" : "Update a TSP account",
        "description" : "Update a user's TSP account.<br><br>\n**Scopes:** `tsp:write:admin` `tsp:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n",
        "operationId" : "updateATspAccount",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "tspId",
          "in" : "path",
          "description" : "(Required) TSP account ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "1"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:**`204` **No Content**<br>\nTSP account updated.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:**`204` **No Content**<br>\nTSP account updated." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:**`2024`<br>\nAccount has not enabled TSP.<br>\n**Error Code:**`300`<br>\nThe TSP id provided does not exist.<br>\n**Error Code:**`300`<br>\nTSP Config does not exist.<br>\n**Error Code:**`300`<br>\nA",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:**`2024`<br>\nAccount has not enabled TSP.<br>\n**Error Code:**`300`<br>\nThe TSP id provided does not exist.<br>\n**Error Code:**`300`<br>\nTSP Config does not exist.<br>\n**Error Code:**`300`<br>\nA" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in ",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in " : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/webinar_templates" : {
      "get" : {
        "tags" : [ "users", "{user Id}" ],
        "summary" : "List webinar templates",
        "description" : "When you schedule a webinar, you can save the settings for that webinar as a template for scheduling future webinars. <br><br>Use this API to list a user's existing [Webinar templates'](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates) information.\n\n**Prerequisites:**\n* Pro or a higher account with Webinar plan enabled.",
        "operationId" : "listWebinarTemplates",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200` **OK** <br>\nList of existing templates returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_68"
                },
                "examples" : {
                  "**HTTP Status Code:** `200` **OK** <br>\nList of existing templates returned." : {
                    "value" : {
                      "templates" : [ {
                        "id" : "ull6574eur",
                        "name" : "Weekly Meeting Template"
                      } ],
                      "total_records" : 1
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `200`<br> Cannot use webinar API, you need to subscribe webinar plan and then enable webinar for this user:{userId}.<br>\n**Error Code:** `1001`<br>\n* User not exist: {userId}.\n* User {userId",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `200`<br> Cannot use webinar API, you need to subscribe webinar plan and then enable webinar for this user:{userId}.<br>\n**Error Code:** `1001`<br>\n* User not exist: {userId}.\n* User {userId" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/webinars" : {
      "get" : {
        "tags" : [ "users", "{user Id}", "webinars" ],
        "summary" : "List webinars",
        "description" : "Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees.<br> Use this API to list all the webinars that are scheduled by or on-behalf a user (Webinar host).<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br> <br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n**Prerequisites:**\n* Pro or higher plan with a Webinar Add-on.",
        "operationId" : "listWebinars",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "page_number",
          "in" : "query",
          "description" : "\n**Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use \"next_page_token\" for pagination instead of this field.\n\nThe page number of the current page in the returned records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "1"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nList of webinar objects returned.",
            "content" : {
              "application/octet-stream" : {
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nList of webinar objects returned." : {
                    "value" : "\"{\\n  \\\"page_count\\\": \\\"1\\\",\\n  \\\"page_number\\\": \\\"1\\\",\\n  \\\"page_size\\\": \\\"30\\\",\\n  \\\"total_records\\\": \\\"1\\\",\\n  \\\"webinars\\\": [\\n    {\\n      \\\"uuid\\\": \\\"dsghfkhaewfds\\\",\\n      \\\"id\\\": 0001000,\\n      \\\"host_id\\\": \\\"24654130000000\\\",\\n      \\\"topic\\\": \\\"My Webinar\\\",\\n      \\\"agenda\\\": \\\"Learn more about Zoom APIs\\\",\\n      \\\"type\\\": \\\"5\\\",\\n      \\\"duration\\\": \\\"60\\\",\\n      \\\"start_time\\\": \\\"2019-09-24T22:00:00Z\\\",\\n      \\\"timezone\\\": \\\"America/Los_Angeles\\\",\\n      \\\"created_at\\\": \\\"2019-08-30T22:00:00Z\\\",\\n      \\\"join_url\\\": \\\"https://zoom.us/0001000/awesomewebinar\\\"\\n    }\\n  ]\\n}\""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account." : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "users", "{user Id}", "webinars" ],
        "summary" : "Create a webinar",
        "description" : "Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees.<br>Use this API to schedule a Webinar for a user (host).<br><br> \n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites:**\n* Pro or higher plan with a Webinar Add-on.",
        "operationId" : "createAWebinar",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "(Required) The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Code:** `201`<br>\nWebinar created.",
            "headers" : {
              "Content-Location" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "ipsum officia"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_14"
                },
                "examples" : {
                  "**HTTP Status Code:** `201`<br>\nWebinar created." : {
                    "value" : {
                      "agenda" : "string",
                      "created_at" : "string [date-time]",
                      "duration" : "integer",
                      "host_id" : "string",
                      "id" : "integer",
                      "join_url" : "string",
                      "occurrences" : [ {
                        "duration" : "integer",
                        "occurrence_id" : "integer",
                        "start_time" : "string [date-time]",
                        "status" : "string"
                      } ],
                      "settings" : {
                        "allow_multiple_devices" : "boolean",
                        "alternative_hosts" : "string",
                        "approval_type" : "integer",
                        "attendees_and_panelists_reminder_email_notification" : {
                          "enable" : "boolean",
                          "type" : "integer"
                        },
                        "audio" : "string",
                        "auto_recording" : "string",
                        "close_registration" : "boolean",
                        "email_language" : "string",
                        "enforce_login" : "boolean",
                        "enforce_login_domains" : "string",
                        "follow_up_absentees_email_notification" : {
                          "enable" : "boolean",
                          "type" : "integer"
                        },
                        "follow_up_attendees_email_notification" : {
                          "enable" : "boolean",
                          "type" : "integer"
                        },
                        "hd_video" : "boolean",
                        "host_video" : "boolean",
                        "panelists_invitation_email_notification" : "boolean",
                        "panelists_video" : "boolean",
                        "practice_session" : "boolean",
                        "registrants_confirmation_email" : "boolean",
                        "registrants_email_notification" : "boolean",
                        "registration_type" : "integer",
                        "show_share_button" : "boolean"
                      },
                      "start_time" : "string [date-time]",
                      "start_url" : "string",
                      "timezone" : "string",
                      "topic" : "string",
                      "type" : "integer",
                      "uuid" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`\nSubscription plan for webinar is missing. Enable webinar for this user once the subscription plan is added:{userId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`\nSubscription plan for webinar is missing. Enable webinar for this user once the subscription plan is added:{userId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webinars/{webinarId}" : {
      "get" : {
        "tags" : [ "webinars/{webinar Id}1" ],
        "summary" : "Get a webinar",
        "description" : "Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees.<br>Use this API to get details of a scheduled webinar.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>**Prerequisites:**\n* Pro or higher plan with a Webinar Add-on.",
        "operationId" : "getAWebinar",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "occurrence_id",
          "in" : "query",
          "description" : "Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences. When you create a recurring Webinar using [Create a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarcreate), you can retrieve the Occurrence ID from the response of the API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "show_previous_occurrences",
          "in" : "query",
          "description" : "Set the value of this field to `true` if you would like to view Webinar details of all previous occurrences of a recurring Webinar.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "true"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nSuccess",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_69"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nSuccess" : {
                    "value" : {
                      "created_at" : "2019-09-13T15:35:00Z",
                      "duration" : 60,
                      "host_id" : "Labcjskdfsjgfg",
                      "id" : 12345678,
                      "join_url" : "https://zoom.us/j/12345678",
                      "settings" : {
                        "allow_multiple_devices" : true,
                        "alternative_hosts" : "",
                        "approval_type" : 2,
                        "attendees_and_panelists_reminder_email_notification" : {
                          "enable" : true,
                          "type" : 1
                        },
                        "audio" : "both",
                        "auto_recording" : "local",
                        "close_registration" : true,
                        "contact_email" : "wonderfulemail@someemail.dsgfdjf",
                        "contact_name" : "Wonderful person",
                        "email_language" : "en-US",
                        "enforce_login" : false,
                        "enforce_login_domains" : "",
                        "follow_up_absentees_email_notification" : {
                          "enable" : true,
                          "type" : 1
                        },
                        "follow_up_attendees_email_notification" : {
                          "enable" : true,
                          "type" : 1
                        },
                        "global_dial_in_countries" : [ "US" ],
                        "global_dial_in_numbers" : [ {
                          "city" : "New York",
                          "country" : "US",
                          "country_name" : "US",
                          "number" : "+1 00000",
                          "type" : "toll"
                        }, {
                          "city" : "San Jose",
                          "country" : "US",
                          "country_name" : "US",
                          "number" : "+1 111111111",
                          "type" : "toll"
                        }, {
                          "city" : "San Jose",
                          "country" : "US",
                          "country_name" : "US",
                          "number" : "+1 11111110",
                          "type" : "toll"
                        } ],
                        "hd_video" : false,
                        "host_video" : false,
                        "on_demand" : false,
                        "panelists_invitation_email_notification" : true,
                        "panelists_video" : false,
                        "practice_session" : false,
                        "question_answer" : true,
                        "registrants_confirmation_email" : true,
                        "registrants_email_notification" : true,
                        "registrants_restrict_number" : 0,
                        "show_share_button" : true
                      },
                      "start_time" : "2019-08-30T22:00:00Z",
                      "start_url" : "https://zoom.us/s/00000011110?zhghTlUT1Rjd2FXRgh0amxoejNQZ1EiLCJjaWQiOiIifQ.NJ0CXWQ-yhI8Xv01JvxityBtzp3Bt7odMOEG2L8DLmY",
                      "timezone" : "America/New_York",
                      "topic" : "Test Webinar",
                      "type" : 5,
                      "uuid" : "nWMHAAAAAAAAAAAAAUDP1A=="
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**HTTP Status Code:** `300`<br>Invalid webinar ID.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `300`<br>Invalid webinar ID." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "webinars/{webinar Id}1" ],
        "summary" : "Delete a webinar",
        "description" : "Delete a Webinar.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites:**<br>\n* Pro or higher plan with a Webinar Add-on.",
        "operationId" : "deleteAWebinar",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "occurrence_id",
          "in" : "query",
          "description" : "The meeting occurrence ID.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "cancel_webinar_reminder",
          "in" : "query",
          "description" : "`true`: Notify panelists and registrants about the webinar cancellation via email. \n\n`false`: Do not send any email notification to webinar registrants and panelists. \n\nThe default value of this field is `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nSuccess",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nSuccess" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nWebinar deleted.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nWebinar deleted." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**HTTP Status Code:** `300`<br>Invalid webinar ID.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `300`<br>Invalid webinar ID." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3002`<br>\nSorry, you cannot delete this webinar since it is in progress.<br>\n**Error Code:** `3003`<br>\nYou a",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3002`<br>\nSorry, you cannot delete this webinar since it is in progress.<br>\n**Error Code:** `3003`<br>\nYou a" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "webinars/{webinar Id}1" ],
        "summary" : "Update a webinar",
        "description" : "Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees.<br>\nUse this API to make updates to a scheduled Webinar.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites:**<br>\n* Pro or higher plan with a Webinar Add-on.",
        "operationId" : "updateAWebinar",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "occurrence_id",
          "in" : "query",
          "description" : "Webinar occurrence id. Support change of agenda, start_time, duration, settings: {host_video, panelist_video, hd_video, watermark, auto_recording}",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nWebinar subscription plan is missing. Enable webinar for this user once the subscription is added:{userId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nWebinar subscription plan is missing. Enable webinar for this user once the subscription is added:{userId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nWebinar updated.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nWebinar updated." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**HTTP Status Code:** `300`<br>Invalid webinar Id.<br>\nInvalid recurrence settings.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `300`<br>Invalid webinar Id.<br>\nInvalid recurrence settings." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webinars/{webinarId}/batch_registrants" : {
      "post" : {
        "tags" : [ "webinars/{webinar Id}1" ],
        "summary" : "Perform batch registration",
        "description" : "Use this API to register up to 30 registrants at once for a scheduled webinar that requires [registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-webinar-with-registration). <br>\n\n**Prerequisites:**<br>\n* The webinar host must be a Licensed user.\n* The webinar should be of type `5`, i.e., it should be a scheduled webinar. Other types of webinars are not supported by this API.<br><br>\n**Scope:** `webinar:write`, `webinar:write:admin`<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>\n\n\n\n\n\n\n\n",
        "operationId" : "performBatchRegistration",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) Unique identifier of the webinar.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200` **OK** <br>\nRegistrants added.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_70"
                },
                "examples" : {
                  "**HTTP Status Code:** `200` **OK** <br>\nRegistrants added." : {
                    "value" : {
                      "registrants" : [ {
                        "email" : "AqJiu@BkIJbPQOXXngjYCpbrlI.zyax",
                        "join_url" : " https://zoom.us/w/9999999?tk=oZuwHfdgAAAAAAAAAAAAAAAA&uuid=WN_XW4_SdxBBBBxLDQt",
                        "registrant_id" : "conseret14re"
                      }, {
                        "email" : "DEih6AZ@mvRTbzqfUSOItBkyPDbNbAW.ouz",
                        "join_url" : " https://zoom.us/w/9999999?tk=oZu52542356AAAAAA&uuid=WN_XW4_SdxBBBBxLDQt",
                        "registrant_id" : "fdgsfh2ey82fuh"
                      }, {
                        "email" : "i8OzhqFt2h@YKJmTmm.tge",
                        "join_url" : " https://zoom.us/w/9999999?tk=ozghdfdsghf36AAA&uuid=WN_XW4_SdxBBBBxLDQt",
                        "registrant_id" : "hdsfhjf3iwh"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `200`<br> Webinar plan is missing. You must subscribe to the webinar plan and enable webinar for this user: {0} in order to perform this action.<br><br>\n**Error Code:** `300`<br> \nThis API c",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `200`<br> Webinar plan is missing. You must subscribe to the webinar plan and enable webinar for this user: {0} in order to perform this action.<br><br>\n**Error Code:** `300`<br> \nThis API c" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `3001`<br>\nWebinar does not exist: {0}.<br><br>\n**Error Code:** `3043`<br>\nWebinar has reached maximum attendee capacity.<br><br>\n**Error Code:** `404`<br>\nRegistration has not been enabled fo",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `3001`<br>\nWebinar does not exist: {0}.<br><br>\n**Error Code:** `3043`<br>\nWebinar has reached maximum attendee capacity.<br><br>\n**Error Code:** `404`<br>\nRegistration has not been enabled fo" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webinars/{webinarId}/panelists" : {
      "get" : {
        "tags" : [ "webinars/{webinar Id}1", "panelists" ],
        "summary" : "List panelists",
        "description" : "Panelists in a Webinar can view and send video, screen share, annotate, etc and do much more compared to attendees in a Webinar. \n\nUse this API to list all the panelists of a Webinar.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n**Prerequisites:**<br>\n* Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).<br> ",
        "operationId" : "listPanelists",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nWebinar plan subscription missing. Enable webinar for this user once the subscription is added.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_71"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nWebinar plan subscription missing. Enable webinar for this user once the subscription is added." : {
                    "value" : {
                      "panelists" : [ {
                        "email" : "maryjkdfdsgfshdgf@jdfdkjdglfk.jkfgdj",
                        "name" : "Mary"
                      }, {
                        "email" : "dfdsgfsdhf@jkgfdgfkdhgfdjg.fkjgdf",
                        "name" : "Mike"
                      } ],
                      "total_records" : "2"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**HTTP Status Code:** `300`<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `300`<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "webinars/{webinar Id}1", "panelists" ],
        "summary" : "Add panelists",
        "description" : "Panelists in a Webinar can view and send video, screen share, annotate, etc and do much more compared to attendees in a webinar.<br>Use this API to [add panelists](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_7550d59e-23f5-4703-9e22-e76bded1ed70) to a scheduled webinar.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n\n\n**Prerequisites:**\n* Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).<br> ",
        "operationId" : "addPanelists",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nWebinar plan subscription missing. Enable webinar for this user once the subscription is added.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nWebinar plan subscription missing. Enable webinar for this user once the subscription is added." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "**HTTP Status Code:** `201`<br>\nPanelist created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_15"
                },
                "examples" : {
                  "**HTTP Status Code:** `201`<br>\nPanelist created." : {
                    "value" : {
                      "id" : "doetwerggrlor",
                      "updated_at" : "2019-01-25T10:04:27.051Z"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "webinars/{webinar Id}1", "panelists" ],
        "summary" : "Remove panelists",
        "description" : "Remove all the panelists from a Webinar.<br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites:**<br>\n* Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).<br> ",
        "operationId" : "removePanelists",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nPanelists removed.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nPanelists removed." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webinars/{webinarId}/panelists/{panelistId}" : {
      "delete" : {
        "tags" : [ "webinars/{webinar Id}1", "panelists" ],
        "summary" : "Remove a panelist",
        "description" : "[Remove](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_de31f237-a91c-4fb2-912b-ecfba8ec5ffb) a single panelist from a webinar.<br> You can retrieve the `panelistId` by calling **List Panelists API**.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n\n**Prerequisites:**<br>\n* Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).<br> ",
        "operationId" : "removeAPanelist",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "panelistId",
          "in" : "path",
          "description" : "(Required) The panelist ID or panelist email.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nPanelists removed.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nPanelists removed." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {email} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {email} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webinars/{webinarId}/polls" : {
      "get" : {
        "tags" : [ "webinars/{webinar Id}1", "polls" ],
        "summary" : "List a webinar's polls ",
        "description" : "List all the [polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars) of a Webinar.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId" : "listAWebinarSPolls",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nList polls of a Webinar  returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_72"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nList polls of a Webinar  returned" : {
                    "value" : {
                      "id" : "cdjfhdsdfd",
                      "questions" : [ {
                        "answers" : [ "Good", "Not so good" ],
                        "name" : "How are you?",
                        "type" : "multiple"
                      } ],
                      "status" : "ended",
                      "title" : "Learn something new"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "webinars/{webinar Id}1", "polls" ],
        "summary" : "Create a webinar's poll",
        "description" : "Create a [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars) for a webinar.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId" : "createAWebinarSPoll",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Code:** `201`<br>\nWebinar Poll Created",
            "headers" : {
              "Content-Location" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "ipsum officia"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_72"
                },
                "examples" : {
                  "**HTTP Status Code:** `201`<br>\nWebinar Poll Created" : {
                    "value" : {
                      "id" : "cdjfhdsdfd",
                      "questions" : [ {
                        "answers" : [ "Good", "Not so good" ],
                        "name" : "How are you?",
                        "type" : "multiple"
                      } ],
                      "status" : "ended",
                      "title" : "Learn something new"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**HTTP Status Code:** `300`<br>Invalid webinarId.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `300`<br>Invalid webinarId." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webinars/{webinarId}/polls/{pollId}" : {
      "get" : {
        "tags" : [ "webinars/{webinar Id}1", "polls", "{poll Id}" ],
        "summary" : "Get a webinar poll",
        "description" : "Get a webinar's [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars) details.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId" : "getAWebinarPoll",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "pollId",
          "in" : "path",
          "description" : "(Required) The poll ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nWebinar Poll object returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_72"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nWebinar Poll object returned" : {
                    "value" : {
                      "id" : "cdjfhdsdfd",
                      "questions" : [ {
                        "answers" : [ "Good", "Not so good" ],
                        "name" : "How are you?",
                        "type" : "multiple"
                      } ],
                      "status" : "ended",
                      "title" : "Learn something new"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "webinars/{webinar Id}1", "polls", "{poll Id}" ],
        "summary" : "Update a webinar poll",
        "description" : "Update a webinar's [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId" : "updateAWebinarPoll",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "pollId",
          "in" : "path",
          "description" : "(Required) The poll ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nWebinar Poll Updated",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nWebinar Poll Updated" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar poll not found.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar poll not found.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "webinars/{webinar Id}1", "polls", "{poll Id}" ],
        "summary" : "Delete a webinar poll",
        "description" : "Delete a webinar's [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId" : "deleteAWebinarPoll",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "pollId",
          "in" : "path",
          "description" : "(Required) The poll ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>\nWebinar Poll deleted",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>\nWebinar Poll deleted" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar poll not found.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar poll not found.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webinars/{webinarId}/registrants" : {
      "get" : {
        "tags" : [ "webinars/{webinar Id}1", "registrants1" ],
        "summary" : "List webinar registrants",
        "description" : "Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the Webinar.<br>\nUse this API to list all the users that have registered for a webinar.<br><br>\n**Prerequisites:**\n* Pro or higher plan with a Webinar Add-on.<br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br> \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n\n",
        "operationId" : "listWebinarRegistrants",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "occurrence_id",
          "in" : "query",
          "description" : "The meeting occurrence ID.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "The registrant status:<br>`pending` - Registrant's status is pending.<br>`approved` - Registrant's status is approved.<br>`denied` - Registrant's status is denied.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "approved"
          }
        }, {
          "name" : "tracking_source_id",
          "in" : "query",
          "description" : "The tracking source ID for the registrants. Useful if you share the webinar registration page in multiple locations. See [Creating source tracking links for webinar registration](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-source-tracking-links-for-webinar-registration) for details.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records returned within a single API call.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "30"
          }
        }, {
          "name" : "page_number",
          "in" : "query",
          "description" : "\n**Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use \"next_page_token\" for pagination instead of this field.\n\nThe page number of the current page in the returned records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "1"
          }
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_73"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}." : {
                    "value" : {
                      "page_count" : "1",
                      "page_number" : "1",
                      "page_size" : "30",
                      "registrants" : [ {
                        "address" : "dsfhkdjsfh st",
                        "city" : "jackson heights",
                        "comments" : "Looking forward to the Webinar",
                        "country" : "US",
                        "create_time" : "2019-02-26T23:01:16.899Z",
                        "custom_questions" : [ {
                          "title" : "What do you hope to learn from this Webinar?",
                          "value" : "Look forward to learning how you come up with new recipes and what other services you offer."
                        } ],
                        "email" : "sjfkghdsg@someemail.dfgjd",
                        "first_name" : "Jill",
                        "id" : "24000002122",
                        "industry" : "Food",
                        "job_title" : "Chef",
                        "join_url" : "https://zoom.us/webinar/mywebinarissocooldighdghodghodg",
                        "last_name" : "Chill",
                        "no_of_employees" : "10",
                        "org" : "Cooking Org",
                        "phone" : "00000000",
                        "purchasing_time_frame" : "1-3 months",
                        "role_in_purchase_process" : "Influencer",
                        "state" : "NY",
                        "status" : "approved",
                        "zip" : "11371"
                      } ],
                      "total_records" : "1"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**HTTP Status Code:** `300`<br>Invalid webinar ID.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `300`<br>Invalid webinar ID." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "webinars/{webinar Id}1", "registrants1" ],
        "summary" : "Add a webinar registrant",
        "description" : "Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the Webinar.<br>Use this API to create and submit the registration of a user for a webinar.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites:**\n* Pro or higher plan with a Webinar Add-on.",
        "operationId" : "addAWebinarRegistrant",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "occurrence_ids",
          "in" : "query",
          "description" : "Occurrence ID. Get this value from the webinar get API. Multiple values separated by a comma.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "201" : {
            "description" : "**HTTP Status Code:** `201`<br>\nRegistration created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_16"
                },
                "examples" : {
                  "**HTTP Status Code:** `201`<br>\nRegistration created." : {
                    "value" : {
                      "id" : "velit dolore minim Ut",
                      "join_url" : "pariatur",
                      "registrant_id" : "culpa deserunt ea est commodo",
                      "start_time" : "1974-02-26T23:01:16.899Z",
                      "topic" : "et laboris Lorem in Ut"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**HTTP Status Code:** `300`<br>Invalid webinar ID. <br>\nInvalid parameter: occurrence_ids.<br>\nInvalid user name.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `300`<br>Invalid webinar ID. <br>\nInvalid parameter: occurrence_ids.<br>\nInvalid user name." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3000`<br>\nThis webinar does not have registration as required:{webinarId}.<br>\n**Error Code:** `3027`<br>\nHos",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3000`<br>\nThis webinar does not have registration as required:{webinarId}.<br>\n**Error Code:** `3027`<br>\nHos" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>\n",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>\n" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webinars/{webinarId}/registrants/questions" : {
      "get" : {
        "tags" : [ "webinars/{webinar Id}1", "registrants1", "questions1" ],
        "summary" : "List registration questions",
        "description" : "Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form with fields and questions before they can receive the link to join the Webinar.<br>Use this API to list registration questions and fields that are to be answered by users while registering for a Webinar.<br>\n**Prerequisites:**<br>  \n* Pro or higher plan with a Webinar Add-on.\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n\n",
        "operationId" : "listRegistrationQuestions1",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nWebinar Registrant Question object returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_74"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nWebinar Registrant Question object returned" : {
                    "value" : {
                      "custom_questions" : [ {
                        "answers" : [ "array of answer choices" ],
                        "required" : "boolean",
                        "title" : "string",
                        "type" : "string"
                      } ],
                      "questions" : [ {
                        "field_name" : "string",
                        "required" : "boolean"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>Webinar not found",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>Webinar not found" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "webinars/{webinar Id}1", "registrants1", "questions1" ],
        "summary" : "Update registration questions",
        "description" : "Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form with fields and questions before they can receive the link to join the Webinar.<br>Use this API to update registration questions and fields of a scheduled Webinar that are to be answered by users while registering for a Webinar.<br><br>\n**Prerequisites:**<br>  \n* Pro or higher plan with a Webinar Add-on.\n* Registration option for Webinar should be set as required to use this API. \n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n",
        "operationId" : "updateRegistrationQuestions1",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "204" : {
            "description" : "**HTTP Status Code:** `204`<br>Webinar Registrant Questions Updated",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `204`<br>Webinar Registrant Questions Updated" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>Webinar not found",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>Webinar not found" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webinars/{webinarId}/registrants/status" : {
      "put" : {
        "tags" : [ "webinars/{webinar Id}1", "registrants1" ],
        "summary" : "Update registrant's status",
        "description" : "Update a webinar registrant's status. Using this API, you can specify whether you want to approve a registration, deny a registration or cancel a previously approved registration.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n\n",
        "operationId" : "updateRegistrantSStatus1",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "occurrence_id",
          "in" : "query",
          "description" : "The meeting occurrence ID.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`<br>\nThe webinar plan subscription is missing. Enable webinar for this user once the subscription is added: {userId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `200`<br>\nThe webinar plan subscription is missing. Enable webinar for this user once the subscription is added: {userId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "**HTTP Status Code:** `300`<br>Invalid webinar ID.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `300`<br>Invalid webinar ID." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3035`<br>\nWebinar has reached maximum attendee capacity.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3035`<br>\nWebinar has reached maximum attendee capacity.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webinars/{webinarId}/registrants/{registrantId}" : {
      "get" : {
        "tags" : [ "webinars/{webinar Id}1", "registrants1", "{registrant Id}" ],
        "summary" : "Get a webinar registrant",
        "description" : "Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the Webinar.<br>Use this API to get details on a specific user who has registered for the Webinar.<br><br>\n**Scopes:** `webinar:read:admin` `webinar:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites:**<br>\n* The account must have a Webinar plan.",
        "operationId" : "getAWebinarRegistrant",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "registrantId",
          "in" : "path",
          "description" : "(Required) The registrant ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "occurrence_id",
          "in" : "query",
          "description" : "The meeting occurrence ID.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_73"
                },
                "examples" : {
                  "Success." : {
                    "value" : {
                      "page_count" : "1",
                      "page_number" : "1",
                      "page_size" : "30",
                      "registrants" : [ {
                        "address" : "dsfhkdjsfh st",
                        "city" : "jackson heights",
                        "comments" : "Looking forward to the Webinar",
                        "country" : "US",
                        "create_time" : "2019-02-26T23:01:16.899Z",
                        "custom_questions" : [ {
                          "title" : "What do you hope to learn from this Webinar?",
                          "value" : "Look forward to learning how you come up with new recipes and what other services you offer."
                        } ],
                        "email" : "sjfkghdsg@someemail.dfgjd",
                        "first_name" : "Jill",
                        "id" : "24000002122",
                        "industry" : "Food",
                        "job_title" : "Chef",
                        "join_url" : "https://zoom.us/webinar/mywebinarissocooldighdghodghodg",
                        "last_name" : "Chill",
                        "no_of_employees" : "10",
                        "org" : "Cooking Org",
                        "phone" : "00000000",
                        "purchasing_time_frame" : "1-3 months",
                        "role_in_purchase_process" : "Influencer",
                        "state" : "NY",
                        "status" : "approved",
                        "zip" : "11371"
                      } ],
                      "total_records" : "1"
                    }
                  }
                }
              }
            }
          },
          "300" : {
            "description" : "Invalid webinar ID.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "Invalid webinar ID." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "webinars/{webinar Id}1", "registrants1", "{registrant Id}" ],
        "summary" : "Delete a webinar registrant",
        "description" : "Delete a webinar registrant.<br><br>\n**Scopes**: `webinar:write:admin` `webinar:write`<br>\n <br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId" : "deleteAWebinarRegistrant",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        }, {
          "name" : "registrantId",
          "in" : "path",
          "description" : "(Required) The registrant ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        }, {
          "name" : "occurrence_id",
          "in" : "query",
          "description" : "The webinar occurence ID.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ipsum officia"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "**HTTP status code:** `204` <br>\nOK",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP status code:** `204` <br>\nOK" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP status code:** `400` <br>\nBad Request<br>\n\n**Error code:** `200`<br>\nWebinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {0}.<br>\n\n**Error code:** `300`<br>\nThe value th",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP status code:** `400` <br>\nBad Request<br>\n\n**Error code:** `200`<br>\nWebinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {0}.<br>\n\n**Error code:** `300`<br>\nThe value th" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webinars/{webinarId}/status" : {
      "put" : {
        "tags" : [ "webinars/{webinar Id}1" ],
        "summary" : "Update webinar status",
        "description" : "Update a webinar's status. Use this API to end an ongoing webinar.<br><br>\n**Scopes:** `webinar:write:admin` `webinar:write`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>\n**Prerequisites:**<br>\n* The account must hold a valid [Webinar plan](https://zoom.us/webinar).",
        "operationId" : "updateWebinarStatus",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Webinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "Webinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "Webinar's status updated.",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "Webinar's status updated." : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n**Error Code:** `3063`<br>\nCan not end on-premise user's meeting:",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n**Error Code:** `3063`<br>\nCan not end on-premise user's meeting:" : {
                    "value" : ""
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
            "content" : {
              "text/plain" : {
                "examples" : {
                  "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>" : {
                    "value" : ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webinars/{webinarId}/tracking_sources" : {
      "get" : {
        "tags" : [ "webinars/{webinar Id}1" ],
        "summary" : "Get webinar tracking sources",
        "description" : "[Webinar Registration Tracking Sources](https://support.zoom.us/hc/en-us/articles/360000315683-Webinar-Registration-Source-Tracking) allow you to see where your registrants are coming from if you share the webinar registration page in multiple platforms. You can then use the source tracking to see the number of registrants generated from each platform.<br> Use this API to list information on all the tracking sources of a Webinar.<br>\n**Scopes:** `webinar:read:admin`, `webinar:read`<br>\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>\n**Prerequisites**:<br>\n* [Webinar license](https://zoom.us/webinar).\n* Registration must be required for the Webinar.\n",
        "operationId" : "getWebinarTrackingSources",
        "parameters" : [ {
          "name" : "webinarId",
          "in" : "path",
          "description" : "(Required) The webinar ID in \"**long**\" format(represented as int64 data type in JSON). ",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "7283688"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "**HTTP Status Code:** `200`",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_75"
                },
                "examples" : {
                  "**HTTP Status Code:** `200`" : {
                    "value" : {
                      "total_records" : 1,
                      "tracking_sources" : [ {
                        "id" : "1100011100",
                        "registrationr_count" : 1,
                        "source_name" : "general",
                        "tracking_url" : "https://zoom.us/webinar/register/1100011100/WN_6ToMP5n6Quas2SdMjIWu7Q",
                        "visitor_count" : 2
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "accounts" : {
            "type" : "array",
            "example" : [ {
              "account_name" : "string",
              "account_type" : "string",
              "created_at" : "string [date-time]",
              "id" : "string [uuid]",
              "owner_email" : "string",
              "seats" : "integer",
              "subscription_end_time" : "string [date-time]",
              "subscription_start_time" : "string [date-time]"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "account_name" : {
                  "type" : "string",
                  "example" : "string"
                },
                "account_type" : {
                  "type" : "string",
                  "example" : "string"
                },
                "created_at" : {
                  "type" : "string",
                  "example" : "string [date-time]"
                },
                "id" : {
                  "type" : "string",
                  "example" : "string [uuid]"
                },
                "owner_email" : {
                  "type" : "string",
                  "example" : "string"
                },
                "seats" : {
                  "type" : "string",
                  "example" : "integer"
                },
                "subscription_end_time" : {
                  "type" : "string",
                  "example" : "string [date-time]"
                },
                "subscription_start_time" : {
                  "type" : "string",
                  "example" : "string [date-time]"
                }
              }
            }
          },
          "page_count" : {
            "type" : "string",
            "example" : "integer"
          },
          "page_number" : {
            "type" : "string",
            "example" : "integer"
          },
          "page_size" : {
            "type" : "string",
            "example" : "integer"
          },
          "total_records" : {
            "type" : "string",
            "example" : "integer"
          }
        }
      },
      "inline_response_201" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "example" : "string"
          },
          "id" : {
            "type" : "string",
            "example" : "string"
          },
          "owner_email" : {
            "type" : "string",
            "example" : "string"
          },
          "owner_id" : {
            "type" : "string",
            "example" : "string"
          }
        }
      },
      "inline_response_200_1" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "example" : "string [date-time]"
          },
          "id" : {
            "type" : "string",
            "example" : "string"
          },
          "options" : {
            "type" : "object",
            "properties" : {
              "meeting_connectors" : {
                "type" : "string",
                "example" : "string"
              },
              "pay_mode" : {
                "type" : "string",
                "example" : "string"
              },
              "room_connectors" : {
                "type" : "string",
                "example" : "string"
              },
              "share_mc" : {
                "type" : "string",
                "example" : "boolean"
              },
              "share_rc" : {
                "type" : "string",
                "example" : "boolean"
              }
            }
          },
          "owner_email" : {
            "type" : "string",
            "example" : "string"
          },
          "owner_id" : {
            "type" : "string",
            "example" : "string"
          }
        }
      },
      "inline_response_200_2" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string",
            "example" : "string"
          },
          "apt" : {
            "type" : "string",
            "example" : "string"
          },
          "city" : {
            "type" : "string",
            "example" : "string"
          },
          "country" : {
            "type" : "string",
            "example" : "string"
          },
          "email" : {
            "type" : "string",
            "example" : "string"
          },
          "first_name" : {
            "type" : "string",
            "example" : "string"
          },
          "last_name" : {
            "type" : "string",
            "example" : "string"
          },
          "phone_number" : {
            "type" : "string",
            "example" : "string"
          },
          "state" : {
            "type" : "string",
            "example" : "string"
          },
          "zip" : {
            "type" : "string",
            "example" : "string"
          }
        }
      },
      "inline_response_200_3" : {
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "invoices" : {
            "type" : "array",
            "example" : [ {
              "balance" : 2039,
              "due_date" : { },
              "id" : "2c92c12348d07e0580",
              "invoice_date" : { },
              "invoice_number" : "S8INsdf4534000001",
              "status" : "Draft",
              "target_date" : { },
              "tax_amount" : 0,
              "total_amount" : 2039
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "balance" : {
                  "type" : "number",
                  "example" : 2039
                },
                "due_date" : {
                  "type" : "string",
                  "example" : "{}"
                },
                "id" : {
                  "type" : "string",
                  "example" : "2c92c12348d07e0580"
                },
                "invoice_date" : {
                  "type" : "string",
                  "example" : "{}"
                },
                "invoice_number" : {
                  "type" : "string",
                  "example" : "S8INsdf4534000001"
                },
                "status" : {
                  "type" : "string",
                  "example" : "Draft"
                },
                "target_date" : {
                  "type" : "string",
                  "example" : "{}"
                },
                "tax_amount" : {
                  "type" : "number",
                  "example" : 0
                },
                "total_amount" : {
                  "type" : "number",
                  "example" : 2039
                }
              }
            }
          }
        }
      },
      "inline_response_200_4" : {
        "type" : "object",
        "properties" : {
          "balance" : {
            "type" : "number",
            "example" : 2039
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "due_date" : {
            "type" : "string",
            "example" : "{}"
          },
          "id" : {
            "type" : "string",
            "example" : "2c92fghvb0580"
          },
          "invoice_date" : {
            "type" : "string",
            "example" : "{}"
          },
          "invoice_items" : {
            "type" : "array",
            "example" : [ {
              "charge_name" : "Standard Biz Annual",
              "charge_number" : "C-00000004",
              "charge_type" : "Recurring",
              "end_date" : { },
              "quantity" : 10,
              "start_date" : { },
              "tax_amount" : 0,
              "total_amount" : 1999
            }, {
              "charge_name" : "Cloud Recording 100 GB",
              "charge_number" : "C-00000005",
              "charge_type" : "Recurring",
              "end_date" : { },
              "quantity" : 1,
              "start_date" : { },
              "tax_amount" : 0,
              "total_amount" : 40
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "charge_name" : {
                  "type" : "string",
                  "example" : "Standard Biz Annual"
                },
                "charge_number" : {
                  "type" : "string",
                  "example" : "C-00000004"
                },
                "charge_type" : {
                  "type" : "string",
                  "example" : "Recurring"
                },
                "end_date" : {
                  "type" : "string",
                  "example" : "{}"
                },
                "quantity" : {
                  "type" : "number",
                  "example" : 10
                },
                "start_date" : {
                  "type" : "string",
                  "example" : "{}"
                },
                "tax_amount" : {
                  "type" : "number",
                  "example" : 0
                },
                "total_amount" : {
                  "type" : "number",
                  "example" : 1999
                }
              }
            }
          },
          "invoice_number" : {
            "type" : "string",
            "example" : "Shjmr5INV00000001"
          },
          "status" : {
            "type" : "string",
            "example" : "Draft"
          },
          "target_date" : {
            "type" : "string",
            "example" : "{}"
          },
          "tax_amount" : {
            "type" : "number",
            "example" : 0
          },
          "total_amount" : {
            "type" : "number",
            "example" : 2039
          }
        }
      },
      "inline_response_200_5" : {
        "type" : "object",
        "properties" : {
          "email_notification" : {
            "type" : "object",
            "properties" : {
              "alternative_host_reminder" : {
                "type" : "boolean",
                "example" : true
              },
              "cancel_meeting_reminder" : {
                "type" : "boolean",
                "example" : false
              },
              "cloud_recording_available_reminder" : {
                "type" : "boolean",
                "example" : false
              },
              "jbh_reminder" : {
                "type" : "boolean",
                "example" : false
              },
              "schedule_for_host_reminder" : {
                "type" : "boolean",
                "example" : true
              }
            }
          },
          "in_meeting" : {
            "type" : "object",
            "properties" : {
              "alert_guest_join" : {
                "type" : "boolean",
                "example" : true
              },
              "allow_show_zoom_windows" : {
                "type" : "boolean",
                "example" : true
              },
              "annotation" : {
                "type" : "boolean",
                "example" : true
              },
              "anonymous_question_answer" : {
                "type" : "boolean",
                "example" : true
              },
              "attendee_on_hold" : {
                "type" : "boolean",
                "example" : false
              },
              "auto_answer" : {
                "type" : "boolean",
                "example" : true
              },
              "auto_saving_chat" : {
                "type" : "boolean",
                "example" : false
              },
              "breakout_room" : {
                "type" : "boolean",
                "example" : true
              },
              "chat" : {
                "type" : "boolean",
                "example" : false
              },
              "closed_caption" : {
                "type" : "boolean",
                "example" : false
              },
              "co_host" : {
                "type" : "boolean",
                "example" : false
              },
              "custom_data_center_regions" : {
                "type" : "boolean",
                "example" : false
              },
              "dscp_marking" : {
                "type" : "boolean",
                "example" : false
              },
              "e2e_encryption" : {
                "type" : "boolean",
                "example" : false
              },
              "entry_exit_chime" : {
                "type" : "string",
                "example" : "ut"
              },
              "far_end_camera_control" : {
                "type" : "boolean",
                "example" : false
              },
              "feedback" : {
                "type" : "boolean",
                "example" : false
              },
              "file_transfer" : {
                "type" : "boolean",
                "example" : false
              },
              "group_hd" : {
                "type" : "boolean",
                "example" : false
              },
              "original_audio" : {
                "type" : "boolean",
                "example" : false
              },
              "polling" : {
                "type" : "boolean",
                "example" : true
              },
              "post_meeting_feedback" : {
                "type" : "boolean",
                "example" : true
              },
              "private_chat" : {
                "type" : "boolean",
                "example" : true
              },
              "remote_control" : {
                "type" : "boolean",
                "example" : true
              },
              "request_permission_to_unmute" : {
                "type" : "boolean",
                "example" : false
              },
              "screen_sharing" : {
                "type" : "boolean",
                "example" : true
              },
              "sending_default_email_invites" : {
                "type" : "boolean",
                "example" : false
              },
              "show_meeting_control_toolbar" : {
                "type" : "boolean",
                "example" : false
              },
              "stereo_audio" : {
                "type" : "boolean",
                "example" : true
              },
              "use_html_format_email" : {
                "type" : "boolean",
                "example" : false
              },
              "virtual_background" : {
                "type" : "boolean",
                "example" : true
              },
              "webinar_question_answer" : {
                "type" : "boolean",
                "example" : false
              },
              "whiteboard" : {
                "type" : "boolean",
                "example" : false
              }
            }
          },
          "recording" : {
            "type" : "object",
            "properties" : {
              "account_user_access_recording" : {
                "type" : "boolean",
                "example" : true
              },
              "auto_delete_cmr" : {
                "type" : "boolean",
                "example" : false
              },
              "auto_recording" : {
                "type" : "string",
                "example" : "voluptate"
              },
              "cloud_recording" : {
                "type" : "boolean",
                "example" : true
              },
              "cloud_recording_download" : {
                "type" : "boolean",
                "example" : true
              },
              "host_delete_cloud_recording" : {
                "type" : "boolean",
                "example" : true
              },
              "ip_address_access_control" : {
                "type" : "object",
                "properties" : {
                  "enable" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "ip_addresses_or_ranges" : {
                    "type" : "string",
                    "example" : ""
                  }
                }
              },
              "local_recording" : {
                "type" : "boolean",
                "example" : false
              },
              "prevent_host_access_recording" : {
                "type" : "boolean",
                "example" : true
              },
              "recording_authentication" : {
                "type" : "string",
                "example" : "ut sint"
              }
            }
          },
          "schedule_meeting" : {
            "type" : "object",
            "properties" : {
              "audio_type" : {
                "type" : "boolean",
                "example" : true
              },
              "embed_password_in_join_link" : {
                "type" : "boolean",
                "example" : true
              },
              "enforce_login" : {
                "type" : "boolean",
                "example" : false
              },
              "enforce_login_domains" : {
                "type" : "string",
                "example" : "id tempor deserunt dolore nulla"
              },
              "enforce_login_with_domains" : {
                "type" : "boolean",
                "example" : false
              },
              "host_video" : {
                "type" : "boolean",
                "example" : true
              },
              "join_before_host" : {
                "type" : "boolean",
                "example" : false
              },
              "meeting_authentication" : {
                "type" : "boolean",
                "example" : true
              },
              "not_store_meeting_topic" : {
                "type" : "boolean",
                "example" : true
              },
              "participant_video" : {
                "type" : "boolean",
                "example" : false
              },
              "require_password_for_instant_meetings" : {
                "type" : "boolean",
                "example" : false
              },
              "require_password_for_pmi_meetings" : {
                "type" : "boolean",
                "example" : false
              },
              "require_password_for_scheduling_new_meetings" : {
                "type" : "boolean",
                "example" : true
              }
            }
          },
          "telephony" : {
            "type" : "object",
            "properties" : {
              "telephony_regions" : {
                "type" : "boolean",
                "example" : false
              },
              "third_party_audio" : {
                "type" : "boolean",
                "example" : false
              }
            }
          },
          "tsp" : {
            "type" : "object",
            "properties" : {
              "call_out" : {
                "type" : "boolean",
                "example" : true
              },
              "show_international_numbers_link" : {
                "type" : "boolean",
                "example" : true
              }
            }
          }
        }
      },
      "inline_response_200_6" : {
        "type" : "object",
        "properties" : {
          "domains" : {
            "type" : "array",
            "example" : [ {
              "domain" : "Ut",
              "status" : "in occaecat ut id"
            }, {
              "domain" : "commodo consequat culpa",
              "status" : "labore id nulla"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "domain" : {
                  "type" : "string",
                  "example" : "Ut"
                },
                "status" : {
                  "type" : "string",
                  "example" : "in occaecat ut id"
                }
              }
            }
          },
          "total_records" : {
            "type" : "number",
            "example" : -36095302
          }
        }
      },
      "inline_response_204" : {
        "type" : "object",
        "properties" : {
          "meeting_connectors" : {
            "type" : "string",
            "example" : "string"
          },
          "pay_mode" : {
            "type" : "string",
            "example" : "string"
          },
          "room_connectors" : {
            "type" : "string",
            "example" : "string"
          },
          "share_mc" : {
            "type" : "string",
            "example" : "boolean"
          },
          "share_rc" : {
            "type" : "string",
            "example" : "boolean"
          }
        }
      },
      "inline_response_201_1" : {
        "type" : "object",
        "properties" : {
          "sip_trunks" : {
            "type" : "array",
            "example" : [ {
              "carrier_account" : "9866",
              "id" : "123111",
              "name" : "test1"
            }, {
              "carrier_account" : "986677",
              "id" : "123444",
              "name" : "test2"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "carrier_account" : {
                  "type" : "string",
                  "example" : "9866"
                },
                "id" : {
                  "type" : "string",
                  "example" : "123111"
                },
                "name" : {
                  "type" : "string",
                  "example" : "test1"
                }
              }
            }
          }
        }
      },
      "inline_response_200_7" : {
        "type" : "object",
        "properties" : {
          "plan_audio" : {
            "type" : "object",
            "properties" : {
              "callout_countries" : {
                "type" : "string",
                "example" : "string"
              },
              "ddi_numbers" : {
                "type" : "string",
                "example" : "integer"
              },
              "premium_countries" : {
                "type" : "string",
                "example" : "string"
              },
              "tollfree_countries" : {
                "type" : "string",
                "example" : "string"
              },
              "type" : {
                "type" : "string",
                "example" : "string"
              }
            }
          },
          "plan_base" : {
            "type" : "object",
            "properties" : {
              "hosts" : {
                "type" : "string",
                "example" : "integer"
              },
              "type" : {
                "type" : "string",
                "example" : "string"
              }
            }
          },
          "plan_large_meeting" : {
            "type" : "array",
            "example" : [ {
              "hosts" : "integer",
              "type" : "string"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "hosts" : {
                  "type" : "string",
                  "example" : "integer"
                },
                "type" : {
                  "type" : "string",
                  "example" : "string"
                }
              }
            }
          },
          "plan_phone" : {
            "type" : "object",
            "properties" : {
              "plan_base" : {
                "type" : "object",
                "properties" : {
                  "callout_countries" : {
                    "type" : "string",
                    "example" : "string"
                  },
                  "type" : {
                    "type" : "string",
                    "example" : "string"
                  }
                }
              },
              "plan_calling" : {
                "type" : "array",
                "example" : [ {
                  "hosts" : "integer",
                  "type" : "string"
                } ],
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "hosts" : {
                      "type" : "string",
                      "example" : "integer"
                    },
                    "type" : {
                      "type" : "string",
                      "example" : "string"
                    }
                  }
                }
              },
              "plan_number" : {
                "type" : "array",
                "example" : [ {
                  "hosts" : "integer",
                  "type" : "string"
                } ],
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "hosts" : {
                      "type" : "string",
                      "example" : "integer"
                    },
                    "type" : {
                      "type" : "string",
                      "example" : "string"
                    }
                  }
                }
              }
            }
          },
          "plan_recording" : {
            "type" : "string",
            "example" : "string"
          },
          "plan_room_connector" : {
            "type" : "object",
            "properties" : {
              "hosts" : {
                "type" : "string",
                "example" : "integer"
              },
              "type" : {
                "type" : "string",
                "example" : "string"
              }
            }
          },
          "plan_webinar" : {
            "type" : "array",
            "example" : [ {
              "hosts" : "integer",
              "type" : "string"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "hosts" : {
                  "type" : "string",
                  "example" : "integer"
                },
                "type" : {
                  "type" : "string",
                  "example" : "string"
                }
              }
            }
          },
          "plan_zoom_rooms" : {
            "type" : "object",
            "properties" : {
              "hosts" : {
                "type" : "string",
                "example" : "integer"
              },
              "type" : {
                "type" : "string",
                "example" : "string"
              }
            }
          }
        }
      },
      "inline_response_201_2" : {
        "type" : "object",
        "properties" : {
          "plan_audio" : {
            "type" : "object",
            "properties" : {
              "callout_countries" : {
                "type" : "string",
                "example" : "string"
              },
              "ddi_numbers" : {
                "type" : "string",
                "example" : "integer"
              },
              "premium_countries" : {
                "type" : "string",
                "example" : "string"
              },
              "tollfree_countries" : {
                "type" : "string",
                "example" : "string"
              },
              "type" : {
                "type" : "string",
                "example" : "string"
              }
            }
          },
          "plan_base" : {
            "type" : "object",
            "properties" : {
              "hosts" : {
                "type" : "string",
                "example" : "integer"
              },
              "type" : {
                "type" : "string",
                "example" : "string"
              }
            }
          },
          "plan_large_meeting" : {
            "type" : "array",
            "example" : [ {
              "hosts" : "integer",
              "type" : "string"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "hosts" : {
                  "type" : "string",
                  "example" : "integer"
                },
                "type" : {
                  "type" : "string",
                  "example" : "string"
                }
              }
            }
          },
          "plan_recording" : {
            "type" : "string",
            "example" : "string"
          },
          "plan_room_connector" : {
            "type" : "object",
            "properties" : {
              "hosts" : {
                "type" : "string",
                "example" : "integer"
              },
              "type" : {
                "type" : "string",
                "example" : "string"
              }
            }
          },
          "plan_webinar" : {
            "type" : "array",
            "example" : [ {
              "hosts" : "integer",
              "type" : "string"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "hosts" : {
                  "type" : "string",
                  "example" : "integer"
                },
                "type" : {
                  "type" : "string",
                  "example" : "string"
                }
              }
            }
          },
          "plan_zoom_rooms" : {
            "type" : "object",
            "properties" : {
              "hosts" : {
                "type" : "string",
                "example" : "integer"
              },
              "type" : {
                "type" : "string",
                "example" : "string"
              }
            }
          }
        }
      },
      "inline_response_200_8" : {
        "type" : "object",
        "properties" : {
          "plan_base" : {
            "type" : "object",
            "properties" : {
              "hosts" : {
                "type" : "number",
                "example" : 2
              },
              "type" : {
                "type" : "string",
                "example" : "monthly"
              },
              "usage" : {
                "type" : "number",
                "example" : 1
              }
            }
          },
          "plan_large_meeting" : {
            "type" : "array",
            "example" : [ {
              "hosts" : 1,
              "type" : "large500_monthly",
              "usage" : 1
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "hosts" : {
                  "type" : "number",
                  "example" : 1
                },
                "type" : {
                  "type" : "string",
                  "example" : "large500_monthly"
                },
                "usage" : {
                  "type" : "number",
                  "example" : 1
                }
              }
            }
          },
          "plan_recording" : {
            "type" : "object",
            "properties" : {
              "free_storage" : {
                "type" : "string",
                "example" : "3 GB"
              },
              "free_storage_usage" : {
                "type" : "string",
                "example" : "0"
              },
              "plan_storage" : {
                "type" : "string",
                "example" : "0"
              },
              "plan_storage_exceed" : {
                "type" : "string",
                "example" : "0"
              },
              "plan_storage_usage" : {
                "type" : "string",
                "example" : "0"
              }
            }
          },
          "plan_webinar" : {
            "type" : "array",
            "example" : [ {
              "hosts" : 1,
              "type" : "webinar100_monthly",
              "usage" : 1
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "hosts" : {
                  "type" : "number",
                  "example" : 1
                },
                "type" : {
                  "type" : "string",
                  "example" : "webinar100_monthly"
                },
                "usage" : {
                  "type" : "number",
                  "example" : 1
                }
              }
            }
          },
          "plan_zoom_rooms" : {
            "type" : "object",
            "properties" : {
              "hosts" : {
                "type" : "number",
                "example" : 1
              },
              "type" : {
                "type" : "string",
                "example" : "zroom_monthly"
              },
              "usage" : {
                "type" : "number",
                "example" : 0
              }
            }
          }
        }
      },
      "inline_response_200_9" : {
        "type" : "object",
        "properties" : {
          "from" : {
            "type" : "string",
            "example" : "{}"
          },
          "meetings" : {
            "type" : "array",
            "example" : [ {
              "account_id" : "lq8QK_AAAAAAAAA",
              "duration" : 2,
              "host_email" : "thehostemail@somemail.com",
              "host_id" : "uLoABCDEF_qQGIsQ",
              "id" : 101010101,
              "recording_count" : 3,
              "recording_files" : [ {
                "download_url" : "https://zoom.us/recording/download/abcdEFgkkkkk",
                "file_size" : 26966,
                "file_type" : "M4A",
                "id" : "2f6bbbb-0fd7-4691-af13-aaaaaa",
                "meeting_id" : "i9zq0MR8S/abcdef==",
                "play_url" : "https://zoomdev.us/recording/play/abcdEFgkkkkk",
                "recording_end" : "2019-08-20T00:53:16Z",
                "recording_start" : "2019-08-20T00:51:54Z",
                "recording_type" : "audio_only",
                "status" : "completed"
              }, {
                "download_url" : "https://zoom.us/recording/download/JolGd4kUpBEo44Q31BVEXrGeCdbT4-MOAAAAA",
                "file_size" : 37,
                "file_type" : "CHAT",
                "id" : "39362666-0fd7-4691-af13-aaaaaa",
                "meeting_id" : "i9zq0MR8S/abcdef==",
                "play_url" : "https://zoom.us/recording/play/UpBEo44Q31BVEXrGeCdbT4-MOAAAAAAA",
                "recording_end" : "2019-08-20T00:53:16Z",
                "recording_start" : "2019-08-20T00:51:54Z",
                "recording_type" : "chat_file",
                "status" : "completed"
              }, {
                "download_url" : "https://zoom.us/recording/download/5Y2YnU-56ZY4lEA5AAAABBBBBCCCCCDDDDD",
                "file_size" : 101679,
                "file_type" : "MP4",
                "id" : "K809nk-014djkfsgf-00a98c13ec783",
                "meeting_id" : "i9zq0MR8S/abcdef==",
                "play_url" : "https://zoom.us/recording/play/5Y2YnU-56ZY4lEA5AAAABBBBBCCCCCDDDDD",
                "recording_end" : "2019-08-20T00:53:16Z",
                "recording_start" : "2019-08-20T00:51:54Z",
                "recording_type" : "shared_screen_with_speaker_view",
                "status" : "completed"
              } ],
              "share_url" : "https://zoom.us/recording/share/SBDDBJKsbjdAAAAA",
              "start_time" : "2019-08-20T00:52:13Z",
              "timezone" : "America/Los_Angeles",
              "topic" : "MyTestMeeting",
              "total_size" : 128682,
              "type" : 2,
              "uuid" : "i9zq0MR8S/abcdef=="
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "account_id" : {
                  "type" : "string",
                  "example" : "lq8QK_AAAAAAAAA"
                },
                "duration" : {
                  "type" : "number",
                  "example" : 2
                },
                "host_email" : {
                  "type" : "string",
                  "example" : "thehostemail@somemail.com"
                },
                "host_id" : {
                  "type" : "string",
                  "example" : "uLoABCDEF_qQGIsQ"
                },
                "id" : {
                  "type" : "number",
                  "example" : 101010101
                },
                "recording_count" : {
                  "type" : "number",
                  "example" : 3
                },
                "recording_files" : {
                  "type" : "array",
                  "example" : [ {
                    "download_url" : "https://zoom.us/recording/download/abcdEFgkkkkk",
                    "file_size" : 26966,
                    "file_type" : "M4A",
                    "id" : "2f6bbbb-0fd7-4691-af13-aaaaaa",
                    "meeting_id" : "i9zq0MR8S/abcdef==",
                    "play_url" : "https://zoomdev.us/recording/play/abcdEFgkkkkk",
                    "recording_end" : "2019-08-20T00:53:16Z",
                    "recording_start" : "2019-08-20T00:51:54Z",
                    "recording_type" : "audio_only",
                    "status" : "completed"
                  }, {
                    "download_url" : "https://zoom.us/recording/download/JolGd4kUpBEo44Q31BVEXrGeCdbT4-MOAAAAA",
                    "file_size" : 37,
                    "file_type" : "CHAT",
                    "id" : "39362666-0fd7-4691-af13-aaaaaa",
                    "meeting_id" : "i9zq0MR8S/abcdef==",
                    "play_url" : "https://zoom.us/recording/play/UpBEo44Q31BVEXrGeCdbT4-MOAAAAAAA",
                    "recording_end" : "2019-08-20T00:53:16Z",
                    "recording_start" : "2019-08-20T00:51:54Z",
                    "recording_type" : "chat_file",
                    "status" : "completed"
                  }, {
                    "download_url" : "https://zoom.us/recording/download/5Y2YnU-56ZY4lEA5AAAABBBBBCCCCCDDDDD",
                    "file_size" : 101679,
                    "file_type" : "MP4",
                    "id" : "K809nk-014djkfsgf-00a98c13ec783",
                    "meeting_id" : "i9zq0MR8S/abcdef==",
                    "play_url" : "https://zoom.us/recording/play/5Y2YnU-56ZY4lEA5AAAABBBBBCCCCCDDDDD",
                    "recording_end" : "2019-08-20T00:53:16Z",
                    "recording_start" : "2019-08-20T00:51:54Z",
                    "recording_type" : "shared_screen_with_speaker_view",
                    "status" : "completed"
                  } ],
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "download_url" : {
                        "type" : "string",
                        "example" : "https://zoom.us/recording/download/abcdEFgkkkkk"
                      },
                      "file_size" : {
                        "type" : "number",
                        "example" : 26966
                      },
                      "file_type" : {
                        "type" : "string",
                        "example" : "M4A"
                      },
                      "id" : {
                        "type" : "string",
                        "example" : "2f6bbbb-0fd7-4691-af13-aaaaaa"
                      },
                      "meeting_id" : {
                        "type" : "string",
                        "example" : "i9zq0MR8S/abcdef=="
                      },
                      "play_url" : {
                        "type" : "string",
                        "example" : "https://zoomdev.us/recording/play/abcdEFgkkkkk"
                      },
                      "recording_end" : {
                        "type" : "string",
                        "example" : "2019-08-20T00:53:16Z"
                      },
                      "recording_start" : {
                        "type" : "string",
                        "example" : "2019-08-20T00:51:54Z"
                      },
                      "recording_type" : {
                        "type" : "string",
                        "example" : "audio_only"
                      },
                      "status" : {
                        "type" : "string",
                        "example" : "completed"
                      }
                    }
                  }
                },
                "share_url" : {
                  "type" : "string",
                  "example" : "https://zoom.us/recording/share/SBDDBJKsbjdAAAAA"
                },
                "start_time" : {
                  "type" : "string",
                  "example" : "2019-08-20T00:52:13Z"
                },
                "timezone" : {
                  "type" : "string",
                  "example" : "America/Los_Angeles"
                },
                "topic" : {
                  "type" : "string",
                  "example" : "MyTestMeeting"
                },
                "total_size" : {
                  "type" : "number",
                  "example" : 128682
                },
                "type" : {
                  "type" : "number",
                  "example" : 2
                },
                "uuid" : {
                  "type" : "string",
                  "example" : "i9zq0MR8S/abcdef=="
                }
              }
            }
          },
          "next_page_token" : {
            "type" : "string",
            "example" : ""
          },
          "page_size" : {
            "type" : "number",
            "example" : 30
          },
          "to" : {
            "type" : "string",
            "example" : "{}"
          }
        }
      },
      "inline_response_200_10" : {
        "type" : "object",
        "properties" : {
          "email_notification" : {
            "type" : "object",
            "properties" : {
              "alternative_host_reminder" : {
                "type" : "string",
                "example" : "boolean"
              },
              "cancel_meeting_reminder" : {
                "type" : "string",
                "example" : "boolean"
              },
              "cloud_recording_avaliable_reminder" : {
                "type" : "string",
                "example" : "boolean"
              },
              "jbh_reminder" : {
                "type" : "string",
                "example" : "boolean"
              },
              "low_host_count_reminder" : {
                "type" : "string",
                "example" : "boolean"
              },
              "schedule_for_reminder" : {
                "type" : "string",
                "example" : "boolean"
              }
            }
          },
          "feature" : {
            "type" : "object",
            "properties" : {
              "meeting_capacity" : {
                "type" : "string",
                "example" : "integer"
              }
            }
          },
          "in_meeting" : {
            "type" : "object",
            "properties" : {
              "alert_guest_join" : {
                "type" : "string",
                "example" : "boolean"
              },
              "allow_show_zoom_windows" : {
                "type" : "string",
                "example" : "boolean"
              },
              "annotation" : {
                "type" : "string",
                "example" : "boolean"
              },
              "anonymous_question_answer" : {
                "type" : "string",
                "example" : "boolean"
              },
              "attendee_on_hold" : {
                "type" : "string",
                "example" : "boolean"
              },
              "auto_answer" : {
                "type" : "string",
                "example" : "boolean"
              },
              "auto_saving_chat" : {
                "type" : "string",
                "example" : "boolean"
              },
              "breakout_room" : {
                "type" : "string",
                "example" : "boolean"
              },
              "chat" : {
                "type" : "string",
                "example" : "boolean"
              },
              "closed_caption" : {
                "type" : "string",
                "example" : "boolean"
              },
              "co_host" : {
                "type" : "string",
                "example" : "boolean"
              },
              "dscp_audio" : {
                "type" : "string",
                "example" : "integer"
              },
              "dscp_marking" : {
                "type" : "string",
                "example" : "boolean"
              },
              "dscp_video" : {
                "type" : "string",
                "example" : "integer"
              },
              "e2e_encryption" : {
                "type" : "string",
                "example" : "boolean"
              },
              "entry_exit_chime" : {
                "type" : "string",
                "example" : "string"
              },
              "far_end_camera_control" : {
                "type" : "string",
                "example" : "boolean"
              },
              "feedback" : {
                "type" : "string",
                "example" : "boolean"
              },
              "group_hd" : {
                "type" : "string",
                "example" : "boolean"
              },
              "original_audio" : {
                "type" : "string",
                "example" : "boolean"
              },
              "p2p_connetion" : {
                "type" : "string",
                "example" : "boolean"
              },
              "p2p_ports" : {
                "type" : "string",
                "example" : "boolean"
              },
              "polling" : {
                "type" : "string",
                "example" : "boolean"
              },
              "ports_range" : {
                "type" : "string",
                "example" : "string"
              },
              "post_meeting_feedback" : {
                "type" : "string",
                "example" : "boolean"
              },
              "private_chat" : {
                "type" : "string",
                "example" : "boolean"
              },
              "record_play_own_voice" : {
                "type" : "string",
                "example" : "boolean"
              },
              "remote_control" : {
                "type" : "string",
                "example" : "boolean"
              },
              "screen_sharing" : {
                "type" : "string",
                "example" : "boolean"
              },
              "sending_default_email_invites" : {
                "type" : "string",
                "example" : "boolean"
              },
              "show_meeting_control_toolbar" : {
                "type" : "string",
                "example" : "boolean"
              },
              "stereo_audio" : {
                "type" : "string",
                "example" : "boolean"
              },
              "use_html_format_email" : {
                "type" : "string",
                "example" : "boolean"
              },
              "virtual_background" : {
                "type" : "string",
                "example" : "boolean"
              },
              "watermark" : {
                "type" : "string",
                "example" : "boolean"
              },
              "webinar_question_answer" : {
                "type" : "string",
                "example" : "boolean"
              },
              "whiteboard" : {
                "type" : "string",
                "example" : "boolean"
              }
            }
          },
          "integration" : {
            "type" : "object",
            "properties" : {
              "box" : {
                "type" : "string",
                "example" : "boolean"
              },
              "dropbox" : {
                "type" : "string",
                "example" : "boolean"
              },
              "google_calendar" : {
                "type" : "string",
                "example" : "boolean"
              },
              "google_drive" : {
                "type" : "string",
                "example" : "boolean"
              },
              "kubi" : {
                "type" : "string",
                "example" : "boolean"
              },
              "microsoft_one_drive" : {
                "type" : "string",
                "example" : "boolean"
              }
            }
          },
          "recording" : {
            "type" : "object",
            "properties" : {
              "account_user_access_recording" : {
                "type" : "string",
                "example" : "boolean"
              },
              "auto_delete_cmr" : {
                "type" : "string",
                "example" : "boolean"
              },
              "auto_delete_cmr_days" : {
                "type" : "string",
                "example" : "integer"
              },
              "auto_recording" : {
                "type" : "string",
                "example" : "string"
              },
              "cloud_recording" : {
                "type" : "string",
                "example" : "boolean"
              },
              "cloud_recording_download" : {
                "type" : "string",
                "example" : "boolean"
              },
              "cloud_recording_download_host" : {
                "type" : "string",
                "example" : "boolean"
              },
              "local_recording" : {
                "type" : "string",
                "example" : "boolean"
              },
              "record_audio_file" : {
                "type" : "string",
                "example" : "boolean"
              },
              "record_gallery_view" : {
                "type" : "string",
                "example" : "boolean"
              },
              "record_speaker_view" : {
                "type" : "string",
                "example" : "boolean"
              },
              "recording_audio_transcript" : {
                "type" : "string",
                "example" : "boolean"
              },
              "save_chat_text" : {
                "type" : "string",
                "example" : "boolean"
              },
              "show_timestamp" : {
                "type" : "string",
                "example" : "boolean"
              }
            }
          },
          "schedule_meeting" : {
            "type" : "object",
            "properties" : {
              "audio_type" : {
                "type" : "string",
                "example" : "string"
              },
              "enforce_login" : {
                "type" : "string",
                "example" : "boolean"
              },
              "enforce_login_domains" : {
                "type" : "string",
                "example" : "string"
              },
              "enforce_login_with_domains" : {
                "type" : "string",
                "example" : "boolean"
              },
              "force_pmi_jbh_password" : {
                "type" : "string",
                "example" : "boolean"
              },
              "host_video" : {
                "type" : "string",
                "example" : "boolean"
              },
              "join_before_host" : {
                "type" : "string",
                "example" : "boolean"
              },
              "not_store_meeting_topic" : {
                "type" : "string",
                "example" : "boolean"
              },
              "participant_video" : {
                "type" : "string",
                "example" : "boolean"
              },
              "require_password_for_instant_meetings" : {
                "type" : "string",
                "example" : "boolean"
              },
              "require_password_for_pmi_meetings" : {
                "type" : "string",
                "example" : "string"
              },
              "require_password_for_scheduled_meetings" : {
                "type" : "string",
                "example" : "boolean"
              },
              "require_password_for_scheduling_new_meetings" : {
                "type" : "string",
                "example" : "boolean"
              },
              "use_pmi_for_instant_meetings" : {
                "type" : "string",
                "example" : "boolean"
              },
              "use_pmi_for_scheduled_meetings" : {
                "type" : "string",
                "example" : "boolean"
              }
            }
          },
          "security" : {
            "type" : "object",
            "properties" : {
              "admin_change_name_pic" : {
                "type" : "string",
                "example" : "boolean"
              },
              "hide_billing_info" : {
                "type" : "string",
                "example" : "boolean"
              },
              "import_photos_from_devices" : {
                "type" : "string",
                "example" : "boolean"
              }
            }
          },
          "telephony" : {
            "type" : "object",
            "properties" : {
              "audio_conference_info" : {
                "type" : "string",
                "example" : "string"
              },
              "third_party_audio" : {
                "type" : "string",
                "example" : "boolean"
              }
            }
          },
          "tsp" : {
            "type" : "object",
            "properties" : {
              "call_out" : {
                "type" : "string",
                "example" : "boolean"
              },
              "call_out_countries" : {
                "type" : "array",
                "example" : [ "string" ],
                "items" : {
                  "type" : "string",
                  "example" : "string"
                }
              },
              "display_toll_free_numbers" : {
                "type" : "string",
                "example" : "boolean"
              },
              "show_international_numbers_link" : {
                "type" : "string",
                "example" : "boolean"
              }
            }
          },
          "zoom_rooms" : {
            "type" : "object",
            "properties" : {
              "auto_start_stop_scheduled_meetings" : {
                "type" : "string",
                "example" : "boolean"
              },
              "cmr_for_instant_meeting" : {
                "type" : "string",
                "example" : "boolean"
              },
              "force_private_meeting" : {
                "type" : "string",
                "example" : "boolean"
              },
              "hide_host_information" : {
                "type" : "string",
                "example" : "boolean"
              },
              "list_meetings_with_calendar" : {
                "type" : "string",
                "example" : "boolean"
              },
              "start_airplay_manually" : {
                "type" : "string",
                "example" : "boolean"
              },
              "ultrasonic" : {
                "type" : "string",
                "example" : "boolean"
              },
              "upcoming_meeting_alert" : {
                "type" : "string",
                "example" : "boolean"
              },
              "weekly_system_restart" : {
                "type" : "string",
                "example" : "boolean"
              },
              "zr_post_meeting_feedback" : {
                "type" : "string",
                "example" : "boolean"
              }
            }
          }
        }
      },
      "inline_response_201_3" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "_Tcj7354w6eHw"
          },
          "is_default" : {
            "type" : "boolean",
            "example" : false
          },
          "name" : {
            "type" : "string",
            "example" : "u=mdbhhfg3y7&fm=2fdjs0.jpg"
          },
          "size" : {
            "type" : "number",
            "example" : 53434
          },
          "type" : {
            "type" : "string",
            "example" : "image"
          }
        }
      },
      "inline_response_200_11" : {
        "type" : "object",
        "properties" : {
          "callout_countries" : {
            "type" : "array",
            "example" : [ {
              "code" : "1",
              "id" : "US",
              "name" : "United States"
            }, {
              "code" : "1",
              "id" : "CA",
              "name" : "Canada"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "string",
                  "example" : "1"
                },
                "id" : {
                  "type" : "string",
                  "example" : "US"
                },
                "name" : {
                  "type" : "string",
                  "example" : "United States"
                }
              }
            }
          },
          "total_records" : {
            "type" : "number",
            "example" : 2
          }
        }
      },
      "inline_response_201_4" : {
        "type" : "object",
        "properties" : {
          "callout_countries" : {
            "type" : "array",
            "example" : [ {
              "code" : "1",
              "id" : "US",
              "name" : "United States"
            }, {
              "code" : "1",
              "id" : "CA",
              "name" : "Canada"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "string",
                  "example" : "1"
                },
                "id" : {
                  "type" : "string",
                  "example" : "US"
                },
                "name" : {
                  "type" : "string",
                  "example" : "United States"
                }
              }
            }
          }
        }
      },
      "inline_response_200_12" : {
        "type" : "object",
        "properties" : {
          "internal_numbers" : {
            "type" : "array",
            "example" : [ {
              "allow_for_external_meetings" : false,
              "allow_join" : true,
              "country" : "pariatur ex",
              "display_number" : "commodo nulla dolore",
              "labels" : "adipisicing dolore esse",
              "languages" : "en-GB",
              "number" : "enim consectetur",
              "type" : 1,
              "visible" : true
            }, {
              "allow_for_external_meetings" : false,
              "allow_join" : true,
              "country" : "tempor ex Duis in aute",
              "display_number" : "ullamco in",
              "labels" : "exercitation laboris",
              "languages" : "en-GB",
              "number" : "consectetur laboris m",
              "type" : 1,
              "visible" : true
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "allow_for_external_meetings" : {
                  "type" : "boolean",
                  "example" : false
                },
                "allow_join" : {
                  "type" : "boolean",
                  "example" : true
                },
                "country" : {
                  "type" : "string",
                  "example" : "pariatur ex"
                },
                "display_number" : {
                  "type" : "string",
                  "example" : "commodo nulla dolore"
                },
                "labels" : {
                  "type" : "string",
                  "example" : "adipisicing dolore esse"
                },
                "languages" : {
                  "type" : "string",
                  "example" : "en-GB"
                },
                "number" : {
                  "type" : "string",
                  "example" : "enim consectetur"
                },
                "type" : {
                  "type" : "number",
                  "example" : 1
                },
                "visible" : {
                  "type" : "boolean",
                  "example" : true
                }
              }
            }
          },
          "next_page_token" : {
            "type" : "string",
            "example" : "eu ad ex enim eiusmod"
          },
          "page_size" : {
            "type" : "number",
            "example" : 30
          },
          "total_records" : {
            "type" : "number",
            "example" : -30798311
          }
        }
      },
      "inline_response_201_5" : {
        "type" : "object",
        "properties" : {
          "internal_numbers" : {
            "type" : "array",
            "example" : [ {
              "allow_join" : true,
              "country" : "US",
              "display_number" : "+1 646 666 1110",
              "id" : "A26fhgdfg63",
              "labels" : "SIP-Internal",
              "languages" : "en-GB",
              "number" : "+16466661110",
              "type" : 0,
              "visible" : true
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "allow_join" : {
                  "type" : "boolean",
                  "example" : true
                },
                "country" : {
                  "type" : "string",
                  "example" : "US"
                },
                "display_number" : {
                  "type" : "string",
                  "example" : "+1 646 666 1110"
                },
                "id" : {
                  "type" : "string",
                  "example" : "A26fhgdfg63"
                },
                "labels" : {
                  "type" : "string",
                  "example" : "SIP-Internal"
                },
                "languages" : {
                  "type" : "string",
                  "example" : "en-GB"
                },
                "number" : {
                  "type" : "string",
                  "example" : "+16466661110"
                },
                "type" : {
                  "type" : "number",
                  "example" : 0
                },
                "visible" : {
                  "type" : "boolean",
                  "example" : true
                }
              }
            }
          }
        }
      },
      "inline_response_200_13" : {
        "type" : "object",
        "properties" : {
          "sip_trunks" : {
            "type" : "array",
            "example" : [ {
              "dnis" : "90001258",
              "id" : "268",
              "name" : "test1",
              "number_prefix" : "0",
              "sip_server_address" : "111.111.1.1"
            }, {
              "dnis" : "80001748",
              "id" : "281",
              "name" : "test2",
              "number_prefix" : "0",
              "sip_server_address" : "111.111.1.34"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "dnis" : {
                  "type" : "string",
                  "example" : "90001258"
                },
                "id" : {
                  "type" : "string",
                  "example" : "268"
                },
                "name" : {
                  "type" : "string",
                  "example" : "test1"
                },
                "number_prefix" : {
                  "type" : "string",
                  "example" : "0"
                },
                "sip_server_address" : {
                  "type" : "string",
                  "example" : "111.111.1.1"
                }
              }
            }
          },
          "total_records" : {
            "type" : "number",
            "example" : 1
          }
        }
      },
      "inline_response_201_6" : {
        "type" : "object",
        "properties" : {
          "sip_trunks" : {
            "type" : "array",
            "example" : [ {
              "dnis" : "dolore43tr4u",
              "id" : "represdf324fe",
              "name" : "HQ-trunk",
              "number_prefix" : "0",
              "sip_server_address" : "1.11.123.123"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "dnis" : {
                  "type" : "string",
                  "example" : "dolore43tr4u"
                },
                "id" : {
                  "type" : "string",
                  "example" : "represdf324fe"
                },
                "name" : {
                  "type" : "string",
                  "example" : "HQ-trunk"
                },
                "number_prefix" : {
                  "type" : "string",
                  "example" : "0"
                },
                "sip_server_address" : {
                  "type" : "string",
                  "example" : "1.11.123.123"
                }
              }
            }
          }
        }
      },
      "inline_response_200_14" : {
        "type" : "object",
        "properties" : {
          "trusted_domains" : {
            "type" : "array",
            "example" : [ "adipisicing dolor dolore", "culpa" ],
            "items" : {
              "type" : "string",
              "example" : "adipisicing dolor dolore"
            }
          }
        }
      },
      "inline_response_200_15" : {
        "type" : "object",
        "properties" : {
          "from" : {
            "type" : "string",
            "example" : "2021-03-11T05:41:36Z"
          },
          "meetings" : {
            "type" : "array",
            "example" : [ {
              "archive_files" : [ {
                "download_url" : "https://zoom.us/rec/archive/download/snGardfsw3435SKIsXAMhJ6wh",
                "file_extension" : "M4A",
                "file_size" : 165743,
                "file_type" : "M4A",
                "id" : "55hfgsd-sd8e2bd7255",
                "recording_type" : "audio_only",
                "status" : "completed"
              }, {
                "download_url" : "https://zoom.us/rec/archive/download/eXy782Ua9dghjhPvao.bUFwLAgQrFOjfOjr",
                "file_extension" : "MP4",
                "file_size" : 198720,
                "file_type" : "MP4",
                "id" : "9c5daa5b-34a1-40e8-8947-a11be5e373a7",
                "recording_type" : "shared_screen_with_speaker_view",
                "status" : "completed"
              } ],
              "duration" : 3,
              "host_id" : "Dhjdfgdkg8w",
              "id" : 553068284,
              "recording_count" : 2,
              "start_time" : "2021-03-12T01:57:27Z",
              "timezone" : "",
              "topic" : "Zoom Meeting",
              "total_size" : 364463,
              "type" : 1,
              "uuid" : "yO3dfhh3t467UkQ=="
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "archive_files" : {
                  "type" : "array",
                  "example" : [ {
                    "download_url" : "https://zoom.us/rec/archive/download/snGardfsw3435SKIsXAMhJ6wh",
                    "file_extension" : "M4A",
                    "file_size" : 165743,
                    "file_type" : "M4A",
                    "id" : "55hfgsd-sd8e2bd7255",
                    "recording_type" : "audio_only",
                    "status" : "completed"
                  }, {
                    "download_url" : "https://zoom.us/rec/archive/download/eXy782Ua9dghjhPvao.bUFwLAgQrFOjfOjr",
                    "file_extension" : "MP4",
                    "file_size" : 198720,
                    "file_type" : "MP4",
                    "id" : "9c5daa5b-34a1-40e8-8947-a11be5e373a7",
                    "recording_type" : "shared_screen_with_speaker_view",
                    "status" : "completed"
                  } ],
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "download_url" : {
                        "type" : "string",
                        "example" : "https://zoom.us/rec/archive/download/snGardfsw3435SKIsXAMhJ6wh"
                      },
                      "file_extension" : {
                        "type" : "string",
                        "example" : "M4A"
                      },
                      "file_size" : {
                        "type" : "number",
                        "example" : 165743
                      },
                      "file_type" : {
                        "type" : "string",
                        "example" : "M4A"
                      },
                      "id" : {
                        "type" : "string",
                        "example" : "55hfgsd-sd8e2bd7255"
                      },
                      "recording_type" : {
                        "type" : "string",
                        "example" : "audio_only"
                      },
                      "status" : {
                        "type" : "string",
                        "example" : "completed"
                      }
                    }
                  }
                },
                "duration" : {
                  "type" : "number",
                  "example" : 3
                },
                "host_id" : {
                  "type" : "string",
                  "example" : "Dhjdfgdkg8w"
                },
                "id" : {
                  "type" : "number",
                  "example" : 553068284
                },
                "recording_count" : {
                  "type" : "number",
                  "example" : 2
                },
                "start_time" : {
                  "type" : "string",
                  "example" : "2021-03-12T01:57:27Z"
                },
                "timezone" : {
                  "type" : "string",
                  "example" : ""
                },
                "topic" : {
                  "type" : "string",
                  "example" : "Zoom Meeting"
                },
                "total_size" : {
                  "type" : "number",
                  "example" : 364463
                },
                "type" : {
                  "type" : "number",
                  "example" : 1
                },
                "uuid" : {
                  "type" : "string",
                  "example" : "yO3dfhh3t467UkQ=="
                }
              }
            }
          },
          "next_page_token" : {
            "type" : "string",
            "example" : ""
          },
          "page_size" : {
            "type" : "number",
            "example" : 30
          },
          "to" : {
            "type" : "string",
            "example" : "2021-03-18T05:41:36Z"
          }
        }
      },
      "inline_response_200_16" : {
        "type" : "object",
        "properties" : {
          "contacts" : {
            "type" : "array",
            "example" : [ {
              "direct_numbers" : [ 111111, 222222 ],
              "email" : "qui@djfsd.sdfjhdf",
              "extension_number" : "010",
              "first_name" : "John",
              "id" : "isds324bdfsf",
              "im_group_id" : "fhksdhfew34hjds",
              "im_group_name" : "Engineering",
              "last_name" : "Doe",
              "phone_number" : "00000000",
              "presence_status" : "Offline",
              "sip_phone_number" : "11111111"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "direct_numbers" : {
                  "type" : "array",
                  "example" : [ 111111, 222222 ],
                  "items" : {
                    "type" : "number",
                    "example" : 111111
                  }
                },
                "email" : {
                  "type" : "string",
                  "example" : "qui@djfsd.sdfjhdf"
                },
                "extension_number" : {
                  "type" : "string",
                  "example" : "010"
                },
                "first_name" : {
                  "type" : "string",
                  "example" : "John"
                },
                "id" : {
                  "type" : "string",
                  "example" : "isds324bdfsf"
                },
                "im_group_id" : {
                  "type" : "string",
                  "example" : "fhksdhfew34hjds"
                },
                "im_group_name" : {
                  "type" : "string",
                  "example" : "Engineering"
                },
                "last_name" : {
                  "type" : "string",
                  "example" : "Doe"
                },
                "phone_number" : {
                  "type" : "string",
                  "example" : "00000000"
                },
                "presence_status" : {
                  "type" : "string",
                  "example" : "Offline"
                },
                "sip_phone_number" : {
                  "type" : "string",
                  "example" : "11111111"
                }
              }
            }
          },
          "next_page_token" : {
            "type" : "string",
            "example" : " "
          },
          "page_size" : {
            "type" : "number",
            "example" : 1
          }
        }
      },
      "inline_response_200_17" : {
        "type" : "object",
        "properties" : {
          "agenda" : {
            "type" : "string",
            "example" : "API overview"
          },
          "created_at" : {
            "type" : "string",
            "example" : "2019-09-09T15:54:24Z"
          },
          "duration" : {
            "type" : "number",
            "example" : 60
          },
          "host_id" : {
            "type" : "string",
            "example" : "ABcdofjdogh11111"
          },
          "id" : {
            "type" : "number",
            "example" : 1234555466
          },
          "join_url" : {
            "type" : "string",
            "example" : "https://zoom.us/j/1234555466"
          },
          "settings" : {
            "type" : "object",
            "properties" : {
              "alternative_hosts" : {
                "type" : "string",
                "example" : "kjxckfjxgfgjdfk@dkjfhdskhf.com"
              },
              "approval_type" : {
                "type" : "number",
                "example" : 2
              },
              "audio" : {
                "type" : "string",
                "example" : "both"
              },
              "auto_recording" : {
                "type" : "string",
                "example" : "local"
              },
              "close_registration" : {
                "type" : "boolean",
                "example" : false
              },
              "cn_meeting" : {
                "type" : "boolean",
                "example" : false
              },
              "enforce_login" : {
                "type" : "boolean",
                "example" : false
              },
              "enforce_login_domains" : {
                "type" : "string",
                "example" : "mycompanydomain.com"
              },
              "global_dial_in_countries" : {
                "type" : "array",
                "example" : [ "US" ],
                "items" : {
                  "type" : "string",
                  "example" : "US"
                }
              },
              "global_dial_in_numbers" : {
                "type" : "array",
                "example" : [ {
                  "city" : "New York",
                  "country" : "US",
                  "country_name" : "US",
                  "number" : "+1 000011100",
                  "type" : "toll"
                }, {
                  "city" : "San Jose",
                  "country" : "US",
                  "country_name" : "US",
                  "number" : "+1 6699006833",
                  "type" : "toll"
                }, {
                  "city" : "San Jose",
                  "country" : "US",
                  "country_name" : "US",
                  "number" : "+1 221122112211",
                  "type" : "toll"
                } ],
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "city" : {
                      "type" : "string",
                      "example" : "New York"
                    },
                    "country" : {
                      "type" : "string",
                      "example" : "US"
                    },
                    "country_name" : {
                      "type" : "string",
                      "example" : "US"
                    },
                    "number" : {
                      "type" : "string",
                      "example" : "+1 000011100"
                    },
                    "type" : {
                      "type" : "string",
                      "example" : "toll"
                    }
                  }
                }
              },
              "host_video" : {
                "type" : "boolean",
                "example" : false
              },
              "in_meeting" : {
                "type" : "boolean",
                "example" : false
              },
              "join_before_host" : {
                "type" : "boolean",
                "example" : true
              },
              "mute_upon_entry" : {
                "type" : "boolean",
                "example" : false
              },
              "participant_video" : {
                "type" : "boolean",
                "example" : false
              },
              "registrants_confirmation_email" : {
                "type" : "boolean",
                "example" : true
              },
              "registrants_email_notification" : {
                "type" : "boolean",
                "example" : true
              },
              "use_pmi" : {
                "type" : "boolean",
                "example" : false
              },
              "waiting_room" : {
                "type" : "boolean",
                "example" : false
              },
              "watermark" : {
                "type" : "boolean",
                "example" : false
              }
            }
          },
          "start_time" : {
            "type" : "string",
            "example" : "2019-08-30T22:00:00Z"
          },
          "start_url" : {
            "type" : "string",
            "example" : "https://zoom.us/1234555466/cdknfdffgggdfg4MDUxNjY0LCJpYXQiOjE1NjgwNDQ0NjQsImFpZCI6IjRBOWR2QkRqVHphd2J0amxoejNQZ1EiLCJjaWQiOiIifQ.Pz_msGuQwtylTtYQ"
          },
          "status" : {
            "type" : "string",
            "example" : "waiting"
          },
          "timezone" : {
            "type" : "string",
            "example" : "America/New_York"
          },
          "topic" : {
            "type" : "string",
            "example" : "My API Test"
          },
          "type" : {
            "type" : "number",
            "example" : 2
          },
          "uuid" : {
            "type" : "string",
            "example" : "iAABBBcccdddd7A=="
          }
        }
      },
      "inline_response_201_7" : {
        "type" : "object",
        "properties" : {
          "polls" : {
            "type" : "array",
            "example" : [ {
              "id" : "ex eiusmod",
              "questions" : [ {
                "answers" : [ "est officia", "dolor amet consectetur ad", "irure consectetur enim commodo" ],
                "name" : "in mollit cillum adipisicing ullamco",
                "type" : "consectetur magna et"
              }, {
                "answers" : [ "ut ut", "non pariatur dolore eiusmod consectetur", "pariatur deserunt in dolore et", "deserunt exercitation incididunt nostrud dolore", "dolor sit in laboris eiusmod" ],
                "name" : "non proident dolor eiusmod consectetur",
                "type" : "et deserunt nisi "
              }, {
                "answers" : [ "dolor mollit", "dolore Lorem voluptate" ],
                "name" : "minim",
                "type" : "velit labore"
              } ],
              "status" : "Excepteur Lorem dolor exercitation",
              "title" : "in dolore culpa ad qui"
            }, {
              "id" : "mollit do",
              "questions" : [ {
                "answers" : [ "culpa ", "aliquip dolore" ],
                "name" : "exercitation consectetur officia do",
                "type" : "id ex consequat culpa"
              }, {
                "answers" : [ "ullamco consequat ut id esse", "veniam eiusmod anim laborum" ],
                "name" : "proident ad",
                "type" : "Lorem nostrud nulla"
              }, {
                "answers" : [ "nostrud voluptate eu velit", "non labore dolor ad eiusmod", "vo" ],
                "name" : "sint cillum ut",
                "type" : "in enim"
              }, {
                "answers" : [ "sunt voluptate", "reprehenderit ea", "sunt aute", "elit" ],
                "name" : "eu ullamco",
                "type" : "anim dolor sunt"
              }, {
                "answers" : [ "nulla Duis" ],
                "name" : "sit enim consequat cupidatat",
                "type" : "cillum adipisicing"
              } ],
              "status" : "deserunt id occaecat nisi qui",
              "title" : "est incididunt in dolore tempor"
            }, {
              "id" : "qui ",
              "questions" : [ {
                "answers" : [ "laboris laborum", "nostrud sit dolore veniam", "sunt commodo amet dolor ex" ],
                "name" : "ullamco et pariatur",
                "type" : "proident"
              }, {
                "answers" : [ "anim magna ut Lorem" ],
                "name" : "adipisicing dolor culpa commodo",
                "type" : "aliquip veniam"
              }, {
                "answers" : [ "sunt dolor Excepteur amet ", "qui pariatur esse id fugiat", "aliquip" ],
                "name" : "laborum nisi",
                "type" : "in Duis qui Excepteur aute"
              } ],
              "status" : "ut Ut esse",
              "title" : "ullamco dolore"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "example" : "ex eiusmod"
                },
                "questions" : {
                  "type" : "array",
                  "example" : [ {
                    "answers" : [ "est officia", "dolor amet consectetur ad", "irure consectetur enim commodo" ],
                    "name" : "in mollit cillum adipisicing ullamco",
                    "type" : "consectetur magna et"
                  }, {
                    "answers" : [ "ut ut", "non pariatur dolore eiusmod consectetur", "pariatur deserunt in dolore et", "deserunt exercitation incididunt nostrud dolore", "dolor sit in laboris eiusmod" ],
                    "name" : "non proident dolor eiusmod consectetur",
                    "type" : "et deserunt nisi "
                  }, {
                    "answers" : [ "dolor mollit", "dolore Lorem voluptate" ],
                    "name" : "minim",
                    "type" : "velit labore"
                  } ],
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "answers" : {
                        "type" : "array",
                        "example" : [ "est officia", "dolor amet consectetur ad", "irure consectetur enim commodo" ],
                        "items" : {
                          "type" : "string",
                          "example" : "est officia"
                        }
                      },
                      "name" : {
                        "type" : "string",
                        "example" : "in mollit cillum adipisicing ullamco"
                      },
                      "type" : {
                        "type" : "string",
                        "example" : "consectetur magna et"
                      }
                    }
                  }
                },
                "status" : {
                  "type" : "string",
                  "example" : "Excepteur Lorem dolor exercitation"
                },
                "title" : {
                  "type" : "string",
                  "example" : "in dolore culpa ad qui"
                }
              }
            }
          }
        }
      },
      "inline_response_200_18" : {
        "type" : "object",
        "properties" : {
          "invitation" : {
            "type" : "string",
            "example" : "Shrijana G is inviting you to a scheduled Zoom meeting.\r\n\r\nTopic: MyTestMeeting\r\nTime: Jul 31, 2019 04:00 PM Pacific Time (US and Canada)\r\n\r\nJoin Zoom Meeting\r\nhttps://zoom.us/j/000000\r\n\r\nOne tap mobile\r\n+000000"
          }
        }
      },
      "inline_response_200_19" : {
        "type" : "object",
        "properties" : {
          "page_count" : {
            "type" : "number",
            "example" : 1
          },
          "page_number" : {
            "type" : "number",
            "example" : 1
          },
          "page_size" : {
            "type" : "number",
            "example" : 1
          },
          "registrants" : {
            "type" : "array",
            "example" : [ {
              "address" : "11111 Awesome St",
              "city" : "Paris",
              "comments" : "Love using Zoom APIs",
              "country" : "France",
              "create_time" : "2012-04-14T16:55:30.231Z",
              "custom_questions" : [ {
                "title" : "Did you enjoy the registration process?",
                "value" : "Yes, alot."
              }, {
                "title" : "Would you like to register for our next meeting?",
                "value" : "Absolutely."
              } ],
              "email" : "somemeail@emailprovider.com",
              "first_name" : "Tim",
              "id" : "zjkfsdfjdfhg",
              "industry" : "Tech",
              "job_title" : "Developer",
              "join_url" : "https://success.zoom.us/j/0000000000000",
              "last_name" : "S.",
              "no_of_employees" : "1-20",
              "org" : "Growth",
              "phone" : "00000",
              "purchasing_time_frame" : "Within a month",
              "role_in_purchase_process" : "Not involved",
              "state" : "Ile-de-France",
              "status" : "approved",
              "zip" : "11000"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "address" : {
                  "type" : "string",
                  "example" : "11111 Awesome St"
                },
                "city" : {
                  "type" : "string",
                  "example" : "Paris"
                },
                "comments" : {
                  "type" : "string",
                  "example" : "Love using Zoom APIs"
                },
                "country" : {
                  "type" : "string",
                  "example" : "France"
                },
                "create_time" : {
                  "type" : "string",
                  "example" : "2012-04-14T16:55:30.231Z"
                },
                "custom_questions" : {
                  "type" : "array",
                  "example" : [ {
                    "title" : "Did you enjoy the registration process?",
                    "value" : "Yes, alot."
                  }, {
                    "title" : "Would you like to register for our next meeting?",
                    "value" : "Absolutely."
                  } ],
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "title" : {
                        "type" : "string",
                        "example" : "Did you enjoy the registration process?"
                      },
                      "value" : {
                        "type" : "string",
                        "example" : "Yes, alot."
                      }
                    }
                  }
                },
                "email" : {
                  "type" : "string",
                  "example" : "somemeail@emailprovider.com"
                },
                "first_name" : {
                  "type" : "string",
                  "example" : "Tim"
                },
                "id" : {
                  "type" : "string",
                  "example" : "zjkfsdfjdfhg"
                },
                "industry" : {
                  "type" : "string",
                  "example" : "Tech"
                },
                "job_title" : {
                  "type" : "string",
                  "example" : "Developer"
                },
                "join_url" : {
                  "type" : "string",
                  "example" : "https://success.zoom.us/j/0000000000000"
                },
                "last_name" : {
                  "type" : "string",
                  "example" : "S."
                },
                "no_of_employees" : {
                  "type" : "string",
                  "example" : "1-20"
                },
                "org" : {
                  "type" : "string",
                  "example" : "Growth"
                },
                "phone" : {
                  "type" : "string",
                  "example" : "00000"
                },
                "purchasing_time_frame" : {
                  "type" : "string",
                  "example" : "Within a month"
                },
                "role_in_purchase_process" : {
                  "type" : "string",
                  "example" : "Not involved"
                },
                "state" : {
                  "type" : "string",
                  "example" : "Ile-de-France"
                },
                "status" : {
                  "type" : "string",
                  "example" : "approved"
                },
                "zip" : {
                  "type" : "string",
                  "example" : "11000"
                }
              }
            }
          },
          "total_records" : {
            "type" : "number",
            "example" : 1
          }
        }
      },
      "inline_response_201_8" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number",
            "example" : 85746065
          },
          "join_url" : {
            "type" : "string",
            "example" : "amet"
          },
          "registrant_id" : {
            "type" : "string",
            "example" : "a"
          },
          "start_time" : {
            "type" : "string",
            "example" : "culpa mollit"
          },
          "topic" : {
            "type" : "string",
            "example" : "reprehenderit ea ut ex Excepteur"
          }
        }
      },
      "inline_response_200_20" : {
        "type" : "object",
        "properties" : {
          "custom_questions" : {
            "type" : "array",
            "example" : [ {
              "required" : false,
              "title" : "How long have you been working?",
              "type" : "short"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "required" : {
                  "type" : "boolean",
                  "example" : false
                },
                "title" : {
                  "type" : "string",
                  "example" : "How long have you been working?"
                },
                "type" : {
                  "type" : "string",
                  "example" : "short"
                }
              }
            }
          },
          "questions" : {
            "type" : "array",
            "example" : [ {
              "field_name" : "address",
              "required" : true
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "field_name" : {
                  "type" : "string",
                  "example" : "address"
                },
                "required" : {
                  "type" : "boolean",
                  "example" : true
                }
              }
            }
          }
        }
      },
      "inline_response_200_21" : {
        "type" : "object",
        "properties" : {
          "client_feedbacks" : {
            "type" : "array",
            "example" : [ {
              "feedback_id" : "53532100000",
              "feedback_name" : "Poor audio quality.",
              "participants_count" : 1
            }, {
              "feedback_id" : "53532100000",
              "feedback_name" : "They could not hear us.",
              "participants_count" : 2
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "feedback_id" : {
                  "type" : "string",
                  "example" : "53532100000"
                },
                "feedback_name" : {
                  "type" : "string",
                  "example" : "Poor audio quality."
                },
                "participants_count" : {
                  "type" : "number",
                  "example" : 1
                }
              }
            }
          },
          "from" : {
            "type" : "string",
            "example" : "{}"
          },
          "to" : {
            "type" : "string",
            "example" : "{}"
          },
          "total_records" : {
            "type" : "number",
            "example" : 2
          }
        }
      },
      "inline_response_200_22" : {
        "type" : "object",
        "properties" : {
          "client_feedback_details" : {
            "type" : "array",
            "example" : [ {
              "email" : "hdfgjsfhdfbs@someemail.sdfkhjdf",
              "meeting_id" : "3789500000000",
              "participant_name" : "Meghan Styles",
              "time" : "2017-10-21T11:35:33.480Z"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "email" : {
                  "type" : "string",
                  "example" : "hdfgjsfhdfbs@someemail.sdfkhjdf"
                },
                "meeting_id" : {
                  "type" : "string",
                  "example" : "3789500000000"
                },
                "participant_name" : {
                  "type" : "string",
                  "example" : "Meghan Styles"
                },
                "time" : {
                  "type" : "string",
                  "example" : "2017-10-21T11:35:33.480Z"
                }
              }
            }
          },
          "from" : {
            "type" : "string",
            "example" : "{}"
          },
          "next_page_token" : {
            "type" : "string",
            "example" : "w7587w4eiyfsudgf"
          },
          "page_size" : {
            "type" : "number",
            "example" : 30
          },
          "to" : {
            "type" : "string",
            "example" : "{}"
          }
        }
      },
      "inline_response_200_23" : {
        "type" : "object",
        "properties" : {
          "client_satisfaction" : {
            "type" : "array",
            "example" : [ {
              "date" : { },
              "good_count" : 5,
              "none_count" : 0,
              "not_good_count" : 1,
              "satisfaction_percent" : 100
            }, {
              "date" : { },
              "good_count" : 0,
              "none_count" : 0,
              "not_good_count" : 0,
              "satisfaction_percent" : 100
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "date" : {
                  "type" : "string",
                  "example" : "{}"
                },
                "good_count" : {
                  "type" : "number",
                  "example" : 5
                },
                "none_count" : {
                  "type" : "number",
                  "example" : 0
                },
                "not_good_count" : {
                  "type" : "number",
                  "example" : 1
                },
                "satisfaction_percent" : {
                  "type" : "number",
                  "example" : 100
                }
              }
            }
          },
          "from" : {
            "type" : "string",
            "example" : "{}"
          },
          "to" : {
            "type" : "string",
            "example" : "{}"
          },
          "total_records" : {
            "type" : "number",
            "example" : 30
          }
        }
      },
      "inline_response_200_24" : {
        "type" : "object",
        "properties" : {
          "from" : {
            "type" : "string",
            "example" : "string [date]"
          },
          "meetings" : {
            "type" : "array",
            "example" : [ {
              "duration" : "string",
              "email" : "string",
              "end_time" : "string [date-time]",
              "has_3rd_party_audio" : "boolean",
              "has_pstn" : "boolean",
              "has_recording" : "boolean",
              "has_screen_share" : "boolean",
              "has_sip" : "boolean",
              "has_video" : "boolean",
              "has_voip" : "boolean",
              "host" : "string",
              "id" : "integer",
              "participants" : "integer",
              "start_time" : "string [date-time]",
              "topic" : "string",
              "user_type" : "string",
              "uuid" : "string [uuid]"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "duration" : {
                  "type" : "string",
                  "example" : "string"
                },
                "email" : {
                  "type" : "string",
                  "example" : "string"
                },
                "end_time" : {
                  "type" : "string",
                  "example" : "string [date-time]"
                },
                "has_3rd_party_audio" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "has_pstn" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "has_recording" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "has_screen_share" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "has_sip" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "has_video" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "has_voip" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "host" : {
                  "type" : "string",
                  "example" : "string"
                },
                "id" : {
                  "type" : "string",
                  "example" : "integer"
                },
                "participants" : {
                  "type" : "string",
                  "example" : "integer"
                },
                "start_time" : {
                  "type" : "string",
                  "example" : "string [date-time]"
                },
                "topic" : {
                  "type" : "string",
                  "example" : "string"
                },
                "user_type" : {
                  "type" : "string",
                  "example" : "string"
                },
                "uuid" : {
                  "type" : "string",
                  "example" : "string [uuid]"
                }
              }
            }
          },
          "next_page_token" : {
            "type" : "string",
            "example" : "string"
          },
          "page_count" : {
            "type" : "string",
            "example" : "integer"
          },
          "page_size" : {
            "type" : "string",
            "example" : "integer"
          },
          "to" : {
            "type" : "string",
            "example" : "string [date]"
          },
          "total_records" : {
            "type" : "string",
            "example" : "integer"
          }
        }
      },
      "inline_response_200_25" : {
        "type" : "object",
        "properties" : {
          "duration" : {
            "type" : "string",
            "example" : "30:00"
          },
          "email" : {
            "type" : "string",
            "example" : "so@djkfsfj.gh"
          },
          "end_time" : {
            "type" : "string",
            "example" : "2007-06-16T16:59:42.078Z"
          },
          "has_3rd_party_audio" : {
            "type" : "boolean",
            "example" : false
          },
          "has_pstn" : {
            "type" : "boolean",
            "example" : false
          },
          "has_recording" : {
            "type" : "boolean",
            "example" : false
          },
          "has_screen_share" : {
            "type" : "boolean",
            "example" : false
          },
          "has_sip" : {
            "type" : "boolean",
            "example" : false
          },
          "has_video" : {
            "type" : "boolean",
            "example" : false
          },
          "has_voip" : {
            "type" : "boolean",
            "example" : false
          },
          "host" : {
            "type" : "string",
            "example" : "cool host"
          },
          "id" : {
            "type" : "number",
            "example" : 33281536
          },
          "in_room_participants" : {
            "type" : "number",
            "example" : 3
          },
          "participants" : {
            "type" : "number",
            "example" : 4874645
          },
          "start_time" : {
            "type" : "string",
            "example" : "2007-06-16T16:55:42.078Z"
          },
          "topic" : {
            "type" : "string",
            "example" : "My meeting"
          },
          "user_type" : {
            "type" : "string",
            "example" : "Pro|Webinar100"
          },
          "uuid" : {
            "type" : "string",
            "example" : "carreter@-2c9b447f3"
          }
        }
      },
      "inline_response_200_26" : {
        "type" : "object",
        "properties" : {
          "next_page_token" : {
            "type" : "string",
            "example" : ""
          },
          "page_count" : {
            "type" : "number",
            "example" : 1
          },
          "page_size" : {
            "type" : "number",
            "example" : 30
          },
          "participants" : {
            "type" : "array",
            "example" : [ {
              "camera" : "FaceTime HD Camera",
              "connection_type" : "P2P",
              "data_center" : "SC",
              "device" : "WIN",
              "domain" : "Dojo-workspace",
              "harddisk_id" : "sed proident in",
              "id" : "d52f19c548b88490b5d16fcbd38",
              "ip_address" : "127.0.0.1",
              "join_time" : "2019-09-07T13:15:02.837Z",
              "leave_reason" : "Dojo left the meeting.<br>Reason: Host ended the meeting.",
              "leave_time" : "2019-09-07T13:15:09.837Z",
              "location" : "New York",
              "mac_addr" : " 00:0a:95:9d:68:16",
              "microphone" : "Plantronics BT600",
              "network_type" : "Wired",
              "pc_name" : "dojo's pc",
              "recording" : false,
              "share_application" : false,
              "share_desktop" : true,
              "share_whiteboard" : true,
              "speaker" : "Plantronics BT600",
              "status" : "in_waiting_room",
              "user_id" : "32dsfsd4g5gd",
              "user_name" : "dojo",
              "version" : "4.4.55383.0716"
            }, {
              "connection_type" : "UDP",
              "data_center" : "SC",
              "device" : "Android",
              "domain" : "Rea-workspace",
              "harddisk_id" : "",
              "id" : "z8aaaaaaCfp8uQ",
              "ip_address" : "120.000.000",
              "join_time" : "2019-08-02T15:31:48Z",
              "leave_reason" : "Rea left the meeting.<br>Reason: Host closed the meeting.",
              "leave_time" : "2019-08-02T16:04:12Z",
              "location" : "San Jose (US)",
              "mac_addr" : "",
              "network_type" : "Wifi",
              "pc_name" : "Rea's PC",
              "recording" : false,
              "share_application" : false,
              "share_desktop" : false,
              "share_whiteboard" : false,
              "user_id" : "1670000000",
              "user_name" : "Rea",
              "version" : "4.4.55383.0716"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "camera" : {
                  "type" : "string",
                  "example" : "FaceTime HD Camera"
                },
                "connection_type" : {
                  "type" : "string",
                  "example" : "P2P"
                },
                "data_center" : {
                  "type" : "string",
                  "example" : "SC"
                },
                "device" : {
                  "type" : "string",
                  "example" : "WIN"
                },
                "domain" : {
                  "type" : "string",
                  "example" : "Dojo-workspace"
                },
                "harddisk_id" : {
                  "type" : "string",
                  "example" : "sed proident in"
                },
                "id" : {
                  "type" : "string",
                  "example" : "d52f19c548b88490b5d16fcbd38"
                },
                "ip_address" : {
                  "type" : "string",
                  "example" : "127.0.0.1"
                },
                "join_time" : {
                  "type" : "string",
                  "example" : "2019-09-07T13:15:02.837Z"
                },
                "leave_reason" : {
                  "type" : "string",
                  "example" : "Dojo left the meeting.<br>Reason: Host ended the meeting."
                },
                "leave_time" : {
                  "type" : "string",
                  "example" : "2019-09-07T13:15:09.837Z"
                },
                "location" : {
                  "type" : "string",
                  "example" : "New York"
                },
                "mac_addr" : {
                  "type" : "string",
                  "example" : " 00:0a:95:9d:68:16"
                },
                "microphone" : {
                  "type" : "string",
                  "example" : "Plantronics BT600"
                },
                "network_type" : {
                  "type" : "string",
                  "example" : "Wired"
                },
                "pc_name" : {
                  "type" : "string",
                  "example" : "dojo's pc"
                },
                "recording" : {
                  "type" : "boolean",
                  "example" : false
                },
                "share_application" : {
                  "type" : "boolean",
                  "example" : false
                },
                "share_desktop" : {
                  "type" : "boolean",
                  "example" : true
                },
                "share_whiteboard" : {
                  "type" : "boolean",
                  "example" : true
                },
                "speaker" : {
                  "type" : "string",
                  "example" : "Plantronics BT600"
                },
                "status" : {
                  "type" : "string",
                  "example" : "in_waiting_room"
                },
                "user_id" : {
                  "type" : "string",
                  "example" : "32dsfsd4g5gd"
                },
                "user_name" : {
                  "type" : "string",
                  "example" : "dojo"
                },
                "version" : {
                  "type" : "string",
                  "example" : "4.4.55383.0716"
                }
              }
            }
          },
          "total_records" : {
            "type" : "number",
            "example" : 2
          }
        }
      },
      "inline_response_200_27" : {
        "type" : "object",
        "properties" : {
          "next_page_token" : {
            "type" : "string",
            "example" : "string"
          },
          "page_count" : {
            "type" : "string",
            "example" : "integer [int64]"
          },
          "page_size" : {
            "type" : "string",
            "example" : "integer"
          },
          "participants" : {
            "type" : "array",
            "example" : [ {
              "device" : "string",
              "domain" : "string",
              "harddisk_id" : "string",
              "ip_address" : "string",
              "join_time" : "string [date-time]",
              "leave_time" : "string [date-time]",
              "location" : "string",
              "mac_addr" : "string",
              "pc_name" : "string",
              "user_id" : "string [uuid]",
              "user_name" : "string",
              "user_qos" : [ {
                "as_input" : {
                  "avg_loss" : "string",
                  "bitrate" : "string",
                  "frame_rate" : "string",
                  "jitter" : "string",
                  "latency" : "string",
                  "max_loss" : "string",
                  "resolution" : "string"
                },
                "as_output" : {
                  "avg_loss" : "string",
                  "bitrate" : "string",
                  "frame_rate" : "string",
                  "jitter" : "string",
                  "latency" : "string",
                  "max_loss" : "string",
                  "resolution" : "string"
                },
                "audio_input" : {
                  "avg_loss" : "string",
                  "bitrate" : "string",
                  "jitter" : "string",
                  "latency" : "string",
                  "max_loss" : "string"
                },
                "audio_output" : {
                  "avg_loss" : "string",
                  "bitrate" : "string",
                  "jitter" : "string",
                  "latency" : "string",
                  "max_loss" : "string"
                },
                "cpu_usage" : {
                  "system_max_cpu_usage" : "string",
                  "zoom_avg_cpu_usage" : "string",
                  "zoom_max_cpu_usage" : "string",
                  "zoom_min_cpu_usage" : "string"
                },
                "date_time" : "string [date-time]",
                "video_input" : {
                  "avg_loss" : "string",
                  "bitrate" : "string",
                  "frame_rate" : "string",
                  "jitter" : "string",
                  "latency" : "string",
                  "max_loss" : "string",
                  "resolution" : "string"
                },
                "video_output" : {
                  "avg_loss" : "string",
                  "bitrate" : "string",
                  "frame_rate" : "string",
                  "jitter" : "string",
                  "latency" : "string",
                  "max_loss" : "string",
                  "resolution" : "string"
                }
              } ],
              "version" : "string"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "device" : {
                  "type" : "string",
                  "example" : "string"
                },
                "domain" : {
                  "type" : "string",
                  "example" : "string"
                },
                "harddisk_id" : {
                  "type" : "string",
                  "example" : "string"
                },
                "ip_address" : {
                  "type" : "string",
                  "example" : "string"
                },
                "join_time" : {
                  "type" : "string",
                  "example" : "string [date-time]"
                },
                "leave_time" : {
                  "type" : "string",
                  "example" : "string [date-time]"
                },
                "location" : {
                  "type" : "string",
                  "example" : "string"
                },
                "mac_addr" : {
                  "type" : "string",
                  "example" : "string"
                },
                "pc_name" : {
                  "type" : "string",
                  "example" : "string"
                },
                "user_id" : {
                  "type" : "string",
                  "example" : "string [uuid]"
                },
                "user_name" : {
                  "type" : "string",
                  "example" : "string"
                },
                "user_qos" : {
                  "type" : "array",
                  "example" : [ {
                    "as_input" : {
                      "avg_loss" : "string",
                      "bitrate" : "string",
                      "frame_rate" : "string",
                      "jitter" : "string",
                      "latency" : "string",
                      "max_loss" : "string",
                      "resolution" : "string"
                    },
                    "as_output" : {
                      "avg_loss" : "string",
                      "bitrate" : "string",
                      "frame_rate" : "string",
                      "jitter" : "string",
                      "latency" : "string",
                      "max_loss" : "string",
                      "resolution" : "string"
                    },
                    "audio_input" : {
                      "avg_loss" : "string",
                      "bitrate" : "string",
                      "jitter" : "string",
                      "latency" : "string",
                      "max_loss" : "string"
                    },
                    "audio_output" : {
                      "avg_loss" : "string",
                      "bitrate" : "string",
                      "jitter" : "string",
                      "latency" : "string",
                      "max_loss" : "string"
                    },
                    "cpu_usage" : {
                      "system_max_cpu_usage" : "string",
                      "zoom_avg_cpu_usage" : "string",
                      "zoom_max_cpu_usage" : "string",
                      "zoom_min_cpu_usage" : "string"
                    },
                    "date_time" : "string [date-time]",
                    "video_input" : {
                      "avg_loss" : "string",
                      "bitrate" : "string",
                      "frame_rate" : "string",
                      "jitter" : "string",
                      "latency" : "string",
                      "max_loss" : "string",
                      "resolution" : "string"
                    },
                    "video_output" : {
                      "avg_loss" : "string",
                      "bitrate" : "string",
                      "frame_rate" : "string",
                      "jitter" : "string",
                      "latency" : "string",
                      "max_loss" : "string",
                      "resolution" : "string"
                    }
                  } ],
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "as_input" : {
                        "type" : "object",
                        "properties" : {
                          "avg_loss" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "bitrate" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "frame_rate" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "jitter" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "latency" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "max_loss" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "resolution" : {
                            "type" : "string",
                            "example" : "string"
                          }
                        }
                      },
                      "as_output" : {
                        "type" : "object",
                        "properties" : {
                          "avg_loss" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "bitrate" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "frame_rate" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "jitter" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "latency" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "max_loss" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "resolution" : {
                            "type" : "string",
                            "example" : "string"
                          }
                        }
                      },
                      "audio_input" : {
                        "type" : "object",
                        "properties" : {
                          "avg_loss" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "bitrate" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "jitter" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "latency" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "max_loss" : {
                            "type" : "string",
                            "example" : "string"
                          }
                        }
                      },
                      "audio_output" : {
                        "type" : "object",
                        "properties" : {
                          "avg_loss" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "bitrate" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "jitter" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "latency" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "max_loss" : {
                            "type" : "string",
                            "example" : "string"
                          }
                        }
                      },
                      "cpu_usage" : {
                        "type" : "object",
                        "properties" : {
                          "system_max_cpu_usage" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "zoom_avg_cpu_usage" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "zoom_max_cpu_usage" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "zoom_min_cpu_usage" : {
                            "type" : "string",
                            "example" : "string"
                          }
                        }
                      },
                      "date_time" : {
                        "type" : "string",
                        "example" : "string [date-time]"
                      },
                      "video_input" : {
                        "type" : "object",
                        "properties" : {
                          "avg_loss" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "bitrate" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "frame_rate" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "jitter" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "latency" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "max_loss" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "resolution" : {
                            "type" : "string",
                            "example" : "string"
                          }
                        }
                      },
                      "video_output" : {
                        "type" : "object",
                        "properties" : {
                          "avg_loss" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "bitrate" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "frame_rate" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "jitter" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "latency" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "max_loss" : {
                            "type" : "string",
                            "example" : "string"
                          },
                          "resolution" : {
                            "type" : "string",
                            "example" : "string"
                          }
                        }
                      }
                    }
                  }
                },
                "version" : {
                  "type" : "string",
                  "example" : "string"
                }
              }
            }
          },
          "total_records" : {
            "type" : "string",
            "example" : "integer [int64]"
          }
        }
      },
      "inline_response_200_28" : {
        "type" : "object",
        "properties" : {
          "next_page_token" : {
            "type" : "string",
            "example" : ""
          },
          "page_size" : {
            "type" : "number",
            "example" : 1
          },
          "participants" : {
            "type" : "array",
            "example" : [ {
              "date_time" : "2021-02-21T18:48:06.423Z",
              "email" : "RB6iBb@aWlMmuZFPVjptyOCzNgpi.mx",
              "quality" : "GOOD",
              "user_id" : "aegr46312rum"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "date_time" : {
                  "type" : "string",
                  "example" : "2021-02-21T18:48:06.423Z"
                },
                "email" : {
                  "type" : "string",
                  "example" : "RB6iBb@aWlMmuZFPVjptyOCzNgpi.mx"
                },
                "quality" : {
                  "type" : "string",
                  "example" : "GOOD"
                },
                "user_id" : {
                  "type" : "string",
                  "example" : "aegr46312rum"
                }
              }
            }
          }
        }
      },
      "inline_response_200_29" : {
        "type" : "object",
        "properties" : {
          "next_page_token" : {
            "type" : "string",
            "example" : "string"
          },
          "page_count" : {
            "type" : "string",
            "example" : "integer"
          },
          "page_size" : {
            "type" : "string",
            "example" : "integer"
          },
          "participants" : {
            "type" : "array",
            "example" : [ {
              "details" : [ {
                "content" : "string",
                "end_time" : "string",
                "start_time" : "string"
              } ],
              "id" : "string",
              "user_id" : "string",
              "user_name" : "string"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "details" : {
                  "type" : "array",
                  "example" : [ {
                    "content" : "string",
                    "end_time" : "string",
                    "start_time" : "string"
                  } ],
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "content" : {
                        "type" : "string",
                        "example" : "string"
                      },
                      "end_time" : {
                        "type" : "string",
                        "example" : "string"
                      },
                      "start_time" : {
                        "type" : "string",
                        "example" : "string"
                      }
                    }
                  }
                },
                "id" : {
                  "type" : "string",
                  "example" : "string"
                },
                "user_id" : {
                  "type" : "string",
                  "example" : "string"
                },
                "user_name" : {
                  "type" : "string",
                  "example" : "string"
                }
              }
            }
          },
          "total_records" : {
            "type" : "string",
            "example" : "integer"
          }
        }
      },
      "inline_response_200_30" : {
        "type" : "object",
        "properties" : {
          "device" : {
            "type" : "string",
            "example" : "string"
          },
          "domain" : {
            "type" : "string",
            "example" : "string"
          },
          "harddisk_id" : {
            "type" : "string",
            "example" : "string"
          },
          "ip_address" : {
            "type" : "string",
            "example" : "string"
          },
          "join_time" : {
            "type" : "string",
            "example" : "string [date-time]"
          },
          "leave_time" : {
            "type" : "string",
            "example" : "string [date-time]"
          },
          "location" : {
            "type" : "string",
            "example" : "string"
          },
          "mac_addr" : {
            "type" : "string",
            "example" : "string"
          },
          "pc_name" : {
            "type" : "string",
            "example" : "string"
          },
          "user_id" : {
            "type" : "string",
            "example" : "string [uuid]"
          },
          "user_name" : {
            "type" : "string",
            "example" : "string"
          },
          "user_qos" : {
            "type" : "array",
            "example" : [ {
              "as_input" : {
                "avg_loss" : "string",
                "bitrate" : "string",
                "frame_rate" : "string",
                "jitter" : "string",
                "latency" : "string",
                "max_loss" : "string",
                "resolution" : "string"
              },
              "as_output" : {
                "avg_loss" : "string",
                "bitrate" : "string",
                "frame_rate" : "string",
                "jitter" : "string",
                "latency" : "string",
                "max_loss" : "string",
                "resolution" : "string"
              },
              "audio_input" : {
                "avg_loss" : "string",
                "bitrate" : "string",
                "jitter" : "string",
                "latency" : "string",
                "max_loss" : "string"
              },
              "audio_output" : {
                "avg_loss" : "string",
                "bitrate" : "string",
                "jitter" : "string",
                "latency" : "string",
                "max_loss" : "string"
              },
              "cpu_usage" : {
                "system_max_cpu_usage" : "string",
                "zoom_avg_cpu_usage" : "string",
                "zoom_max_cpu_usage" : "string",
                "zoom_min_cpu_usage" : "string"
              },
              "date_time" : "string [date-time]",
              "video_input" : {
                "avg_loss" : "string",
                "bitrate" : "string",
                "frame_rate" : "string",
                "jitter" : "string",
                "latency" : "string",
                "max_loss" : "string",
                "resolution" : "string"
              },
              "video_output" : {
                "avg_loss" : "string",
                "bitrate" : "string",
                "frame_rate" : "string",
                "jitter" : "string",
                "latency" : "string",
                "max_loss" : "string",
                "resolution" : "string"
              }
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "as_input" : {
                  "type" : "object",
                  "properties" : {
                    "avg_loss" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "bitrate" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "frame_rate" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "jitter" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "latency" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "max_loss" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "resolution" : {
                      "type" : "string",
                      "example" : "string"
                    }
                  }
                },
                "as_output" : {
                  "type" : "object",
                  "properties" : {
                    "avg_loss" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "bitrate" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "frame_rate" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "jitter" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "latency" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "max_loss" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "resolution" : {
                      "type" : "string",
                      "example" : "string"
                    }
                  }
                },
                "audio_input" : {
                  "type" : "object",
                  "properties" : {
                    "avg_loss" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "bitrate" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "jitter" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "latency" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "max_loss" : {
                      "type" : "string",
                      "example" : "string"
                    }
                  }
                },
                "audio_output" : {
                  "type" : "object",
                  "properties" : {
                    "avg_loss" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "bitrate" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "jitter" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "latency" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "max_loss" : {
                      "type" : "string",
                      "example" : "string"
                    }
                  }
                },
                "cpu_usage" : {
                  "type" : "object",
                  "properties" : {
                    "system_max_cpu_usage" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "zoom_avg_cpu_usage" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "zoom_max_cpu_usage" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "zoom_min_cpu_usage" : {
                      "type" : "string",
                      "example" : "string"
                    }
                  }
                },
                "date_time" : {
                  "type" : "string",
                  "example" : "string [date-time]"
                },
                "video_input" : {
                  "type" : "object",
                  "properties" : {
                    "avg_loss" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "bitrate" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "frame_rate" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "jitter" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "latency" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "max_loss" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "resolution" : {
                      "type" : "string",
                      "example" : "string"
                    }
                  }
                },
                "video_output" : {
                  "type" : "object",
                  "properties" : {
                    "avg_loss" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "bitrate" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "frame_rate" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "jitter" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "latency" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "max_loss" : {
                      "type" : "string",
                      "example" : "string"
                    },
                    "resolution" : {
                      "type" : "string",
                      "example" : "string"
                    }
                  }
                }
              }
            }
          },
          "version" : {
            "type" : "string",
            "example" : "string"
          }
        }
      },
      "inline_response_200_31" : {
        "type" : "object",
        "properties" : {
          "from" : {
            "type" : "string",
            "example" : "string [date]"
          },
          "next_page_token" : {
            "type" : "string",
            "example" : "string"
          },
          "page_count" : {
            "type" : "string",
            "example" : "integer"
          },
          "page_size" : {
            "type" : "string",
            "example" : "integer"
          },
          "to" : {
            "type" : "string",
            "example" : "string [date]"
          },
          "total_records" : {
            "type" : "string",
            "example" : "integer"
          },
          "webinars" : {
            "type" : "array",
            "example" : [ {
              "duration" : "string",
              "email" : "string",
              "end_time" : "string [date-time]",
              "has_3rd_party_audio" : "boolean",
              "has_pstn" : "boolean",
              "has_recording" : "boolean",
              "has_screen_share" : "boolean",
              "has_sip" : "boolean",
              "has_video" : "boolean",
              "has_voip" : "boolean",
              "host" : "string",
              "id" : "integer",
              "participants" : "integer",
              "start_time" : "string [date-time]",
              "topic" : "string",
              "user_type" : "string",
              "uuid" : "string [uuid]"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "duration" : {
                  "type" : "string",
                  "example" : "string"
                },
                "email" : {
                  "type" : "string",
                  "example" : "string"
                },
                "end_time" : {
                  "type" : "string",
                  "example" : "string [date-time]"
                },
                "has_3rd_party_audio" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "has_pstn" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "has_recording" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "has_screen_share" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "has_sip" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "has_video" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "has_voip" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "host" : {
                  "type" : "string",
                  "example" : "string"
                },
                "id" : {
                  "type" : "string",
                  "example" : "integer"
                },
                "participants" : {
                  "type" : "string",
                  "example" : "integer"
                },
                "start_time" : {
                  "type" : "string",
                  "example" : "string [date-time]"
                },
                "topic" : {
                  "type" : "string",
                  "example" : "string"
                },
                "user_type" : {
                  "type" : "string",
                  "example" : "string"
                },
                "uuid" : {
                  "type" : "string",
                  "example" : "string [uuid]"
                }
              }
            }
          }
        }
      },
      "inline_response_200_32" : {
        "type" : "object",
        "properties" : {
          "next_page_token" : {
            "type" : "string",
            "example" : "string"
          },
          "page_count" : {
            "type" : "string",
            "example" : "integer"
          },
          "page_size" : {
            "type" : "string",
            "example" : "integer"
          },
          "participants" : {
            "type" : "array",
            "example" : [ {
              "connection_type" : "string",
              "data_center" : "string",
              "device" : "string",
              "domain" : "string",
              "harddisk_id" : "string",
              "id" : "string [uuid]",
              "ip_address" : "string",
              "join_time" : "string [date-time]",
              "leave_reason" : "string",
              "leave_time" : "string [date-time]",
              "location" : "string",
              "mac_addr" : "string",
              "microphone" : "string",
              "network_type" : "string",
              "pc_name" : "string",
              "recording" : "boolean",
              "share_application" : "boolean",
              "share_desktop" : "boolean",
              "share_whiteboard" : "boolean",
              "speaker" : "string",
              "user_id" : "string",
              "user_name" : "string",
              "version" : "string"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "connection_type" : {
                  "type" : "string",
                  "example" : "string"
                },
                "data_center" : {
                  "type" : "string",
                  "example" : "string"
                },
                "device" : {
                  "type" : "string",
                  "example" : "string"
                },
                "domain" : {
                  "type" : "string",
                  "example" : "string"
                },
                "harddisk_id" : {
                  "type" : "string",
                  "example" : "string"
                },
                "id" : {
                  "type" : "string",
                  "example" : "string [uuid]"
                },
                "ip_address" : {
                  "type" : "string",
                  "example" : "string"
                },
                "join_time" : {
                  "type" : "string",
                  "example" : "string [date-time]"
                },
                "leave_reason" : {
                  "type" : "string",
                  "example" : "string"
                },
                "leave_time" : {
                  "type" : "string",
                  "example" : "string [date-time]"
                },
                "location" : {
                  "type" : "string",
                  "example" : "string"
                },
                "mac_addr" : {
                  "type" : "string",
                  "example" : "string"
                },
                "microphone" : {
                  "type" : "string",
                  "example" : "string"
                },
                "network_type" : {
                  "type" : "string",
                  "example" : "string"
                },
                "pc_name" : {
                  "type" : "string",
                  "example" : "string"
                },
                "recording" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "share_application" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "share_desktop" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "share_whiteboard" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "speaker" : {
                  "type" : "string",
                  "example" : "string"
                },
                "user_id" : {
                  "type" : "string",
                  "example" : "string"
                },
                "user_name" : {
                  "type" : "string",
                  "example" : "string"
                },
                "version" : {
                  "type" : "string",
                  "example" : "string"
                }
              }
            }
          },
          "total_records" : {
            "type" : "string",
            "example" : "integer"
          }
        }
      },
      "inline_response_200_33" : {
        "type" : "object",
        "properties" : {
          "in_meeting_files" : {
            "type" : "array",
            "example" : [ {
              "download_url" : "somefile.txt/randomurl",
              "file_name" : "somefile.txt",
              "file_size" : 300
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "download_url" : {
                  "type" : "string",
                  "example" : "somefile.txt/randomurl"
                },
                "file_name" : {
                  "type" : "string",
                  "example" : "somefile.txt"
                },
                "file_size" : {
                  "type" : "number",
                  "example" : 300
                }
              }
            }
          },
          "total_records" : {
            "type" : "number",
            "example" : 1
          }
        }
      },
      "inline_response_200_34" : {
        "type" : "object",
        "properties" : {
          "meetings" : {
            "type" : "array",
            "example" : [ {
              "start_time" : "2016-01-08T01:01:45.960Z",
              "uuid" : "in"
            }, {
              "start_time" : "2011-03-08T15:42:56.718Z",
              "uuid" : "minim aliquip dolore commodo in"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "start_time" : {
                  "type" : "string",
                  "example" : "2016-01-08T01:01:45.960Z"
                },
                "uuid" : {
                  "type" : "string",
                  "example" : "in"
                }
              }
            }
          }
        }
      },
      "inline_response_200_35" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number",
            "example" : 123456
          },
          "questions" : {
            "type" : "array",
            "example" : [ {
              "email" : "myemail@jksdlfkjdf.djfk",
              "name" : "Sam S",
              "question_details" : [ {
                "answer" : "I am wonderful.",
                "question" : "How are you?"
              } ]
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "email" : {
                  "type" : "string",
                  "example" : "myemail@jksdlfkjdf.djfk"
                },
                "name" : {
                  "type" : "string",
                  "example" : "Sam S"
                },
                "question_details" : {
                  "type" : "array",
                  "example" : [ {
                    "answer" : "I am wonderful.",
                    "question" : "How are you?"
                  } ],
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "answer" : {
                        "type" : "string",
                        "example" : "I am wonderful."
                      },
                      "question" : {
                        "type" : "string",
                        "example" : "How are you?"
                      }
                    }
                  }
                }
              }
            }
          },
          "start_time" : {
            "type" : "string",
            "example" : "2019-02-01T12:34:12.660Z"
          },
          "title" : {
            "type" : "string",
            "example" : "Learn something new"
          },
          "uuid" : {
            "type" : "string",
            "example" : "gsdjfhsdfkhjdsf"
          }
        }
      },
      "inline_response_200_36" : {
        "type" : "object",
        "properties" : {
          "duration" : {
            "type" : "string",
            "example" : "integer"
          },
          "end_time" : {
            "type" : "string",
            "example" : "string [date-time]"
          },
          "host_id" : {
            "type" : "string",
            "example" : "integer"
          },
          "id" : {
            "type" : "string",
            "example" : "integer"
          },
          "participants_count" : {
            "type" : "string",
            "example" : "integer"
          },
          "start_time" : {
            "type" : "string",
            "example" : "string [date-time]"
          },
          "topic" : {
            "type" : "string",
            "example" : "string"
          },
          "total_minutes" : {
            "type" : "string",
            "example" : "integer"
          },
          "type" : {
            "type" : "string",
            "example" : "integer"
          },
          "user_email" : {
            "type" : "string",
            "example" : "string"
          },
          "user_name" : {
            "type" : "string",
            "example" : "string"
          },
          "uuid" : {
            "type" : "string",
            "example" : "string [uuid]"
          }
        }
      },
      "inline_response_200_37" : {
        "type" : "object",
        "properties" : {
          "next_page_token" : {
            "type" : "string",
            "example" : "aliqua"
          },
          "page_count" : {
            "type" : "number",
            "example" : 1
          },
          "page_size" : {
            "type" : "number",
            "example" : 30
          },
          "participants" : {
            "type" : "array",
            "example" : [ {
              "id" : "8b29rgg4bb",
              "name" : "Ram Shekhar",
              "user_email" : "ram.shekhar.123@fkdngfjg.fdghdfgj"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "example" : "8b29rgg4bb"
                },
                "name" : {
                  "type" : "string",
                  "example" : "Ram Shekhar"
                },
                "user_email" : {
                  "type" : "string",
                  "example" : "ram.shekhar.123@fkdngfjg.fdghdfgj"
                }
              }
            }
          },
          "total_records" : {
            "type" : "number",
            "example" : 1
          }
        }
      },
      "inline_response_200_38" : {
        "type" : "object",
        "properties" : {
          "page_count" : {
            "type" : "number",
            "example" : 1
          },
          "page_number" : {
            "type" : "number",
            "example" : 1
          },
          "page_size" : {
            "type" : "number",
            "example" : 30
          },
          "registrants" : {
            "type" : "array",
            "example" : [ {
              "address" : "dsfhkdjsfh st",
              "city" : "jackson heights",
              "comments" : "Looking forward to the Webinar",
              "country" : "USA",
              "create_time" : "2019-02-26T23:01:16.899Z",
              "custom_questions" : [ {
                "title" : "What do you hope to learn from this Webinar?",
                "value" : "Look forward to learning how you come up with new recipes and what other services you offer."
              } ],
              "email" : "sjfkghdsg@someemail.dfgjd",
              "first_name" : "Jill",
              "id" : "24000002122",
              "industry" : "Food",
              "job_title" : "Chef",
              "join_url" : "https://zoom.us/webinar/mywebinarissocooldighdghodghodg",
              "last_name" : "Chill",
              "no_of_employees" : "10",
              "org" : "Cooking Org",
              "phone" : "00000000",
              "purchasing_time_frame" : "1-3 months",
              "role_in_purchase_process" : "Influencer",
              "state" : "NY",
              "status" : "approved",
              "zip" : "11371"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "address" : {
                  "type" : "string",
                  "example" : "dsfhkdjsfh st"
                },
                "city" : {
                  "type" : "string",
                  "example" : "jackson heights"
                },
                "comments" : {
                  "type" : "string",
                  "example" : "Looking forward to the Webinar"
                },
                "country" : {
                  "type" : "string",
                  "example" : "USA"
                },
                "create_time" : {
                  "type" : "string",
                  "example" : "2019-02-26T23:01:16.899Z"
                },
                "custom_questions" : {
                  "type" : "array",
                  "example" : [ {
                    "title" : "What do you hope to learn from this Webinar?",
                    "value" : "Look forward to learning how you come up with new recipes and what other services you offer."
                  } ],
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "title" : {
                        "type" : "string",
                        "example" : "What do you hope to learn from this Webinar?"
                      },
                      "value" : {
                        "type" : "string",
                        "example" : "Look forward to learning how you come up with new recipes and what other services you offer."
                      }
                    }
                  }
                },
                "email" : {
                  "type" : "string",
                  "example" : "sjfkghdsg@someemail.dfgjd"
                },
                "first_name" : {
                  "type" : "string",
                  "example" : "Jill"
                },
                "id" : {
                  "type" : "string",
                  "example" : "24000002122"
                },
                "industry" : {
                  "type" : "string",
                  "example" : "Food"
                },
                "job_title" : {
                  "type" : "string",
                  "example" : "Chef"
                },
                "join_url" : {
                  "type" : "string",
                  "example" : "https://zoom.us/webinar/mywebinarissocooldighdghodghodg"
                },
                "last_name" : {
                  "type" : "string",
                  "example" : "Chill"
                },
                "no_of_employees" : {
                  "type" : "string",
                  "example" : "10"
                },
                "org" : {
                  "type" : "string",
                  "example" : "Cooking Org"
                },
                "phone" : {
                  "type" : "string",
                  "example" : "00000000"
                },
                "purchasing_time_frame" : {
                  "type" : "string",
                  "example" : "1-3 months"
                },
                "role_in_purchase_process" : {
                  "type" : "string",
                  "example" : "Influencer"
                },
                "state" : {
                  "type" : "string",
                  "example" : "NY"
                },
                "status" : {
                  "type" : "string",
                  "example" : "approved"
                },
                "zip" : {
                  "type" : "string",
                  "example" : "11371"
                }
              }
            }
          },
          "total_records" : {
            "type" : "number",
            "example" : 1
          }
        }
      },
      "inline_response_200_39" : {
        "type" : "object",
        "properties" : {
          "webinars" : {
            "type" : "array",
            "example" : [ {
              "start_time" : "2019-06-07T03:42:34.548Z",
              "uuid" : "ut44544gisi"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "start_time" : {
                  "type" : "string",
                  "example" : "2019-06-07T03:42:34.548Z"
                },
                "uuid" : {
                  "type" : "string",
                  "example" : "ut44544gisi"
                }
              }
            }
          }
        }
      },
      "inline_response_200_40" : {
        "type" : "object",
        "properties" : {
          "next_page_token" : {
            "type" : "string",
            "example" : "mdnf23qbsf4wr"
          },
          "page_count" : {
            "type" : "number",
            "example" : 1
          },
          "page_size" : {
            "type" : "number",
            "example" : 1
          },
          "participants" : {
            "type" : "array",
            "example" : [ {
              "id" : "sdjhf3ui",
              "name" : "Matt",
              "user_email" : "matt@123.jhdyuerys"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "example" : "sdjhf3ui"
                },
                "name" : {
                  "type" : "string",
                  "example" : "Matt"
                },
                "user_email" : {
                  "type" : "string",
                  "example" : "matt@123.jhdyuerys"
                }
              }
            }
          },
          "total_records" : {
            "type" : "number",
            "example" : 1
          }
        }
      },
      "inline_response_200_41" : {
        "type" : "object",
        "properties" : {
          "cloud_recording_storage" : {
            "type" : "array",
            "example" : [ {
              "date" : { },
              "free_usage" : "1 GB",
              "plan_usage" : "0",
              "usage" : "29 MB"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "date" : {
                  "type" : "string",
                  "example" : "{}"
                },
                "free_usage" : {
                  "type" : "string",
                  "example" : "1 GB"
                },
                "plan_usage" : {
                  "type" : "string",
                  "example" : "0"
                },
                "usage" : {
                  "type" : "string",
                  "example" : "29 MB"
                }
              }
            }
          },
          "from" : {
            "type" : "string",
            "example" : "{}"
          },
          "to" : {
            "type" : "string",
            "example" : "{}"
          }
        }
      },
      "inline_response_200_42" : {
        "type" : "object",
        "properties" : {
          "dates" : {
            "type" : "array",
            "example" : [ {
              "date" : { },
              "meeting_minutes" : 100,
              "meetings" : 10,
              "new_users" : 3,
              "participants" : 20
            }, {
              "date" : { },
              "meeting_minutes" : 200,
              "meetings" : 20,
              "new_users" : 0,
              "participants" : 80
            }, {
              "date" : { },
              "meeting_minutes" : 380,
              "meetings" : 35,
              "new_users" : 10,
              "participants" : 100
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "date" : {
                  "type" : "string",
                  "example" : "{}"
                },
                "meeting_minutes" : {
                  "type" : "number",
                  "example" : 100
                },
                "meetings" : {
                  "type" : "number",
                  "example" : 10
                },
                "new_users" : {
                  "type" : "number",
                  "example" : 3
                },
                "participants" : {
                  "type" : "number",
                  "example" : 20
                }
              }
            }
          },
          "month" : {
            "type" : "number",
            "example" : 6
          },
          "year" : {
            "type" : "number",
            "example" : 2019
          }
        }
      },
      "inline_response_200_43" : {
        "type" : "object",
        "properties" : {
          "duration" : {
            "type" : "number",
            "example" : 11
          },
          "end_time" : {
            "type" : "string",
            "example" : "2019-08-14T09:05:19.754Z"
          },
          "id" : {
            "type" : "number",
            "example" : 1000000
          },
          "participants_count" : {
            "type" : "number",
            "example" : 4
          },
          "start_time" : {
            "type" : "string",
            "example" : "2019-07-14T09:05:19.754Z"
          },
          "topic" : {
            "type" : "string",
            "example" : "Awesome meeting"
          },
          "total_minutes" : {
            "type" : "number",
            "example" : 11
          },
          "tracking_fields" : {
            "type" : "array",
            "example" : [ {
              "field" : "Meeting Purpose",
              "value" : "Sales"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "field" : {
                  "type" : "string",
                  "example" : "Meeting Purpose"
                },
                "value" : {
                  "type" : "string",
                  "example" : "Sales"
                }
              }
            }
          },
          "type" : {
            "type" : "number",
            "example" : 2
          },
          "user_email" : {
            "type" : "string",
            "example" : "officia@sdhgdfgh.fsdfs"
          },
          "user_name" : {
            "type" : "string",
            "example" : "officia"
          },
          "uuid" : {
            "type" : "string",
            "example" : "sfsdfsdfc6122222d"
          }
        }
      },
      "inline_response_200_44" : {
        "type" : "object",
        "properties" : {
          "next_page_token" : {
            "type" : "string",
            "example" : ""
          },
          "page_count" : {
            "type" : "string",
            "example" : "1"
          },
          "page_size" : {
            "type" : "string",
            "example" : "30"
          },
          "participants" : {
            "type" : "array",
            "example" : [ {
              "duration" : "20:00",
              "id" : "dskfjladjskfl",
              "join_time" : "2019-02-01T12:34:12.660Z",
              "leave_time" : "2019-03-01T12:34:12.660Z",
              "name" : "Riya",
              "user_email" : "riya@jdfghsdfgsd.fdjfhdf",
              "user_id" : "sdfjkldsfdfgdfg"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "duration" : {
                  "type" : "string",
                  "example" : "20:00"
                },
                "id" : {
                  "type" : "string",
                  "example" : "dskfjladjskfl"
                },
                "join_time" : {
                  "type" : "string",
                  "example" : "2019-02-01T12:34:12.660Z"
                },
                "leave_time" : {
                  "type" : "string",
                  "example" : "2019-03-01T12:34:12.660Z"
                },
                "name" : {
                  "type" : "string",
                  "example" : "Riya"
                },
                "user_email" : {
                  "type" : "string",
                  "example" : "riya@jdfghsdfgsd.fdjfhdf"
                },
                "user_id" : {
                  "type" : "string",
                  "example" : "sdfjkldsfdfgdfg"
                }
              }
            }
          },
          "total_records" : {
            "type" : "string",
            "example" : "1"
          }
        }
      },
      "inline_response_200_45" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number",
            "example" : 123456
          },
          "questions" : {
            "type" : "array",
            "example" : [ {
              "email" : "myemail@jksdlfkjdf.djfk",
              "name" : "Sam S",
              "question_details" : [ {
                "answer" : "I am wonderful.",
                "question" : "How are you?"
              } ]
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "email" : {
                  "type" : "string",
                  "example" : "myemail@jksdlfkjdf.djfk"
                },
                "name" : {
                  "type" : "string",
                  "example" : "Sam S"
                },
                "question_details" : {
                  "type" : "array",
                  "example" : [ {
                    "answer" : "I am wonderful.",
                    "question" : "How are you?"
                  } ],
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "answer" : {
                        "type" : "string",
                        "example" : "I am wonderful."
                      },
                      "question" : {
                        "type" : "string",
                        "example" : "How are you?"
                      }
                    }
                  }
                }
              }
            }
          },
          "start_time" : {
            "type" : "string",
            "example" : "2019-02-01T12:34:12.660Z"
          },
          "status" : {
            "type" : "string",
            "example" : "ended"
          },
          "title" : {
            "type" : "string",
            "example" : "Learn something new"
          },
          "uuid" : {
            "type" : "string",
            "example" : "gsdjfhsdfkhjdsf"
          }
        }
      },
      "inline_response_200_46" : {
        "type" : "object",
        "properties" : {
          "from" : {
            "type" : "string",
            "example" : "{}"
          },
          "next_page_token" : {
            "type" : "string",
            "example" : "czxcxdvxvddc"
          },
          "operation_logs" : {
            "type" : "array",
            "example" : [ {
              "action" : "Update",
              "category_type" : "User",
              "operation_detail" : "Activate User sjkfhdsf@jdfgkhgd.com ",
              "operator" : "someuser@sfksfhksdfsf.com",
              "time" : "2019-08-20T19:09:01Z"
            }, {
              "action" : "Update",
              "category_type" : "User",
              "operation_detail" : "Deactivate User mynewemail@jdfkdshfhjdsf.ffasdm ",
              "operator" : "anotheruser@sfhidshfidshufds.com",
              "time" : "2019-08-20T18:59:56Z"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "action" : {
                  "type" : "string",
                  "example" : "Update"
                },
                "category_type" : {
                  "type" : "string",
                  "example" : "User"
                },
                "operation_detail" : {
                  "type" : "string",
                  "example" : "Activate User sjkfhdsf@jdfgkhgd.com "
                },
                "operator" : {
                  "type" : "string",
                  "example" : "someuser@sfksfhksdfsf.com"
                },
                "time" : {
                  "type" : "string",
                  "example" : "2019-08-20T19:09:01Z"
                }
              }
            }
          },
          "page_size" : {
            "type" : "number",
            "example" : 30
          },
          "to" : {
            "type" : "string",
            "example" : "{}"
          }
        }
      },
      "inline_response_200_47" : {
        "type" : "object",
        "properties" : {
          "from" : {
            "type" : "string",
            "example" : "{}"
          },
          "page_count" : {
            "type" : "number",
            "example" : 1
          },
          "page_number" : {
            "type" : "number",
            "example" : 1
          },
          "page_size" : {
            "type" : "number",
            "example" : 30
          },
          "to" : {
            "type" : "string",
            "example" : "{}"
          },
          "total_meeting_minutes" : {
            "type" : "number",
            "example" : 10
          },
          "total_meetings" : {
            "type" : "number",
            "example" : 2
          },
          "total_participants" : {
            "type" : "number",
            "example" : 10
          },
          "total_records" : {
            "type" : "number",
            "example" : 3
          },
          "users" : {
            "type" : "array",
            "example" : [ {
              "create_time" : "2019-09-13T16:20:30Z",
              "dept" : "",
              "email" : "reag12343@gmail.com",
              "id" : "BzBAAAAAAAfprg",
              "last_client_version" : "4.4.1242.0623(win)",
              "last_login_time" : "2019-09-13T16:21:40Z",
              "meeting_minutes" : 5,
              "meetings" : 1,
              "participants" : 5,
              "type" : 1,
              "user_name" : "cbcvbvcbvbc"
            }, {
              "create_time" : "2019-07-23T00:27:34Z",
              "dept" : "Business",
              "email" : "mynewemailgoog@gmail.com",
              "id" : "0CAAAAA6jxcA",
              "last_client_version" : "4.4.1242.0623(win)",
              "last_login_time" : "2019-07-23T00:28:00Z",
              "meeting_minutes" : 0,
              "meetings" : 0,
              "participants" : 0,
              "type" : 1,
              "user_name" : "xgdzgdfg"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "create_time" : {
                  "type" : "string",
                  "example" : "2019-09-13T16:20:30Z"
                },
                "dept" : {
                  "type" : "string",
                  "example" : ""
                },
                "email" : {
                  "type" : "string",
                  "example" : "reag12343@gmail.com"
                },
                "id" : {
                  "type" : "string",
                  "example" : "BzBAAAAAAAfprg"
                },
                "last_client_version" : {
                  "type" : "string",
                  "example" : "4.4.1242.0623(win)"
                },
                "last_login_time" : {
                  "type" : "string",
                  "example" : "2019-09-13T16:21:40Z"
                },
                "meeting_minutes" : {
                  "type" : "number",
                  "example" : 5
                },
                "meetings" : {
                  "type" : "number",
                  "example" : 1
                },
                "participants" : {
                  "type" : "number",
                  "example" : 5
                },
                "type" : {
                  "type" : "number",
                  "example" : 1
                },
                "user_name" : {
                  "type" : "string",
                  "example" : "cbcvbvcbvbc"
                }
              }
            }
          }
        }
      },
      "inline_response_200_48" : {
        "type" : "object",
        "properties" : {
          "duration" : {
            "type" : "number",
            "example" : 20
          },
          "end_time" : {
            "type" : "string",
            "example" : "2019-11-18T03:15:20.056Z"
          },
          "id" : {
            "type" : "number",
            "example" : 51788617
          },
          "participants_count" : {
            "type" : "number",
            "example" : 13
          },
          "start_time" : {
            "type" : "string",
            "example" : "2019-11-18T03:15:00.056Z"
          },
          "topic" : {
            "type" : "string",
            "example" : "My Health Webinar"
          },
          "total_minutes" : {
            "type" : "number",
            "example" : 10
          },
          "tracking_fields" : {
            "type" : "array",
            "example" : [ {
              "field" : "Webinar Purpose",
              "value" : "Health awareness"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "field" : {
                  "type" : "string",
                  "example" : "Webinar Purpose"
                },
                "value" : {
                  "type" : "string",
                  "example" : "Health awareness"
                }
              }
            }
          },
          "type" : {
            "type" : "number",
            "example" : 5
          },
          "user_email" : {
            "type" : "string",
            "example" : "fdsjkfhhkd@hkdfhkdf.ghfjd"
          },
          "user_name" : {
            "type" : "string",
            "example" : "Utfdfdget"
          },
          "uuid" : {
            "type" : "string",
            "example" : "urn4fe6caeb98"
          }
        }
      },
      "inline_response_200_49" : {
        "type" : "object",
        "properties" : {
          "next_page_token" : {
            "type" : "string",
            "example" : ""
          },
          "page_count" : {
            "type" : "string",
            "example" : "1"
          },
          "page_size" : {
            "type" : "string",
            "example" : "30"
          },
          "participants" : {
            "type" : "array",
            "example" : [ {
              "duration" : "20",
              "id" : "dskfjladjskfl",
              "join_time" : "2019-02-01T12:34:12.660Z",
              "leave_time" : "2019-03-01T12:34:12.660Z",
              "name" : "Riya",
              "user_email" : "riya@jdfghsdfgsd.fdjfhdf",
              "user_id" : "sdfjkldsfdfgdfg"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "duration" : {
                  "type" : "string",
                  "example" : "20"
                },
                "id" : {
                  "type" : "string",
                  "example" : "dskfjladjskfl"
                },
                "join_time" : {
                  "type" : "string",
                  "example" : "2019-02-01T12:34:12.660Z"
                },
                "leave_time" : {
                  "type" : "string",
                  "example" : "2019-03-01T12:34:12.660Z"
                },
                "name" : {
                  "type" : "string",
                  "example" : "Riya"
                },
                "user_email" : {
                  "type" : "string",
                  "example" : "riya@jdfghsdfgsd.fdjfhdf"
                },
                "user_id" : {
                  "type" : "string",
                  "example" : "sdfjkldsfdfgdfg"
                }
              }
            }
          },
          "total_records" : {
            "type" : "string",
            "example" : "1"
          }
        }
      },
      "inline_response_200_50" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number",
            "example" : 14321
          },
          "questions" : {
            "type" : "array",
            "example" : [ {
              "email" : "pidufshdsuf@djdfdsfd.ghk",
              "name" : "Harry S",
              "question_details" : [ {
                "answer" : "Once a month.",
                "question" : "How often will you hold this webinar?"
              } ]
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "email" : {
                  "type" : "string",
                  "example" : "pidufshdsuf@djdfdsfd.ghk"
                },
                "name" : {
                  "type" : "string",
                  "example" : "Harry S"
                },
                "question_details" : {
                  "type" : "array",
                  "example" : [ {
                    "answer" : "Once a month.",
                    "question" : "How often will you hold this webinar?"
                  } ],
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "answer" : {
                        "type" : "string",
                        "example" : "Once a month."
                      },
                      "question" : {
                        "type" : "string",
                        "example" : "How often will you hold this webinar?"
                      }
                    }
                  }
                }
              }
            }
          },
          "start_time" : {
            "type" : "string",
            "example" : "2019-02-01T12:34:12.660Z"
          },
          "uuid" : {
            "type" : "string",
            "example" : "urgvhge945"
          }
        }
      },
      "inline_response_201_9" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string",
            "example" : "consectetur sunt incididunt"
          },
          "id" : {
            "type" : "string",
            "example" : "consectetur officia voluptate"
          },
          "recommended_values" : {
            "type" : "array",
            "example" : [ "eiusmod esse qui id", "consequat dolore laboris Ut culp" ],
            "items" : {
              "type" : "string",
              "example" : "eiusmod esse qui id"
            }
          },
          "required" : {
            "type" : "boolean",
            "example" : false
          },
          "visible" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "inline_response_200_51" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string",
            "example" : "Meeting Purpose"
          },
          "id" : {
            "type" : "string",
            "example" : "fdfgdfgr23gr1"
          },
          "recommended_values" : {
            "type" : "array",
            "example" : [ "Support", "Onboarding", "Sales", "Other" ],
            "items" : {
              "type" : "string",
              "example" : "Support"
            }
          },
          "required" : {
            "type" : "boolean",
            "example" : true
          },
          "visible" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "inline_response_200_52" : {
        "type" : "object",
        "properties" : {
          "page_count" : {
            "type" : "number",
            "example" : 1
          },
          "page_number" : {
            "type" : "number",
            "example" : 1
          },
          "page_size" : {
            "type" : "number",
            "example" : 30
          },
          "total_records" : {
            "type" : "number",
            "example" : 1
          },
          "users" : {
            "type" : "array",
            "example" : [ {
              "created_at" : "2018-11-15T01:10:08Z",
              "dept" : "",
              "email" : "mel@jfggdhfhdfj.djfhdsfh",
              "first_name" : "Melina",
              "id" : "z8yAAAAA8bbbQ",
              "im_group_ids" : [ "Abdsjkfhdhfj" ],
              "last_client_version" : "4.4.55383.0716(android)",
              "last_login_time" : "2019-09-13T21:08:52Z",
              "last_name" : "Ghimire",
              "pic_url" : "https://lh4.googleusercontent.com/-someurl/photo.jpg",
              "pmi" : 581111112,
              "status" : "active",
              "timezone" : "America/Los_Angeles",
              "type" : 2,
              "verified" : 1
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "created_at" : {
                  "type" : "string",
                  "example" : "2018-11-15T01:10:08Z"
                },
                "dept" : {
                  "type" : "string",
                  "example" : ""
                },
                "email" : {
                  "type" : "string",
                  "example" : "mel@jfggdhfhdfj.djfhdsfh"
                },
                "first_name" : {
                  "type" : "string",
                  "example" : "Melina"
                },
                "id" : {
                  "type" : "string",
                  "example" : "z8yAAAAA8bbbQ"
                },
                "im_group_ids" : {
                  "type" : "array",
                  "example" : [ "Abdsjkfhdhfj" ],
                  "items" : {
                    "type" : "string",
                    "example" : "Abdsjkfhdhfj"
                  }
                },
                "last_client_version" : {
                  "type" : "string",
                  "example" : "4.4.55383.0716(android)"
                },
                "last_login_time" : {
                  "type" : "string",
                  "example" : "2019-09-13T21:08:52Z"
                },
                "last_name" : {
                  "type" : "string",
                  "example" : "Ghimire"
                },
                "pic_url" : {
                  "type" : "string",
                  "example" : "https://lh4.googleusercontent.com/-someurl/photo.jpg"
                },
                "pmi" : {
                  "type" : "number",
                  "example" : 581111112
                },
                "status" : {
                  "type" : "string",
                  "example" : "active"
                },
                "timezone" : {
                  "type" : "string",
                  "example" : "America/Los_Angeles"
                },
                "type" : {
                  "type" : "number",
                  "example" : 2
                },
                "verified" : {
                  "type" : "number",
                  "example" : 1
                }
              }
            }
          }
        }
      },
      "inline_response_201_10" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "example" : "string"
          },
          "first_name" : {
            "type" : "string",
            "example" : "string"
          },
          "id" : {
            "type" : "string",
            "example" : "string"
          },
          "last_name" : {
            "type" : "string",
            "example" : "string"
          },
          "type" : {
            "type" : "string",
            "example" : "integer"
          }
        }
      },
      "inline_response_200_53" : {
        "type" : "object",
        "properties" : {
          "existed_email" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "inline_response_200_54" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string",
            "example" : "sslldd00933aaas"
          }
        }
      },
      "inline_response_200_55" : {
        "type" : "object",
        "properties" : {
          "existed" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "inline_response_200_56" : {
        "type" : "object",
        "properties" : {
          "account_id" : {
            "type" : "string",
            "example" : "EAAAAAbbbbbCCCCHMA"
          },
          "created_at" : {
            "type" : "string",
            "example" : "2018-11-15T01:10:08Z"
          },
          "custom_attributes" : {
            "type" : "array",
            "example" : [ {
              "key" : "cb3674544gexq",
              "name" : "Country of Citizenship",
              "value" : "Nepal"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "key" : {
                  "type" : "string",
                  "example" : "cb3674544gexq"
                },
                "name" : {
                  "type" : "string",
                  "example" : "Country of Citizenship"
                },
                "value" : {
                  "type" : "string",
                  "example" : "Nepal"
                }
              }
            }
          },
          "dept" : {
            "type" : "string",
            "example" : ""
          },
          "email" : {
            "type" : "string",
            "example" : "harryg@dfkjdslfjkdsfjkdsf.fsdfdfd"
          },
          "first_name" : {
            "type" : "string",
            "example" : "Harry"
          },
          "group_ids" : {
            "type" : "array",
            "example" : [ ],
            "items" : { }
          },
          "host_key" : {
            "type" : "string",
            "example" : "0000"
          },
          "id" : {
            "type" : "string",
            "example" : "z8dsdsdsdsdCfp8uQ"
          },
          "im_group_ids" : {
            "type" : "array",
            "example" : [ "CcSAAAAAAABBBVoQ" ],
            "items" : {
              "type" : "string",
              "example" : "CcSAAAAAAABBBVoQ"
            }
          },
          "jid" : {
            "type" : "string",
            "example" : "hghghfghdfghdfhgh@xmpp.zoom.us"
          },
          "language" : {
            "type" : "string",
            "example" : "en-US"
          },
          "last_client_version" : {
            "type" : "string",
            "example" : "4.4.55383.0716(android)"
          },
          "last_login_time" : {
            "type" : "string",
            "example" : "2019-09-13T21:08:52Z"
          },
          "last_name" : {
            "type" : "string",
            "example" : "Grande"
          },
          "manager" : {
            "type" : "string",
            "example" : "name@example.com"
          },
          "personal_meeting_url" : {
            "type" : "string",
            "example" : "https://zoom.us/j/6352635623323434343443"
          },
          "phone_country" : {
            "type" : "string",
            "example" : "USA"
          },
          "phone_number" : {
            "type" : "string",
            "example" : "00000000"
          },
          "pic_url" : {
            "type" : "string",
            "example" : "https://lh4.googleusercontent.com/-hsgfhdgsfghdsfghfd-photo.jpg"
          },
          "pmi" : {
            "type" : "number",
            "example" : 100000000
          },
          "role_id" : {
            "type" : "string",
            "example" : "hdsfwyteg3675hgfs"
          },
          "role_name" : {
            "type" : "string",
            "example" : "Owner"
          },
          "status" : {
            "type" : "string",
            "example" : "active"
          },
          "timezone" : {
            "type" : "string",
            "example" : "America/Los_Angeles"
          },
          "type" : {
            "type" : "number",
            "example" : 2
          },
          "use_pmi" : {
            "type" : "boolean",
            "example" : false
          },
          "verified" : {
            "type" : "number",
            "example" : 1
          }
        }
      },
      "inline_response_200_57" : {
        "type" : "object",
        "properties" : {
          "assistants" : {
            "type" : "array",
            "example" : [ {
              "email" : "sfhdfkjdf@hjdsf.fdjf",
              "id" : "ddgdfgfdgfgg"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "email" : {
                  "type" : "string",
                  "example" : "sfhdfkjdf@hjdsf.fdjf"
                },
                "id" : {
                  "type" : "string",
                  "example" : "ddgdfgfdgfgg"
                }
              }
            }
          }
        }
      },
      "inline_response_201_11" : {
        "type" : "object",
        "properties" : {
          "add_at" : {
            "type" : "string",
            "example" : "string [date-time]"
          },
          "ids" : {
            "type" : "string",
            "example" : "string"
          }
        }
      },
      "inline_response_200_58" : {
        "type" : "object",
        "properties" : {
          "templates" : {
            "type" : "array",
            "example" : [ {
              "id" : "AdxbhxCzKgSiWAw",
              "name" : "My meeting template",
              "type" : 1
            }, {
              "id" : "eYshgdftw4-5_MUSQ",
              "name" : "Zoom meeting template for daily sync",
              "type" : 2
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "example" : "AdxbhxCzKgSiWAw"
                },
                "name" : {
                  "type" : "string",
                  "example" : "My meeting template"
                },
                "type" : {
                  "type" : "number",
                  "example" : 1
                }
              }
            }
          },
          "total_records" : {
            "type" : "number",
            "example" : 2
          }
        }
      },
      "inline_response_200_59" : {
        "type" : "object",
        "properties" : {
          "meetings" : {
            "type" : "array",
            "example" : [ {
              "created_at" : "2019-08-16T01:13:12Z",
              "duration" : 30,
              "host_id" : "abckjdfhsdkjf",
              "id" : 11111,
              "join_url" : "https://zoom.us/j/11111",
              "start_time" : "2019-08-16T02:00:00Z",
              "timezone" : "America/Los_Angeles",
              "topic" : "Zoom Meeting",
              "type" : 2,
              "uuid" : "mlghmfghlBBB"
            }, {
              "agenda" : "RegistrationDeniedTest",
              "created_at" : "2019-08-16T18:30:46Z",
              "duration" : 60,
              "host_id" : "abckjdfhsdkjf",
              "id" : 2222,
              "join_url" : "https://zoom.us/j/2222",
              "start_time" : "2019-08-16T19:00:00Z",
              "timezone" : "America/Los_Angeles",
              "topic" : "TestMeeting",
              "type" : 2,
              "uuid" : "J8H8eavweUcd321=="
            }, {
              "created_at" : "2019-08-16T21:15:56Z",
              "duration" : 60,
              "host_id" : "abckjdfhsdkjf",
              "id" : 33333,
              "join_url" : "https://zoom.us/j/33333",
              "start_time" : "2019-08-16T22:00:00Z",
              "timezone" : "America/Los_Angeles",
              "topic" : "My Meeting",
              "type" : 2,
              "uuid" : "SGVTAcfSfCbbbb"
            }, {
              "created_at" : "2019-08-29T17:32:33Z",
              "duration" : 60,
              "host_id" : "abckjdfhsdkjf",
              "id" : 44444,
              "join_url" : "https://zoom.us/j/4444",
              "start_time" : "2019-08-29T18:00:00Z",
              "timezone" : "America/Los_Angeles",
              "topic" : "MyTestPollMeeting",
              "type" : 2,
              "uuid" : "64123avdfsMVA=="
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "agenda" : {
                  "type" : "string",
                  "example" : "RegistrationDeniedTest"
                },
                "created_at" : {
                  "type" : "string",
                  "example" : "2019-08-16T01:13:12Z"
                },
                "duration" : {
                  "type" : "number",
                  "example" : 30
                },
                "host_id" : {
                  "type" : "string",
                  "example" : "abckjdfhsdkjf"
                },
                "id" : {
                  "type" : "number",
                  "example" : 11111
                },
                "join_url" : {
                  "type" : "string",
                  "example" : "https://zoom.us/j/11111"
                },
                "start_time" : {
                  "type" : "string",
                  "example" : "2019-08-16T02:00:00Z"
                },
                "timezone" : {
                  "type" : "string",
                  "example" : "America/Los_Angeles"
                },
                "topic" : {
                  "type" : "string",
                  "example" : "Zoom Meeting"
                },
                "type" : {
                  "type" : "number",
                  "example" : 2
                },
                "uuid" : {
                  "type" : "string",
                  "example" : "mlghmfghlBBB"
                }
              }
            }
          },
          "page_count" : {
            "type" : "number",
            "example" : 1
          },
          "page_number" : {
            "type" : "number",
            "example" : 1
          },
          "page_size" : {
            "type" : "number",
            "example" : 30
          },
          "total_records" : {
            "type" : "number",
            "example" : 4
          }
        }
      },
      "inline_response_201_12" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "example" : "2019-09-05T16:54:14Z"
          },
          "duration" : {
            "type" : "number",
            "example" : 60
          },
          "host_id" : {
            "type" : "string",
            "example" : "AbcDefGHi"
          },
          "id" : {
            "type" : "number",
            "example" : 1100000
          },
          "join_url" : {
            "type" : "string",
            "example" : "https://zoom.us/j/1100000"
          },
          "settings" : {
            "type" : "object",
            "properties" : {
              "alternative_hosts" : {
                "type" : "string",
                "example" : ""
              },
              "approval_type" : {
                "type" : "number",
                "example" : 2
              },
              "audio" : {
                "type" : "string",
                "example" : "both"
              },
              "auto_recording" : {
                "type" : "string",
                "example" : "local"
              },
              "breakout_room" : {
                "type" : "object",
                "properties" : {
                  "enable" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "host_video" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "in_meeting" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "join_before_host" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "mute_upon_entry" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "participant_video" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "registrants_confirmation_email" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "registrants_email_notification" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "rooms" : {
                    "type" : "array",
                    "example" : [ {
                      "name" : "room1",
                      "participants" : [ "james.user01@somemail1234.com", "james.user02@somemail1234.com" ]
                    }, {
                      "name" : "room2",
                      "participants" : [ "james.user03@somemail1234.com" ]
                    } ],
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "type" : "string",
                          "example" : "room1"
                        },
                        "participants" : {
                          "type" : "array",
                          "example" : [ "james.user01@somemail1234.com", "james.user02@somemail1234.com" ],
                          "items" : {
                            "type" : "string",
                            "example" : "james.user01@somemail1234.com"
                          }
                        }
                      }
                    }
                  },
                  "use_pmi" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "waiting_room" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "watermark" : {
                    "type" : "boolean",
                    "example" : false
                  }
                }
              },
              "close_registration" : {
                "type" : "boolean",
                "example" : false
              },
              "cn_meeting" : {
                "type" : "boolean",
                "example" : false
              },
              "enforce_login" : {
                "type" : "boolean",
                "example" : false
              },
              "enforce_login_domains" : {
                "type" : "string",
                "example" : ""
              },
              "global_dial_in_countries" : {
                "type" : "array",
                "example" : [ "US" ],
                "items" : {
                  "type" : "string",
                  "example" : "US"
                }
              },
              "global_dial_in_numbers" : {
                "type" : "array",
                "example" : [ {
                  "city" : "New York",
                  "country" : "US",
                  "country_name" : "US",
                  "number" : "+1 1000200200",
                  "type" : "toll"
                }, {
                  "city" : "San Jose",
                  "country" : "US",
                  "country_name" : "US",
                  "number" : "+1 6699006833",
                  "type" : "toll"
                }, {
                  "city" : "San Jose",
                  "country" : "US",
                  "country_name" : "US",
                  "number" : "+1 408000000",
                  "type" : "toll"
                } ],
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "city" : {
                      "type" : "string",
                      "example" : "New York"
                    },
                    "country" : {
                      "type" : "string",
                      "example" : "US"
                    },
                    "country_name" : {
                      "type" : "string",
                      "example" : "US"
                    },
                    "number" : {
                      "type" : "string",
                      "example" : "+1 1000200200"
                    },
                    "type" : {
                      "type" : "string",
                      "example" : "toll"
                    }
                  }
                }
              },
              "start_time" : {
                "type" : "string",
                "example" : "2019-08-30T22:00:00Z"
              },
              "start_url" : {
                "type" : "string",
                "example" : "https://zoom.us/s/1100000?iIifQ.wfY2ldlb82SWo3TsR77lBiJjR53TNeFUiKbLyCvZZjw"
              },
              "status" : {
                "type" : "string",
                "example" : "waiting"
              },
              "timezone" : {
                "type" : "string",
                "example" : "America/New_York"
              },
              "topic" : {
                "type" : "string",
                "example" : "API Test"
              },
              "type" : {
                "type" : "number",
                "example" : 2
              },
              "uuid" : {
                "type" : "string",
                "example" : "ng1MzyWNQaObxcf3+Gfm6A=="
              }
            }
          }
        }
      },
      "inline_response_200_60" : {
        "type" : "object",
        "properties" : {
          "pac_accounts" : {
            "type" : "array",
            "example" : [ {
              "conference_id" : "111111",
              "dedicated_dial_in_number" : [ {
                "country" : "USA",
                "number" : "123343434"
              } ],
              "global_dial_in_numbers" : [ {
                "country" : "USA",
                "number" : "434343434"
              } ],
              "listen_only_password" : "hkgk",
              "participant_password" : "ghdf"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "conference_id" : {
                  "type" : "string",
                  "example" : "111111"
                },
                "dedicated_dial_in_number" : {
                  "type" : "array",
                  "example" : [ {
                    "country" : "USA",
                    "number" : "123343434"
                  } ],
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "country" : {
                        "type" : "string",
                        "example" : "USA"
                      },
                      "number" : {
                        "type" : "string",
                        "example" : "123343434"
                      }
                    }
                  }
                },
                "global_dial_in_numbers" : {
                  "type" : "array",
                  "example" : [ {
                    "country" : "USA",
                    "number" : "434343434"
                  } ],
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "country" : {
                        "type" : "string",
                        "example" : "USA"
                      },
                      "number" : {
                        "type" : "string",
                        "example" : "434343434"
                      }
                    }
                  }
                },
                "listen_only_password" : {
                  "type" : "string",
                  "example" : "hkgk"
                },
                "participant_password" : {
                  "type" : "string",
                  "example" : "ghdf"
                }
              }
            }
          }
        }
      },
      "inline_response_200_61" : {
        "type" : "object",
        "properties" : {
          "permissions" : {
            "type" : "array",
            "example" : [ "IMGroups:Edit", "Security:Edit", "IMGroups:Read", "BillingSubscription:Edit", "SingleSignOn:Edit", "WebinarSetting:Edit", "Branding:Read", "UsageReport:Read", "BillingSubscription:Read", "CrossHybrid:Read", "UserActivitiesReport:Read", "Branding:Edit", "SingleSignOn:Read", "Security:Read", "Dashboard:Read", "AccountProfile:Read", "MarketPlace:Edit", "ZoomRooms:Edit", "PbxAdmin:Read", "Meeting:Edit", "IMChatHistory:Read", "RoomConnector:Read", "IMChatBot:Edit", "CrossHybrid:Edit", "AccountProfile:Edit", "RoomConnector:Edit", "Group:Edit", "BillingInformation:Edit", "LyncConnector:Edit", "LyncConnector:Read", "Integration:Read", "User:Edit", "BillingInformation:Read", "AccountSetting:Edit", "SubAccount:Read", "IMSetting:Read", "MeetingConnector:Read", "ThirdPartyConference:Read", "Meeting:Join", "CallInContacts:Read", "ZoomDevelopers:Read", "Recording:Read", "Role:Edit", "Recording:Edit", "DigitalSignage:Read", "ScheduleTrackingFields:Read", "ThirdPartyConference:Edit", "Group:Read", "AccountSetting:Read", "MeetingConnector:Edit", "Integration:Edit", "CallInContacts:Edit", "DigitalSignage:Edit", "MarketPlace:Read", "PbxAdmin:Edit", "ZoomRooms:Read", "MobileDeviceManagement:Read", "RecordingContent:Read", "User:Read", "ScheduleTrackingFields:Edit", "WebinarSetting:Read" ],
            "items" : {
              "type" : "string",
              "example" : "IMGroups:Edit"
            }
          }
        }
      },
      "inline_response_200_62" : {
        "type" : "object",
        "properties" : {
          "from" : {
            "type" : "string",
            "example" : "{}"
          },
          "meetings" : {
            "type" : "array",
            "example" : [ {
              "account_id" : "AbcjxkfhdEEE",
              "duration" : 1,
              "host_id" : "z8dfkgABBBBBBBfp8uQ",
              "id" : 1000000000000,
              "recording_count" : 1,
              "recording_files" : [ {
                "download_url" : "https://api.zoom.us/recording/download/pfA2AvvvvvAnAzOibbbbELxl",
                "file_size" : 10098,
                "file_type" : "M4A",
                "id" : "589ABBBBB-8718e",
                "meeting_id" : "gkABCDEnCkPuA==",
                "play_url" : "https://api.zoom.us/recording/play/pfA2AvvvvvAnAzOibbbbELxl",
                "recording_end" : "2019-08-29T21:55:24Z",
                "recording_start" : "2019-08-29T21:54:55Z",
                "recording_type" : "audio_only",
                "status" : "completed"
              }, {
                "download_url" : "https://api.zoom.us/recording/download/cc33ekldfdjfhf3-aaaaa",
                "file_type" : "TIMELINE",
                "meeting_id" : "gkABCDEnCkPuA==",
                "recording_end" : "2019-08-29T21:55:24Z",
                "recording_start" : "2019-08-29T21:54:55Z"
              }, {
                "download_url" : "https://api.zoom.us/recording/download/abcdkjfhdhfdhfj",
                "file_size" : 37285,
                "file_type" : "MP4",
                "id" : "96119b=kdfhf791",
                "meeting_id" : "gkABCDEnCkPuA==",
                "play_url" : "https://api.zoom.us/recording/play/abcdkjfhdhfdhfj",
                "recording_end" : "2019-08-29T21:55:24Z",
                "recording_start" : "2019-08-29T21:54:55Z",
                "recording_type" : "shared_screen_with_speaker_view",
                "status" : "completed"
              } ],
              "share_url" : "https://api.zoom.us/recording/share/IABCDJDKDJEEEEEk_GwfdggdgkTziMw",
              "start_time" : "2019-08-29T21:54:49Z",
              "timezone" : "America/Los_Angeles",
              "topic" : "MyTestPollMeeting",
              "total_size" : 47383,
              "type" : 2,
              "uuid" : "gkABCDEnCkPuA=="
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "account_id" : {
                  "type" : "string",
                  "example" : "AbcjxkfhdEEE"
                },
                "duration" : {
                  "type" : "number",
                  "example" : 1
                },
                "host_id" : {
                  "type" : "string",
                  "example" : "z8dfkgABBBBBBBfp8uQ"
                },
                "id" : {
                  "type" : "number",
                  "example" : 1000000000000
                },
                "recording_count" : {
                  "type" : "number",
                  "example" : 1
                },
                "recording_files" : {
                  "type" : "array",
                  "example" : [ {
                    "download_url" : "https://api.zoom.us/recording/download/pfA2AvvvvvAnAzOibbbbELxl",
                    "file_size" : 10098,
                    "file_type" : "M4A",
                    "id" : "589ABBBBB-8718e",
                    "meeting_id" : "gkABCDEnCkPuA==",
                    "play_url" : "https://api.zoom.us/recording/play/pfA2AvvvvvAnAzOibbbbELxl",
                    "recording_end" : "2019-08-29T21:55:24Z",
                    "recording_start" : "2019-08-29T21:54:55Z",
                    "recording_type" : "audio_only",
                    "status" : "completed"
                  }, {
                    "download_url" : "https://api.zoom.us/recording/download/cc33ekldfdjfhf3-aaaaa",
                    "file_type" : "TIMELINE",
                    "meeting_id" : "gkABCDEnCkPuA==",
                    "recording_end" : "2019-08-29T21:55:24Z",
                    "recording_start" : "2019-08-29T21:54:55Z"
                  }, {
                    "download_url" : "https://api.zoom.us/recording/download/abcdkjfhdhfdhfj",
                    "file_size" : 37285,
                    "file_type" : "MP4",
                    "id" : "96119b=kdfhf791",
                    "meeting_id" : "gkABCDEnCkPuA==",
                    "play_url" : "https://api.zoom.us/recording/play/abcdkjfhdhfdhfj",
                    "recording_end" : "2019-08-29T21:55:24Z",
                    "recording_start" : "2019-08-29T21:54:55Z",
                    "recording_type" : "shared_screen_with_speaker_view",
                    "status" : "completed"
                  } ],
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "download_url" : {
                        "type" : "string",
                        "example" : "https://api.zoom.us/recording/download/pfA2AvvvvvAnAzOibbbbELxl"
                      },
                      "file_size" : {
                        "type" : "number",
                        "example" : 10098
                      },
                      "file_type" : {
                        "type" : "string",
                        "example" : "M4A"
                      },
                      "id" : {
                        "type" : "string",
                        "example" : "589ABBBBB-8718e"
                      },
                      "meeting_id" : {
                        "type" : "string",
                        "example" : "gkABCDEnCkPuA=="
                      },
                      "play_url" : {
                        "type" : "string",
                        "example" : "https://api.zoom.us/recording/play/pfA2AvvvvvAnAzOibbbbELxl"
                      },
                      "recording_end" : {
                        "type" : "string",
                        "example" : "2019-08-29T21:55:24Z"
                      },
                      "recording_start" : {
                        "type" : "string",
                        "example" : "2019-08-29T21:54:55Z"
                      },
                      "recording_type" : {
                        "type" : "string",
                        "example" : "audio_only"
                      },
                      "status" : {
                        "type" : "string",
                        "example" : "completed"
                      }
                    }
                  }
                },
                "share_url" : {
                  "type" : "string",
                  "example" : "https://api.zoom.us/recording/share/IABCDJDKDJEEEEEk_GwfdggdgkTziMw"
                },
                "start_time" : {
                  "type" : "string",
                  "example" : "2019-08-29T21:54:49Z"
                },
                "timezone" : {
                  "type" : "string",
                  "example" : "America/Los_Angeles"
                },
                "topic" : {
                  "type" : "string",
                  "example" : "MyTestPollMeeting"
                },
                "total_size" : {
                  "type" : "number",
                  "example" : 47383
                },
                "type" : {
                  "type" : "number",
                  "example" : 2
                },
                "uuid" : {
                  "type" : "string",
                  "example" : "gkABCDEnCkPuA=="
                }
              }
            }
          },
          "next_page_token" : {
            "type" : "string",
            "example" : ""
          },
          "page_count" : {
            "type" : "number",
            "example" : 1
          },
          "page_size" : {
            "type" : "number",
            "example" : 30
          },
          "to" : {
            "type" : "string",
            "example" : "{}"
          },
          "total_records" : {
            "type" : "number",
            "example" : 1
          }
        }
      },
      "inline_response_200_63" : {
        "type" : "object",
        "properties" : {
          "schedulers" : {
            "type" : "array",
            "example" : [ {
              "email" : "sjfgduyfghdfg@myemail.dshdgshfd",
              "id" : "abXXXsfsidfhjdsfhd768944"
            }, {
              "email" : "sdhfefghdfg@myemail.dshdgshfd",
              "id" : "abXXbbbbioepur8944"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "email" : {
                  "type" : "string",
                  "example" : "sjfgduyfghdfg@myemail.dshdgshfd"
                },
                "id" : {
                  "type" : "string",
                  "example" : "abXXXsfsidfhjdsfhd768944"
                }
              }
            }
          }
        }
      },
      "inline_response_200_64" : {
        "type" : "object",
        "properties" : {
          "email_notification" : {
            "type" : "object",
            "properties" : {
              "alternative_host_reminder" : {
                "type" : "boolean",
                "example" : false
              },
              "cancel_meeting_reminder" : {
                "type" : "boolean",
                "example" : false
              },
              "jbh_reminder" : {
                "type" : "boolean",
                "example" : false
              },
              "schedule_for_reminder" : {
                "type" : "boolean",
                "example" : false
              }
            }
          },
          "feature" : {
            "type" : "object",
            "properties" : {
              "cn_meeting" : {
                "type" : "boolean",
                "example" : true
              },
              "in_meeting" : {
                "type" : "boolean",
                "example" : false
              },
              "large_meeting" : {
                "type" : "boolean",
                "example" : false
              },
              "meeting_capacity" : {
                "type" : "number",
                "example" : 100
              },
              "webinar" : {
                "type" : "boolean",
                "example" : false
              },
              "zoom_phone" : {
                "type" : "boolean",
                "example" : false
              }
            }
          },
          "in_meeting" : {
            "type" : "object",
            "properties" : {
              "allow_live_streaming" : {
                "type" : "boolean",
                "example" : false
              },
              "annotation" : {
                "type" : "boolean",
                "example" : true
              },
              "attendee_on_hold" : {
                "type" : "boolean",
                "example" : false
              },
              "auto_saving_chat" : {
                "type" : "boolean",
                "example" : false
              },
              "breakout_room" : {
                "type" : "boolean",
                "example" : false
              },
              "chat" : {
                "type" : "boolean",
                "example" : true
              },
              "closed_caption" : {
                "type" : "boolean",
                "example" : true
              },
              "co_host" : {
                "type" : "boolean",
                "example" : false
              },
              "custom_data_center_regions" : {
                "type" : "boolean",
                "example" : true
              },
              "data_center_regions" : {
                "type" : "array",
                "example" : [ "AU", "CN", "EU", "HK", "LA", "TY", "US" ],
                "items" : {
                  "type" : "string",
                  "example" : "AU"
                }
              },
              "e2e_encryption" : {
                "type" : "boolean",
                "example" : false
              },
              "entry_exit_chime" : {
                "type" : "string",
                "example" : "all"
              },
              "far_end_camera_control" : {
                "type" : "boolean",
                "example" : false
              },
              "feedback" : {
                "type" : "boolean",
                "example" : true
              },
              "group_hd" : {
                "type" : "boolean",
                "example" : false
              },
              "non_verbal_feedback" : {
                "type" : "boolean",
                "example" : false
              },
              "polling" : {
                "type" : "boolean",
                "example" : true
              },
              "private_chat" : {
                "type" : "boolean",
                "example" : true
              },
              "record_play_voice" : {
                "type" : "boolean",
                "example" : false
              },
              "remote_control" : {
                "type" : "boolean",
                "example" : true
              },
              "remote_support" : {
                "type" : "boolean",
                "example" : false
              },
              "show_meeting_control_toolbar" : {
                "type" : "boolean",
                "example" : false
              },
              "virtual_background" : {
                "type" : "boolean",
                "example" : true
              },
              "waiting_room" : {
                "type" : "boolean",
                "example" : false
              }
            }
          },
          "recording" : {
            "type" : "object",
            "properties" : {
              "auto_delete_cmr" : {
                "type" : "boolean",
                "example" : false
              },
              "auto_recording" : {
                "type" : "string",
                "example" : "none"
              },
              "cloud_recording" : {
                "type" : "boolean",
                "example" : true
              },
              "local_recording" : {
                "type" : "boolean",
                "example" : true
              },
              "record_audio_file" : {
                "type" : "boolean",
                "example" : true
              },
              "record_gallery_view" : {
                "type" : "boolean",
                "example" : false
              },
              "record_speaker_view" : {
                "type" : "boolean",
                "example" : true
              },
              "recording_audio_transcript" : {
                "type" : "boolean",
                "example" : true
              },
              "recording_password_requirement" : {
                "type" : "object",
                "properties" : {
                  "have_letter" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "have_number" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "have_special_character" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "length" : {
                    "type" : "number",
                    "example" : 8
                  },
                  "only_allow_numeric" : {
                    "type" : "boolean",
                    "example" : false
                  }
                }
              },
              "save_chat_text" : {
                "type" : "boolean",
                "example" : true
              },
              "show_timestamp" : {
                "type" : "boolean",
                "example" : false
              }
            }
          },
          "schedule_meeting" : {
            "type" : "object",
            "properties" : {
              "audio_type" : {
                "type" : "string",
                "example" : "both"
              },
              "embed_password_in_join_link" : {
                "type" : "boolean",
                "example" : false
              },
              "force_pmi_jbh_password" : {
                "type" : "boolean",
                "example" : true
              },
              "host_video" : {
                "type" : "boolean",
                "example" : true
              },
              "join_before_host" : {
                "type" : "boolean",
                "example" : false
              },
              "meeting_password_requirement" : {
                "type" : "object",
                "properties" : {
                  "have_letter" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "have_number" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "have_special_character" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "length" : {
                    "type" : "number",
                    "example" : 6
                  },
                  "only_allow_numeric" : {
                    "type" : "boolean",
                    "example" : false
                  }
                }
              },
              "not_store_meeting_topic" : {
                "type" : "boolean",
                "example" : false
              },
              "participants_video" : {
                "type" : "boolean",
                "example" : false
              },
              "pmi_password" : {
                "type" : "string",
                "example" : "98654"
              },
              "pstn_password_protected" : {
                "type" : "boolean",
                "example" : false
              },
              "require_password_for_pmi_meetings" : {
                "type" : "string",
                "example" : "all"
              },
              "require_password_for_scheduling_new_meetings" : {
                "type" : "boolean",
                "example" : false
              },
              "use_pmi_for_instant_meetings" : {
                "type" : "boolean",
                "example" : true
              },
              "use_pmi_for_scheduled_meetings" : {
                "type" : "boolean",
                "example" : false
              }
            }
          },
          "telephony" : {
            "type" : "object",
            "properties" : {
              "audio_conference_info" : {
                "type" : "string",
                "example" : ""
              },
              "show_international_numbers_link" : {
                "type" : "boolean",
                "example" : false
              },
              "third_party_audio" : {
                "type" : "boolean",
                "example" : false
              }
            }
          },
          "tsp" : {
            "type" : "object",
            "properties" : {
              "call_out" : {
                "type" : "boolean",
                "example" : true
              },
              "call_out_countries" : {
                "type" : "array",
                "example" : [ "USA" ],
                "items" : {
                  "type" : "string",
                  "example" : "USA"
                }
              },
              "show_international_numbers_link" : {
                "type" : "boolean",
                "example" : false
              }
            }
          }
        }
      },
      "inline_response_200_65" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string",
            "example" : "string"
          }
        }
      },
      "inline_response_200_66" : {
        "type" : "object",
        "properties" : {
          "tsp_accounts" : {
            "type" : "array",
            "example" : [ {
              "conference_code" : "0125",
              "dial_in_numbers" : [ {
                "code" : "01",
                "number" : "000000000",
                "type" : "toll"
              } ],
              "id" : 111222222,
              "leader_pin" : "11189898",
              "tsp_bridge" : "string"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "conference_code" : {
                  "type" : "string",
                  "example" : "0125"
                },
                "dial_in_numbers" : {
                  "type" : "array",
                  "example" : [ {
                    "code" : "01",
                    "number" : "000000000",
                    "type" : "toll"
                  } ],
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "code" : {
                        "type" : "string",
                        "example" : "01"
                      },
                      "number" : {
                        "type" : "string",
                        "example" : "000000000"
                      },
                      "type" : {
                        "type" : "string",
                        "example" : "toll"
                      }
                    }
                  }
                },
                "id" : {
                  "type" : "number",
                  "example" : 111222222
                },
                "leader_pin" : {
                  "type" : "string",
                  "example" : "11189898"
                },
                "tsp_bridge" : {
                  "type" : "string",
                  "example" : "string"
                }
              }
            }
          }
        }
      },
      "inline_response_201_13" : {
        "type" : "object",
        "properties" : {
          "conference_code" : {
            "type" : "string",
            "example" : "0125"
          },
          "dial_in_numbers" : {
            "type" : "array",
            "example" : [ {
              "code" : "01",
              "number" : "000000000",
              "type" : "toll"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "string",
                  "example" : "01"
                },
                "number" : {
                  "type" : "string",
                  "example" : "000000000"
                },
                "type" : {
                  "type" : "string",
                  "example" : "toll"
                }
              }
            }
          },
          "leader_pin" : {
            "type" : "string",
            "example" : "11189898"
          },
          "tsp_bridge" : {
            "type" : "string",
            "example" : "string"
          }
        }
      },
      "inline_response_200_67" : {
        "type" : "object",
        "properties" : {
          "conference_code" : {
            "type" : "string",
            "example" : "1275454"
          },
          "dial_in_numbers" : {
            "type" : "array",
            "example" : [ {
              "code" : "675",
              "number" : "00000000",
              "type" : "toll"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "string",
                  "example" : "675"
                },
                "number" : {
                  "type" : "string",
                  "example" : "00000000"
                },
                "type" : {
                  "type" : "string",
                  "example" : "toll"
                }
              }
            }
          },
          "id" : {
            "type" : "string",
            "example" : "0123444444"
          },
          "leader_pin" : {
            "type" : "string",
            "example" : "111"
          },
          "tsp_bridge" : {
            "type" : "string",
            "example" : "string"
          }
        }
      },
      "inline_response_200_68" : {
        "type" : "object",
        "properties" : {
          "templates" : {
            "type" : "array",
            "example" : [ {
              "id" : "ull6574eur",
              "name" : "Weekly Meeting Template"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "example" : "ull6574eur"
                },
                "name" : {
                  "type" : "string",
                  "example" : "Weekly Meeting Template"
                }
              }
            }
          },
          "total_records" : {
            "type" : "number",
            "example" : 1
          }
        }
      },
      "inline_response_201_14" : {
        "type" : "object",
        "properties" : {
          "agenda" : {
            "type" : "string",
            "example" : "string"
          },
          "created_at" : {
            "type" : "string",
            "example" : "string [date-time]"
          },
          "duration" : {
            "type" : "string",
            "example" : "integer"
          },
          "host_id" : {
            "type" : "string",
            "example" : "string"
          },
          "id" : {
            "type" : "string",
            "example" : "integer"
          },
          "join_url" : {
            "type" : "string",
            "example" : "string"
          },
          "occurrences" : {
            "type" : "array",
            "example" : [ {
              "duration" : "integer",
              "occurrence_id" : "integer",
              "start_time" : "string [date-time]",
              "status" : "string"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "duration" : {
                  "type" : "string",
                  "example" : "integer"
                },
                "occurrence_id" : {
                  "type" : "string",
                  "example" : "integer"
                },
                "start_time" : {
                  "type" : "string",
                  "example" : "string [date-time]"
                },
                "status" : {
                  "type" : "string",
                  "example" : "string"
                }
              }
            }
          },
          "settings" : {
            "type" : "object",
            "properties" : {
              "allow_multiple_devices" : {
                "type" : "string",
                "example" : "boolean"
              },
              "alternative_hosts" : {
                "type" : "string",
                "example" : "string"
              },
              "approval_type" : {
                "type" : "string",
                "example" : "integer"
              },
              "attendees_and_panelists_reminder_email_notification" : {
                "type" : "object",
                "properties" : {
                  "enable" : {
                    "type" : "string",
                    "example" : "boolean"
                  },
                  "type" : {
                    "type" : "string",
                    "example" : "integer"
                  }
                }
              },
              "audio" : {
                "type" : "string",
                "example" : "string"
              },
              "auto_recording" : {
                "type" : "string",
                "example" : "string"
              },
              "close_registration" : {
                "type" : "string",
                "example" : "boolean"
              },
              "email_language" : {
                "type" : "string",
                "example" : "string"
              },
              "enforce_login" : {
                "type" : "string",
                "example" : "boolean"
              },
              "enforce_login_domains" : {
                "type" : "string",
                "example" : "string"
              },
              "follow_up_absentees_email_notification" : {
                "type" : "object",
                "properties" : {
                  "enable" : {
                    "type" : "string",
                    "example" : "boolean"
                  },
                  "type" : {
                    "type" : "string",
                    "example" : "integer"
                  }
                }
              },
              "follow_up_attendees_email_notification" : {
                "type" : "object",
                "properties" : {
                  "enable" : {
                    "type" : "string",
                    "example" : "boolean"
                  },
                  "type" : {
                    "type" : "string",
                    "example" : "integer"
                  }
                }
              },
              "hd_video" : {
                "type" : "string",
                "example" : "boolean"
              },
              "host_video" : {
                "type" : "string",
                "example" : "boolean"
              },
              "panelists_invitation_email_notification" : {
                "type" : "string",
                "example" : "boolean"
              },
              "panelists_video" : {
                "type" : "string",
                "example" : "boolean"
              },
              "practice_session" : {
                "type" : "string",
                "example" : "boolean"
              },
              "registrants_confirmation_email" : {
                "type" : "string",
                "example" : "boolean"
              },
              "registrants_email_notification" : {
                "type" : "string",
                "example" : "boolean"
              },
              "registration_type" : {
                "type" : "string",
                "example" : "integer"
              },
              "show_share_button" : {
                "type" : "string",
                "example" : "boolean"
              }
            }
          },
          "start_time" : {
            "type" : "string",
            "example" : "string [date-time]"
          },
          "start_url" : {
            "type" : "string",
            "example" : "string"
          },
          "timezone" : {
            "type" : "string",
            "example" : "string"
          },
          "topic" : {
            "type" : "string",
            "example" : "string"
          },
          "type" : {
            "type" : "string",
            "example" : "integer"
          },
          "uuid" : {
            "type" : "string",
            "example" : "string"
          }
        }
      },
      "inline_response_200_69" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "example" : "2019-09-13T15:35:00Z"
          },
          "duration" : {
            "type" : "number",
            "example" : 60
          },
          "host_id" : {
            "type" : "string",
            "example" : "Labcjskdfsjgfg"
          },
          "id" : {
            "type" : "number",
            "example" : 12345678
          },
          "join_url" : {
            "type" : "string",
            "example" : "https://zoom.us/j/12345678"
          },
          "settings" : {
            "type" : "object",
            "properties" : {
              "allow_multiple_devices" : {
                "type" : "boolean",
                "example" : true
              },
              "alternative_hosts" : {
                "type" : "string",
                "example" : ""
              },
              "approval_type" : {
                "type" : "number",
                "example" : 2
              },
              "attendees_and_panelists_reminder_email_notification" : {
                "type" : "object",
                "properties" : {
                  "enable" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "type" : {
                    "type" : "number",
                    "example" : 1
                  }
                }
              },
              "audio" : {
                "type" : "string",
                "example" : "both"
              },
              "auto_recording" : {
                "type" : "string",
                "example" : "local"
              },
              "close_registration" : {
                "type" : "boolean",
                "example" : true
              },
              "contact_email" : {
                "type" : "string",
                "example" : "wonderfulemail@someemail.dsgfdjf"
              },
              "contact_name" : {
                "type" : "string",
                "example" : "Wonderful person"
              },
              "email_language" : {
                "type" : "string",
                "example" : "en-US"
              },
              "enforce_login" : {
                "type" : "boolean",
                "example" : false
              },
              "enforce_login_domains" : {
                "type" : "string",
                "example" : ""
              },
              "follow_up_absentees_email_notification" : {
                "type" : "object",
                "properties" : {
                  "enable" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "type" : {
                    "type" : "number",
                    "example" : 1
                  }
                }
              },
              "follow_up_attendees_email_notification" : {
                "type" : "object",
                "properties" : {
                  "enable" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "type" : {
                    "type" : "number",
                    "example" : 1
                  }
                }
              },
              "global_dial_in_countries" : {
                "type" : "array",
                "example" : [ "US" ],
                "items" : {
                  "type" : "string",
                  "example" : "US"
                }
              },
              "global_dial_in_numbers" : {
                "type" : "array",
                "example" : [ {
                  "city" : "New York",
                  "country" : "US",
                  "country_name" : "US",
                  "number" : "+1 00000",
                  "type" : "toll"
                }, {
                  "city" : "San Jose",
                  "country" : "US",
                  "country_name" : "US",
                  "number" : "+1 111111111",
                  "type" : "toll"
                }, {
                  "city" : "San Jose",
                  "country" : "US",
                  "country_name" : "US",
                  "number" : "+1 11111110",
                  "type" : "toll"
                } ],
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "city" : {
                      "type" : "string",
                      "example" : "New York"
                    },
                    "country" : {
                      "type" : "string",
                      "example" : "US"
                    },
                    "country_name" : {
                      "type" : "string",
                      "example" : "US"
                    },
                    "number" : {
                      "type" : "string",
                      "example" : "+1 00000"
                    },
                    "type" : {
                      "type" : "string",
                      "example" : "toll"
                    }
                  }
                }
              },
              "hd_video" : {
                "type" : "boolean",
                "example" : false
              },
              "host_video" : {
                "type" : "boolean",
                "example" : false
              },
              "on_demand" : {
                "type" : "boolean",
                "example" : false
              },
              "panelists_invitation_email_notification" : {
                "type" : "boolean",
                "example" : true
              },
              "panelists_video" : {
                "type" : "boolean",
                "example" : false
              },
              "practice_session" : {
                "type" : "boolean",
                "example" : false
              },
              "question_answer" : {
                "type" : "boolean",
                "example" : true
              },
              "registrants_confirmation_email" : {
                "type" : "boolean",
                "example" : true
              },
              "registrants_email_notification" : {
                "type" : "boolean",
                "example" : true
              },
              "registrants_restrict_number" : {
                "type" : "number",
                "example" : 0
              },
              "show_share_button" : {
                "type" : "boolean",
                "example" : true
              }
            }
          },
          "start_time" : {
            "type" : "string",
            "example" : "2019-08-30T22:00:00Z"
          },
          "start_url" : {
            "type" : "string",
            "example" : "https://zoom.us/s/00000011110?zhghTlUT1Rjd2FXRgh0amxoejNQZ1EiLCJjaWQiOiIifQ.NJ0CXWQ-yhI8Xv01JvxityBtzp3Bt7odMOEG2L8DLmY"
          },
          "timezone" : {
            "type" : "string",
            "example" : "America/New_York"
          },
          "topic" : {
            "type" : "string",
            "example" : "Test Webinar"
          },
          "type" : {
            "type" : "number",
            "example" : 5
          },
          "uuid" : {
            "type" : "string",
            "example" : "nWMHAAAAAAAAAAAAAUDP1A=="
          }
        }
      },
      "inline_response_200_70" : {
        "type" : "object",
        "properties" : {
          "registrants" : {
            "type" : "array",
            "example" : [ {
              "email" : "AqJiu@BkIJbPQOXXngjYCpbrlI.zyax",
              "join_url" : " https://zoom.us/w/9999999?tk=oZuwHfdgAAAAAAAAAAAAAAAA&uuid=WN_XW4_SdxBBBBxLDQt",
              "registrant_id" : "conseret14re"
            }, {
              "email" : "DEih6AZ@mvRTbzqfUSOItBkyPDbNbAW.ouz",
              "join_url" : " https://zoom.us/w/9999999?tk=oZu52542356AAAAAA&uuid=WN_XW4_SdxBBBBxLDQt",
              "registrant_id" : "fdgsfh2ey82fuh"
            }, {
              "email" : "i8OzhqFt2h@YKJmTmm.tge",
              "join_url" : " https://zoom.us/w/9999999?tk=ozghdfdsghf36AAA&uuid=WN_XW4_SdxBBBBxLDQt",
              "registrant_id" : "hdsfhjf3iwh"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "email" : {
                  "type" : "string",
                  "example" : "AqJiu@BkIJbPQOXXngjYCpbrlI.zyax"
                },
                "join_url" : {
                  "type" : "string",
                  "example" : " https://zoom.us/w/9999999?tk=oZuwHfdgAAAAAAAAAAAAAAAA&uuid=WN_XW4_SdxBBBBxLDQt"
                },
                "registrant_id" : {
                  "type" : "string",
                  "example" : "conseret14re"
                }
              }
            }
          }
        }
      },
      "inline_response_200_71" : {
        "type" : "object",
        "properties" : {
          "panelists" : {
            "type" : "array",
            "example" : [ {
              "email" : "maryjkdfdsgfshdgf@jdfdkjdglfk.jkfgdj",
              "name" : "Mary"
            }, {
              "email" : "dfdsgfsdhf@jkgfdgfkdhgfdjg.fkjgdf",
              "name" : "Mike"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "email" : {
                  "type" : "string",
                  "example" : "maryjkdfdsgfshdgf@jdfdkjdglfk.jkfgdj"
                },
                "name" : {
                  "type" : "string",
                  "example" : "Mary"
                }
              }
            }
          },
          "total_records" : {
            "type" : "string",
            "example" : "2"
          }
        }
      },
      "inline_response_201_15" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "doetwerggrlor"
          },
          "updated_at" : {
            "type" : "string",
            "example" : "2019-01-25T10:04:27.051Z"
          }
        }
      },
      "inline_response_200_72" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "cdjfhdsdfd"
          },
          "questions" : {
            "type" : "array",
            "example" : [ {
              "answers" : [ "Good", "Not so good" ],
              "name" : "How are you?",
              "type" : "multiple"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "answers" : {
                  "type" : "array",
                  "example" : [ "Good", "Not so good" ],
                  "items" : {
                    "type" : "string",
                    "example" : "Good"
                  }
                },
                "name" : {
                  "type" : "string",
                  "example" : "How are you?"
                },
                "type" : {
                  "type" : "string",
                  "example" : "multiple"
                }
              }
            }
          },
          "status" : {
            "type" : "string",
            "example" : "ended"
          },
          "title" : {
            "type" : "string",
            "example" : "Learn something new"
          }
        }
      },
      "inline_response_200_73" : {
        "type" : "object",
        "properties" : {
          "page_count" : {
            "type" : "string",
            "example" : "1"
          },
          "page_number" : {
            "type" : "string",
            "example" : "1"
          },
          "page_size" : {
            "type" : "string",
            "example" : "30"
          },
          "registrants" : {
            "type" : "array",
            "example" : [ {
              "address" : "dsfhkdjsfh st",
              "city" : "jackson heights",
              "comments" : "Looking forward to the Webinar",
              "country" : "US",
              "create_time" : "2019-02-26T23:01:16.899Z",
              "custom_questions" : [ {
                "title" : "What do you hope to learn from this Webinar?",
                "value" : "Look forward to learning how you come up with new recipes and what other services you offer."
              } ],
              "email" : "sjfkghdsg@someemail.dfgjd",
              "first_name" : "Jill",
              "id" : "24000002122",
              "industry" : "Food",
              "job_title" : "Chef",
              "join_url" : "https://zoom.us/webinar/mywebinarissocooldighdghodghodg",
              "last_name" : "Chill",
              "no_of_employees" : "10",
              "org" : "Cooking Org",
              "phone" : "00000000",
              "purchasing_time_frame" : "1-3 months",
              "role_in_purchase_process" : "Influencer",
              "state" : "NY",
              "status" : "approved",
              "zip" : "11371"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "address" : {
                  "type" : "string",
                  "example" : "dsfhkdjsfh st"
                },
                "city" : {
                  "type" : "string",
                  "example" : "jackson heights"
                },
                "comments" : {
                  "type" : "string",
                  "example" : "Looking forward to the Webinar"
                },
                "country" : {
                  "type" : "string",
                  "example" : "US"
                },
                "create_time" : {
                  "type" : "string",
                  "example" : "2019-02-26T23:01:16.899Z"
                },
                "custom_questions" : {
                  "type" : "array",
                  "example" : [ {
                    "title" : "What do you hope to learn from this Webinar?",
                    "value" : "Look forward to learning how you come up with new recipes and what other services you offer."
                  } ],
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "title" : {
                        "type" : "string",
                        "example" : "What do you hope to learn from this Webinar?"
                      },
                      "value" : {
                        "type" : "string",
                        "example" : "Look forward to learning how you come up with new recipes and what other services you offer."
                      }
                    }
                  }
                },
                "email" : {
                  "type" : "string",
                  "example" : "sjfkghdsg@someemail.dfgjd"
                },
                "first_name" : {
                  "type" : "string",
                  "example" : "Jill"
                },
                "id" : {
                  "type" : "string",
                  "example" : "24000002122"
                },
                "industry" : {
                  "type" : "string",
                  "example" : "Food"
                },
                "job_title" : {
                  "type" : "string",
                  "example" : "Chef"
                },
                "join_url" : {
                  "type" : "string",
                  "example" : "https://zoom.us/webinar/mywebinarissocooldighdghodghodg"
                },
                "last_name" : {
                  "type" : "string",
                  "example" : "Chill"
                },
                "no_of_employees" : {
                  "type" : "string",
                  "example" : "10"
                },
                "org" : {
                  "type" : "string",
                  "example" : "Cooking Org"
                },
                "phone" : {
                  "type" : "string",
                  "example" : "00000000"
                },
                "purchasing_time_frame" : {
                  "type" : "string",
                  "example" : "1-3 months"
                },
                "role_in_purchase_process" : {
                  "type" : "string",
                  "example" : "Influencer"
                },
                "state" : {
                  "type" : "string",
                  "example" : "NY"
                },
                "status" : {
                  "type" : "string",
                  "example" : "approved"
                },
                "zip" : {
                  "type" : "string",
                  "example" : "11371"
                }
              }
            }
          },
          "total_records" : {
            "type" : "string",
            "example" : "1"
          }
        }
      },
      "inline_response_201_16" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "velit dolore minim Ut"
          },
          "join_url" : {
            "type" : "string",
            "example" : "pariatur"
          },
          "registrant_id" : {
            "type" : "string",
            "example" : "culpa deserunt ea est commodo"
          },
          "start_time" : {
            "type" : "string",
            "example" : "1974-02-26T23:01:16.899Z"
          },
          "topic" : {
            "type" : "string",
            "example" : "et laboris Lorem in Ut"
          }
        }
      },
      "inline_response_200_74" : {
        "type" : "object",
        "properties" : {
          "custom_questions" : {
            "type" : "array",
            "example" : [ {
              "answers" : [ "array of answer choices" ],
              "required" : "boolean",
              "title" : "string",
              "type" : "string"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "answers" : {
                  "type" : "array",
                  "example" : [ "array of answer choices" ],
                  "items" : {
                    "type" : "string",
                    "example" : "array of answer choices"
                  }
                },
                "required" : {
                  "type" : "string",
                  "example" : "boolean"
                },
                "title" : {
                  "type" : "string",
                  "example" : "string"
                },
                "type" : {
                  "type" : "string",
                  "example" : "string"
                }
              }
            }
          },
          "questions" : {
            "type" : "array",
            "example" : [ {
              "field_name" : "string",
              "required" : "boolean"
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "field_name" : {
                  "type" : "string",
                  "example" : "string"
                },
                "required" : {
                  "type" : "string",
                  "example" : "boolean"
                }
              }
            }
          }
        }
      },
      "inline_response_200_75" : {
        "type" : "object",
        "properties" : {
          "total_records" : {
            "type" : "number",
            "example" : 1
          },
          "tracking_sources" : {
            "type" : "array",
            "example" : [ {
              "id" : "1100011100",
              "registrationr_count" : 1,
              "source_name" : "general",
              "tracking_url" : "https://zoom.us/webinar/register/1100011100/WN_6ToMP5n6Quas2SdMjIWu7Q",
              "visitor_count" : 2
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "example" : "1100011100"
                },
                "registrationr_count" : {
                  "type" : "number",
                  "example" : 1
                },
                "source_name" : {
                  "type" : "string",
                  "example" : "general"
                },
                "tracking_url" : {
                  "type" : "string",
                  "example" : "https://zoom.us/webinar/register/1100011100/WN_6ToMP5n6Quas2SdMjIWu7Q"
                },
                "visitor_count" : {
                  "type" : "number",
                  "example" : 2
                }
              }
            }
          }
        }
      }
    }
  }
}